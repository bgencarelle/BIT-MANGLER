Loading plugins phase: Elapsed time ==> 0s.264ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -d CY8C5888LTQ-LP097 -s C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.283ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.107ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  ADC_DAC.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 ADC_DAC.v -verilog
======================================================================

======================================================================
Compiling:  ADC_DAC.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 ADC_DAC.v -verilog
======================================================================

======================================================================
Compiling:  ADC_DAC.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 -verilog ADC_DAC.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Fri Apr 14 16:21:58 2017


======================================================================
Compiling:  ADC_DAC.v
Program  :   vpp
Options  :    -yv2 -q10 ADC_DAC.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Fri Apr 14 16:21:58 2017

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_SPI_Master_v2_50\B_SPI_Master_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_tff_v1_0\cy_tff_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\Cheap_PWM\Cheap_PWM.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'ADC_DAC.ctl'.
ADC_DAC.v (line 1124, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\Cheap_PWM\Cheap_PWM.v (line 29, col 57):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\Cheap_PWM\Cheap_PWM.v (line 33, col 83):  Note: Substituting module 'cmp_vv_vv' for '<='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  ADC_DAC.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 -verilog ADC_DAC.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Fri Apr 14 16:21:58 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\autoseltemp\ADC_DAC.ctl'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\autoseltemp\ADC_DAC.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_SPI_Master_v2_50\B_SPI_Master_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_tff_v1_0\cy_tff_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\Cheap_PWM\Cheap_PWM.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  ADC_DAC.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 -verilog ADC_DAC.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Fri Apr 14 16:21:58 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\autoseltemp\ADC_DAC.ctl'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\autoseltemp\ADC_DAC.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_SPI_Master_v2_50\B_SPI_Master_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_tff_v1_0\cy_tff_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\Cheap_PWM\Cheap_PWM.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\ADC_SAR_1:Net_221\
	\ADC_SAR_1:Net_381\
	\SPI_DAC:BSPIM:mosi_after_ld\
	\SPI_DAC:BSPIM:so_send\
	\SPI_DAC:BSPIM:mosi_fin\
	\SPI_DAC:BSPIM:mosi_cpha_0\
	\SPI_DAC:BSPIM:mosi_cpha_1\
	\SPI_DAC:BSPIM:pre_mosi\
	\SPI_DAC:BSPIM:dpcounter_zero\
	\SPI_DAC:BSPIM:control_7\
	\SPI_DAC:BSPIM:control_6\
	\SPI_DAC:BSPIM:control_5\
	\SPI_DAC:BSPIM:control_4\
	\SPI_DAC:BSPIM:control_3\
	\SPI_DAC:BSPIM:control_2\
	\SPI_DAC:BSPIM:control_1\
	\SPI_DAC:BSPIM:control_0\
	\SPI_DAC:Net_294\
	Net_6023
	\ADC_SAR_Seq:SAR:Net_221\
	\ADC_SAR_Seq:SAR:Net_381\
	\ADC_SAR_Seq:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq:soc_out\
	\ADC_SAR_Seq:Net_3905\
	\ADC_SAR_Seq:Net_3867\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq:MODULE_1:lt\
	\ADC_SAR_Seq:MODULE_1:gt\
	\ADC_SAR_Seq:MODULE_1:gte\
	\ADC_SAR_Seq:MODULE_1:lte\
	\ADC_SAR_Seq:MODULE_1:neq\
	Net_21783
	Net_21780
	\PWM_ADC_CK:Net_114\
	\DIV_MASK_MSB:control_bus_7\
	\DIV_MASK_MSB:control_bus_6\
	\DIV_MASK_MSB:control_bus_5\
	\DIV_MASK_MSB:control_bus_4\
	\Bit_Div_4:MODULE_2:g2:a0:b_3\
	\Bit_Div_4:MODULE_2:g2:a0:b_2\
	\Bit_Div_4:MODULE_2:g2:a0:b_1\
	\Bit_Div_4:MODULE_2:g2:a0:b_0\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_4:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_4:MODULE_3:g1:a0:xeq\
	\Bit_Div_4:MODULE_3:g1:a0:xneq\
	\Bit_Div_4:MODULE_3:g1:a0:xlt\
	\Bit_Div_4:MODULE_3:g1:a0:xgt\
	\Bit_Div_4:MODULE_3:g1:a0:xgte\
	\Bit_Div_4:MODULE_3:lt\
	\Bit_Div_4:MODULE_3:eq\
	\Bit_Div_4:MODULE_3:gt\
	\Bit_Div_4:MODULE_3:gte\
	\Bit_Div_4:MODULE_3:neq\
	\Bit_Div_5:MODULE_2:g2:a0:b_3\
	\Bit_Div_5:MODULE_2:g2:a0:b_2\
	\Bit_Div_5:MODULE_2:g2:a0:b_1\
	\Bit_Div_5:MODULE_2:g2:a0:b_0\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_5:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_5:MODULE_3:g1:a0:xeq\
	\Bit_Div_5:MODULE_3:g1:a0:xneq\
	\Bit_Div_5:MODULE_3:g1:a0:xlt\
	\Bit_Div_5:MODULE_3:g1:a0:xgt\
	\Bit_Div_5:MODULE_3:g1:a0:xgte\
	\Bit_Div_5:MODULE_3:lt\
	\Bit_Div_5:MODULE_3:eq\
	\Bit_Div_5:MODULE_3:gt\
	\Bit_Div_5:MODULE_3:gte\
	\Bit_Div_5:MODULE_3:neq\
	\Bit_Div_10:MODULE_2:g2:a0:b_3\
	\Bit_Div_10:MODULE_2:g2:a0:b_2\
	\Bit_Div_10:MODULE_2:g2:a0:b_1\
	\Bit_Div_10:MODULE_2:g2:a0:b_0\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_10:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_10:MODULE_3:g1:a0:xeq\
	\Bit_Div_10:MODULE_3:g1:a0:xneq\
	\Bit_Div_10:MODULE_3:g1:a0:xlt\
	\Bit_Div_10:MODULE_3:g1:a0:xgt\
	\Bit_Div_10:MODULE_3:g1:a0:xgte\
	\Bit_Div_10:MODULE_3:lt\
	\Bit_Div_10:MODULE_3:eq\
	\Bit_Div_10:MODULE_3:gt\
	\Bit_Div_10:MODULE_3:gte\
	\Bit_Div_10:MODULE_3:neq\
	\Bit_Div_11:MODULE_2:g2:a0:b_3\
	\Bit_Div_11:MODULE_2:g2:a0:b_2\
	\Bit_Div_11:MODULE_2:g2:a0:b_1\
	\Bit_Div_11:MODULE_2:g2:a0:b_0\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_11:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_11:MODULE_3:g1:a0:xeq\
	\Bit_Div_11:MODULE_3:g1:a0:xneq\
	\Bit_Div_11:MODULE_3:g1:a0:xlt\
	\Bit_Div_11:MODULE_3:g1:a0:xgt\
	\Bit_Div_11:MODULE_3:g1:a0:xgte\
	\Bit_Div_11:MODULE_3:lt\
	\Bit_Div_11:MODULE_3:eq\
	\Bit_Div_11:MODULE_3:gt\
	\Bit_Div_11:MODULE_3:gte\
	\Bit_Div_11:MODULE_3:neq\
	\Bit_Div_6:MODULE_2:g2:a0:b_3\
	\Bit_Div_6:MODULE_2:g2:a0:b_2\
	\Bit_Div_6:MODULE_2:g2:a0:b_1\
	\Bit_Div_6:MODULE_2:g2:a0:b_0\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_6:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_6:MODULE_3:g1:a0:xeq\
	\Bit_Div_6:MODULE_3:g1:a0:xneq\
	\Bit_Div_6:MODULE_3:g1:a0:xlt\
	\Bit_Div_6:MODULE_3:g1:a0:xgt\
	\Bit_Div_6:MODULE_3:g1:a0:xgte\
	\Bit_Div_6:MODULE_3:lt\
	\Bit_Div_6:MODULE_3:eq\
	\Bit_Div_6:MODULE_3:gt\
	\Bit_Div_6:MODULE_3:gte\
	\Bit_Div_6:MODULE_3:neq\
	\Bit_Div_7:MODULE_2:g2:a0:b_3\
	\Bit_Div_7:MODULE_2:g2:a0:b_2\
	\Bit_Div_7:MODULE_2:g2:a0:b_1\
	\Bit_Div_7:MODULE_2:g2:a0:b_0\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_7:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_7:MODULE_3:g1:a0:xeq\
	\Bit_Div_7:MODULE_3:g1:a0:xneq\
	\Bit_Div_7:MODULE_3:g1:a0:xlt\
	\Bit_Div_7:MODULE_3:g1:a0:xgt\
	\Bit_Div_7:MODULE_3:g1:a0:xgte\
	\Bit_Div_7:MODULE_3:lt\
	\Bit_Div_7:MODULE_3:eq\
	\Bit_Div_7:MODULE_3:gt\
	\Bit_Div_7:MODULE_3:gte\
	\Bit_Div_7:MODULE_3:neq\
	\Bit_Div_8:MODULE_2:g2:a0:b_3\
	\Bit_Div_8:MODULE_2:g2:a0:b_2\
	\Bit_Div_8:MODULE_2:g2:a0:b_1\
	\Bit_Div_8:MODULE_2:g2:a0:b_0\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_8:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_8:MODULE_3:g1:a0:xeq\
	\Bit_Div_8:MODULE_3:g1:a0:xneq\
	\Bit_Div_8:MODULE_3:g1:a0:xlt\
	\Bit_Div_8:MODULE_3:g1:a0:xgt\
	\Bit_Div_8:MODULE_3:g1:a0:xgte\
	\Bit_Div_8:MODULE_3:lt\
	\Bit_Div_8:MODULE_3:eq\
	\Bit_Div_8:MODULE_3:gt\
	\Bit_Div_8:MODULE_3:gte\
	\Bit_Div_8:MODULE_3:neq\
	\Bit_Div_9:MODULE_2:g2:a0:b_3\
	\Bit_Div_9:MODULE_2:g2:a0:b_2\
	\Bit_Div_9:MODULE_2:g2:a0:b_1\
	\Bit_Div_9:MODULE_2:g2:a0:b_0\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:xnor_array_3\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:xnor_array_0\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:aeqb_0\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:eq_0\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:eq_1\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:eq_2\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:eq_3\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:eqi_0\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:aeqb_1\
	\Bit_Div_9:MODULE_3:g1:a0:gx:u0:albi_0\
	\Bit_Div_9:MODULE_3:g1:a0:xeq\
	\Bit_Div_9:MODULE_3:g1:a0:xneq\
	\Bit_Div_9:MODULE_3:g1:a0:xlt\
	\Bit_Div_9:MODULE_3:g1:a0:xgt\
	\Bit_Div_9:MODULE_3:g1:a0:xgte\
	\Bit_Div_9:MODULE_3:lt\
	\Bit_Div_9:MODULE_3:eq\
	\Bit_Div_9:MODULE_3:gt\
	\Bit_Div_9:MODULE_3:gte\
	\Bit_Div_9:MODULE_3:neq\
	\ADC_1_OUT_MSB:control_bus_7\
	\ADC_1_OUT_MSB:control_bus_6\
	\ADC_1_OUT_MSB:control_bus_5\
	\ADC_1_OUT_MSB:control_bus_4\


Deleted 244 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_5\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_4\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_3\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_2\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_1\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing one to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Filter:Net_1\ to zero
Aliasing \Filter:Net_4\ to zero
Aliasing \Filter:Net_5\ to zero
Aliasing \ADC_SAR_1:vp_ctl_0\ to zero
Aliasing \ADC_SAR_1:vp_ctl_2\ to zero
Aliasing \ADC_SAR_1:vn_ctl_1\ to zero
Aliasing \ADC_SAR_1:vn_ctl_3\ to zero
Aliasing \ADC_SAR_1:vp_ctl_1\ to zero
Aliasing \ADC_SAR_1:vp_ctl_3\ to zero
Aliasing \ADC_SAR_1:vn_ctl_0\ to zero
Aliasing \ADC_SAR_1:vn_ctl_2\ to zero
Aliasing tmpOE__AUDIO_IN_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__DIV_MUX_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__MASK_OFF_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__MOSI_OUT_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__SAMPLE_RATE_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__VREF_BUFF_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \SPI_DAC:BSPIM:pol_supprt\ to zero
Aliasing \SPI_DAC:BSPIM:tx_status_3\ to \SPI_DAC:BSPIM:load_rx_data\
Aliasing \SPI_DAC:BSPIM:tx_status_6\ to zero
Aliasing \SPI_DAC:BSPIM:tx_status_5\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_3\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_2\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_1\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_0\ to zero
Aliasing \SPI_DAC:Net_289\ to zero
Aliasing tmpOE__MISO_IN_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__SCLK_OUT_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__SS_OUT_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq:SAR:soc\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_1\ to zero
Aliasing Net_12630 to \ADC_SAR_Seq:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_ADC_CK:Net_113\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing Net_17104 to zero
Aliasing Net_17103 to zero
Aliasing tmpOE__PWM_1_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing Net_23456 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \DIV_MASK_MSB:rst\ to zero
Aliasing \DIV_MASK_LSB:clk\ to \DIV_MASK_MSB:clk\
Aliasing \DIV_MASK_LSB:rst\ to zero
Aliasing Net_23451 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing Net_23458 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing BIT_DIV_MUX_3 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing BIT_DIV_MUX_2 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing BIT_DIV_MUX_1 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing BIT_DIV_MUX_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_4:MODIN4_3\ to \Bit_Div_4:MODIN3_3\
Aliasing \Bit_Div_4:MODIN4_2\ to \Bit_Div_4:MODIN3_2\
Aliasing \Bit_Div_4:MODIN4_1\ to \Bit_Div_4:MODIN3_1\
Aliasing \Bit_Div_4:MODIN4_0\ to \Bit_Div_4:MODIN3_0\
Aliasing \Bit_Div_4:MODIN5_3\ to zero
Aliasing \Bit_Div_4:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_4:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing \Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_5:MODIN4_3\ to \Bit_Div_5:MODIN3_3\
Aliasing \Bit_Div_5:MODIN4_2\ to \Bit_Div_5:MODIN3_2\
Aliasing \Bit_Div_5:MODIN4_1\ to \Bit_Div_5:MODIN3_1\
Aliasing \Bit_Div_5:MODIN4_0\ to \Bit_Div_5:MODIN3_0\
Aliasing \Bit_Div_5:MODIN5_3\ to zero
Aliasing \Bit_Div_5:MODIN5_2\ to \Bit_Div_4:MODIN5_2\
Aliasing \Bit_Div_5:MODIN5_1\ to \Bit_Div_4:MODIN5_1\
Aliasing \Bit_Div_5:MODIN5_0\ to \Bit_Div_4:MODIN5_0\
Aliasing \Bit_Div_5:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_5:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing Net_23454 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_10:MODIN4_3\ to \Bit_Div_10:MODIN3_3\
Aliasing \Bit_Div_10:MODIN4_2\ to \Bit_Div_10:MODIN3_2\
Aliasing \Bit_Div_10:MODIN4_1\ to \Bit_Div_10:MODIN3_1\
Aliasing \Bit_Div_10:MODIN4_0\ to \Bit_Div_10:MODIN3_0\
Aliasing \Bit_Div_10:MODIN5_3\ to zero
Aliasing \Bit_Div_10:MODIN5_2\ to \Bit_Div_4:MODIN5_2\
Aliasing \Bit_Div_10:MODIN5_1\ to \Bit_Div_4:MODIN5_1\
Aliasing \Bit_Div_10:MODIN5_0\ to \Bit_Div_4:MODIN5_0\
Aliasing \Bit_Div_10:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_10:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing \Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_11:MODIN4_3\ to \Bit_Div_11:MODIN3_3\
Aliasing \Bit_Div_11:MODIN4_2\ to \Bit_Div_11:MODIN3_2\
Aliasing \Bit_Div_11:MODIN4_1\ to \Bit_Div_11:MODIN3_1\
Aliasing \Bit_Div_11:MODIN4_0\ to \Bit_Div_11:MODIN3_0\
Aliasing \Bit_Div_11:MODIN5_3\ to zero
Aliasing \Bit_Div_11:MODIN5_2\ to \Bit_Div_4:MODIN5_2\
Aliasing \Bit_Div_11:MODIN5_1\ to \Bit_Div_4:MODIN5_1\
Aliasing \Bit_Div_11:MODIN5_0\ to \Bit_Div_4:MODIN5_0\
Aliasing \Bit_Div_11:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_11:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing \Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_6:MODIN4_3\ to \Bit_Div_6:MODIN3_3\
Aliasing \Bit_Div_6:MODIN4_2\ to \Bit_Div_6:MODIN3_2\
Aliasing \Bit_Div_6:MODIN4_1\ to \Bit_Div_6:MODIN3_1\
Aliasing \Bit_Div_6:MODIN4_0\ to \Bit_Div_6:MODIN3_0\
Aliasing \Bit_Div_6:MODIN5_3\ to zero
Aliasing \Bit_Div_6:MODIN5_2\ to \Bit_Div_4:MODIN5_2\
Aliasing \Bit_Div_6:MODIN5_1\ to \Bit_Div_4:MODIN5_1\
Aliasing \Bit_Div_6:MODIN5_0\ to \Bit_Div_4:MODIN5_0\
Aliasing \Bit_Div_6:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_6:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing \Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_7:MODIN4_3\ to \Bit_Div_7:MODIN3_3\
Aliasing \Bit_Div_7:MODIN4_2\ to \Bit_Div_7:MODIN3_2\
Aliasing \Bit_Div_7:MODIN4_1\ to \Bit_Div_7:MODIN3_1\
Aliasing \Bit_Div_7:MODIN4_0\ to \Bit_Div_7:MODIN3_0\
Aliasing \Bit_Div_7:MODIN5_3\ to zero
Aliasing \Bit_Div_7:MODIN5_2\ to \Bit_Div_4:MODIN5_2\
Aliasing \Bit_Div_7:MODIN5_1\ to \Bit_Div_4:MODIN5_1\
Aliasing \Bit_Div_7:MODIN5_0\ to \Bit_Div_4:MODIN5_0\
Aliasing \Bit_Div_7:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_7:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing \Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_8:MODIN4_3\ to \Bit_Div_8:MODIN3_3\
Aliasing \Bit_Div_8:MODIN4_2\ to \Bit_Div_8:MODIN3_2\
Aliasing \Bit_Div_8:MODIN4_1\ to \Bit_Div_8:MODIN3_1\
Aliasing \Bit_Div_8:MODIN4_0\ to \Bit_Div_8:MODIN3_0\
Aliasing \Bit_Div_8:MODIN5_3\ to zero
Aliasing \Bit_Div_8:MODIN5_2\ to \Bit_Div_4:MODIN5_2\
Aliasing \Bit_Div_8:MODIN5_1\ to \Bit_Div_4:MODIN5_1\
Aliasing \Bit_Div_8:MODIN5_0\ to \Bit_Div_4:MODIN5_0\
Aliasing \Bit_Div_8:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_8:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing \Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Bit_Div_9:MODIN4_3\ to \Bit_Div_9:MODIN3_3\
Aliasing \Bit_Div_9:MODIN4_2\ to \Bit_Div_9:MODIN3_2\
Aliasing \Bit_Div_9:MODIN4_1\ to \Bit_Div_9:MODIN3_1\
Aliasing \Bit_Div_9:MODIN4_0\ to \Bit_Div_9:MODIN3_0\
Aliasing \Bit_Div_9:MODIN5_3\ to zero
Aliasing \Bit_Div_9:MODIN5_2\ to \Bit_Div_4:MODIN5_2\
Aliasing \Bit_Div_9:MODIN5_1\ to \Bit_Div_4:MODIN5_1\
Aliasing \Bit_Div_9:MODIN5_0\ to \Bit_Div_4:MODIN5_0\
Aliasing \Bit_Div_9:MODULE_3:g1:a0:gx:u0:albi_2\ to zero
Aliasing \Bit_Div_9:MODULE_3:g1:a0:gx:u0:agbi_2\ to zero
Aliasing \ADC_1_OUT_MSB:clk\ to \DIV_MASK_MSB:clk\
Aliasing \ADC_1_OUT_MSB:rst\ to zero
Aliasing \ADC_1_OUT_LSB:clk\ to \DIV_MASK_MSB:clk\
Aliasing \ADC_1_OUT_LSB:rst\ to zero
Aliasing \DAC_IN_MSB:status_7\ to zero
Aliasing \DAC_IN_MSB:status_6\ to zero
Aliasing \DAC_IN_MSB:status_5\ to zero
Aliasing \DAC_IN_MSB:status_4\ to zero
Aliasing \SPI_DAC:BSPIM:so_send_reg\\D\ to zero
Aliasing \SPI_DAC:BSPIM:mosi_pre_reg\\D\ to zero
Aliasing \SPI_DAC:BSPIM:dpcounter_one_reg\\D\ to \SPI_DAC:BSPIM:load_rx_data\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq:MODIN1_5\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq:MODIN1_4\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq:MODIN1_3\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq:MODIN1_2\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq:MODIN1_1\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq:MODIN1_0\
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_5\[2] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_4\[3] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_3\[4] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_2\[5] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_1\[6] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_0\[7] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Rhs of wire one[24] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \Filter:Net_1\[26] = zero[8]
Removing Lhs of wire \Filter:Net_4\[28] = zero[8]
Removing Lhs of wire \Filter:Net_5\[29] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_0\[40] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_2\[41] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_1\[42] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_3\[43] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_1\[44] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_3\[45] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_0\[46] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_2\[47] = zero[8]
Removing Lhs of wire \ADC_SAR_1:Net_188\[48] = ADC_CLK[49]
Removing Rhs of wire PWM_CK[55] = \PWM_ADC_CK:Net_57\[654]
Removing Lhs of wire tmpOE__AUDIO_IN_net_0[85] = one[24]
Removing Lhs of wire tmpOE__DIV_MUX_CONTROL_net_0[92] = one[24]
Removing Lhs of wire tmpOE__MASK_OFF_CONTROL_net_0[99] = one[24]
Removing Lhs of wire tmpOE__MOSI_OUT_net_0[106] = one[24]
Removing Rhs of wire Net_6027[107] = \SPI_DAC:BSPIM:mosi_reg\[144]
Removing Lhs of wire tmpOE__SAMPLE_RATE_CONTROL_net_0[113] = one[24]
Removing Lhs of wire tmpOE__VREF_BUFF_net_0[123] = one[24]
Removing Rhs of wire \SPI_DAC:Net_276\[131] = \SPI_DAC:Net_288\[132]
Removing Rhs of wire \SPI_DAC:BSPIM:load_rx_data\[136] = \SPI_DAC:BSPIM:dpcounter_one\[137]
Removing Lhs of wire \SPI_DAC:BSPIM:pol_supprt\[138] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:miso_to_dp\[139] = \SPI_DAC:Net_244\[140]
Removing Lhs of wire \SPI_DAC:Net_244\[140] = Net_6028[281]
Removing Rhs of wire \SPI_DAC:BSPIM:mosi_from_dp\[150] = \SPI_DAC:BSPIM:mosi_from_dpL\[264]
Removing Rhs of wire \SPI_DAC:BSPIM:tx_status_1\[166] = \SPI_DAC:BSPIM:dpMOSI_fifo_empty\[167]
Removing Rhs of wire \SPI_DAC:BSPIM:tx_status_2\[168] = \SPI_DAC:BSPIM:dpMOSI_fifo_not_full\[169]
Removing Lhs of wire \SPI_DAC:BSPIM:tx_status_3\[170] = \SPI_DAC:BSPIM:load_rx_data\[136]
Removing Rhs of wire \SPI_DAC:BSPIM:rx_status_4\[172] = \SPI_DAC:BSPIM:dpMISO_fifo_full\[173]
Removing Rhs of wire \SPI_DAC:BSPIM:rx_status_5\[174] = \SPI_DAC:BSPIM:dpMISO_fifo_not_empty\[175]
Removing Lhs of wire \SPI_DAC:BSPIM:tx_status_6\[177] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:tx_status_5\[178] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_3\[179] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_2\[180] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_1\[181] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_0\[182] = zero[8]
Removing Lhs of wire \SPI_DAC:Net_273\[192] = zero[8]
Removing Lhs of wire \SPI_DAC:Net_289\[282] = zero[8]
Removing Lhs of wire tmpOE__MISO_IN_net_0[284] = one[24]
Removing Lhs of wire tmpOE__SCLK_OUT_net_0[290] = one[24]
Removing Lhs of wire tmpOE__SS_OUT_net_0[296] = one[24]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\[304] = one[24]
Removing Lhs of wire \ADC_SAR_Seq:cmp_vv_vv_MODGEN_1\[306] = \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[638]
Removing Lhs of wire \ADC_SAR_Seq:clock\[307] = Net_11790[538]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_5\[309] = \ADC_SAR_Seq:bSAR_SEQ:count_5\[505]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_4\[311] = \ADC_SAR_Seq:bSAR_SEQ:count_4\[506]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_3\[313] = \ADC_SAR_Seq:bSAR_SEQ:count_3\[507]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_2\[315] = \ADC_SAR_Seq:bSAR_SEQ:count_2\[508]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_1\[317] = \ADC_SAR_Seq:bSAR_SEQ:count_1\[509]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_0\[319] = \ADC_SAR_Seq:bSAR_SEQ:count_0\[510]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_0\[450] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_2\[451] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_1\[452] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_3\[453] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_1\[454] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_3\[455] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_0\[456] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_2\[457] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:Net_188\[458] = Net_11790[538]
Removing Lhs of wire \ADC_SAR_Seq:SAR:soc\[464] = zero[8]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:enable\[495] = \ADC_SAR_Seq:bSAR_SEQ:control_0\[496]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:load_period\[497] = \ADC_SAR_Seq:bSAR_SEQ:control_1\[498]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_7\[511] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_6\[512] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_5\[513] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_4\[514] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_3\[515] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_2\[516] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_1\[517] = zero[8]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_0\[518] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\[519]
Removing Rhs of wire Net_12630[526] = \ADC_SAR_Seq:bSAR_SEQ:status_0\[518]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_5\[549] = \ADC_SAR_Seq:MODIN1_5\[550]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_5\[550] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_4\[551] = \ADC_SAR_Seq:MODIN1_4\[552]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_4\[552] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_3\[553] = \ADC_SAR_Seq:MODIN1_3\[554]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_3\[554] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_2\[555] = \ADC_SAR_Seq:MODIN1_2\[556]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_2\[556] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_1\[557] = \ADC_SAR_Seq:MODIN1_1\[558]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_1\[558] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_0\[559] = \ADC_SAR_Seq:MODIN1_0\[560]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_0\[560] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_5\[561] = \ADC_SAR_Seq:MODIN2_5\[562]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_5\[562] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[308]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_4\[563] = \ADC_SAR_Seq:MODIN2_4\[564]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_4\[564] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[310]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_3\[565] = \ADC_SAR_Seq:MODIN2_3\[566]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_3\[566] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[312]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_2\[567] = \ADC_SAR_Seq:MODIN2_2\[568]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_2\[568] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[314]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_1\[569] = \ADC_SAR_Seq:MODIN2_1\[570]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_1\[570] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[316]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_0\[571] = \ADC_SAR_Seq:MODIN2_0\[572]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_0\[572] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[318]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_5\[573] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_4\[574] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_3\[575] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_2\[576] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_1\[577] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_0\[578] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_5\[579] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[308]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_4\[580] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[310]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_3\[581] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[312]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_2\[582] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[314]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_1\[583] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[316]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_0\[584] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[318]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_5\[585] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_4\[586] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_3\[587] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_2\[588] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_1\[589] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_0\[590] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_5\[591] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[308]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_4\[592] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[310]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_3\[593] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[312]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_2\[594] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[314]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_1\[595] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[316]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_0\[596] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[318]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\[603] = one[24]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_0\[604] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\[602]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eqi_0\[610] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\[609]
Removing Rhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[638] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_1\[611]
Removing Lhs of wire \PWM_ADC_CK:Net_107\[650] = zero[8]
Removing Lhs of wire \PWM_ADC_CK:Net_113\[651] = one[24]
Removing Lhs of wire Net_17104[652] = zero[8]
Removing Lhs of wire Net_17103[658] = zero[8]
Removing Lhs of wire tmpOE__PWM_1_CONTROL_net_0[662] = one[24]
Removing Rhs of wire tmp__cy_tff_3_clk[667] = ADC_OUT_BUS_2[668]
Removing Rhs of wire tmp__cy_tff_3_clk[667] = \ADC_1_OUT_LSB:control_out_2\[1653]
Removing Rhs of wire tmp__cy_tff_3_clk[667] = \ADC_1_OUT_LSB:control_2\[1662]
Removing Lhs of wire Net_23456[670] = one[24]
Removing Lhs of wire ADC_DIV_Q_2[671] = cy_tff_3[669]
Removing Rhs of wire DIV_MASK_BUS_1[673] = \DIV_MASK_LSB:control_out_1\[724]
Removing Rhs of wire DIV_MASK_BUS_1[673] = \DIV_MASK_LSB:control_1\[733]
Removing Rhs of wire ADC_OUT_BUS_1[674] = \ADC_1_OUT_LSB:control_out_1\[1654]
Removing Rhs of wire ADC_OUT_BUS_1[674] = \ADC_1_OUT_LSB:control_1\[1663]
Removing Rhs of wire ADC_DIV_Q_1[675] = cy_tff_1[1687]
Removing Rhs of wire MUX_BUS_1[676] = \MUXMSB_24:tmp__MUXMSB_24_reg\[672]
Removing Rhs of wire DIV_MASK_BUS_0[678] = \DIV_MASK_LSB:control_out_0\[725]
Removing Rhs of wire DIV_MASK_BUS_0[678] = \DIV_MASK_LSB:control_0\[734]
Removing Rhs of wire ADC_OUT_BUS_0[679] = \ADC_1_OUT_LSB:control_out_0\[1655]
Removing Rhs of wire ADC_OUT_BUS_0[679] = \ADC_1_OUT_LSB:control_0\[1664]
Removing Rhs of wire ADC_DIV_Q_0[680] = cy_tff_2[1685]
Removing Rhs of wire MUX_BUS_0[681] = \MUXMSB_23:tmp__MUXMSB_23_reg\[677]
Removing Lhs of wire \DIV_MASK_MSB:clk\[682] = ADC_REG_CK[683]
Removing Lhs of wire \DIV_MASK_MSB:rst\[684] = zero[8]
Removing Rhs of wire DIV_MASK_BUS_11[693] = \DIV_MASK_MSB:control_out_3\[694]
Removing Rhs of wire DIV_MASK_BUS_11[693] = \DIV_MASK_MSB:control_3\[706]
Removing Rhs of wire DIV_MASK_BUS_10[695] = \DIV_MASK_MSB:control_out_2\[696]
Removing Rhs of wire DIV_MASK_BUS_10[695] = \DIV_MASK_MSB:control_2\[707]
Removing Rhs of wire DIV_MASK_BUS_9[697] = \DIV_MASK_MSB:control_out_1\[698]
Removing Rhs of wire DIV_MASK_BUS_9[697] = \DIV_MASK_MSB:control_1\[708]
Removing Rhs of wire DIV_MASK_BUS_8[699] = \DIV_MASK_MSB:control_out_0\[700]
Removing Rhs of wire DIV_MASK_BUS_8[699] = \DIV_MASK_MSB:control_0\[709]
Removing Lhs of wire \DIV_MASK_LSB:clk\[710] = ADC_REG_CK[683]
Removing Lhs of wire \DIV_MASK_LSB:rst\[711] = zero[8]
Removing Rhs of wire DIV_MASK_BUS_7[712] = \DIV_MASK_LSB:control_out_7\[713]
Removing Rhs of wire DIV_MASK_BUS_7[712] = \DIV_MASK_LSB:control_7\[727]
Removing Rhs of wire DIV_MASK_BUS_6[714] = \DIV_MASK_LSB:control_out_6\[715]
Removing Rhs of wire DIV_MASK_BUS_6[714] = \DIV_MASK_LSB:control_6\[728]
Removing Rhs of wire DIV_MASK_BUS_5[716] = \DIV_MASK_LSB:control_out_5\[717]
Removing Rhs of wire DIV_MASK_BUS_5[716] = \DIV_MASK_LSB:control_5\[729]
Removing Rhs of wire DIV_MASK_BUS_4[718] = \DIV_MASK_LSB:control_out_4\[719]
Removing Rhs of wire DIV_MASK_BUS_4[718] = \DIV_MASK_LSB:control_4\[730]
Removing Rhs of wire DIV_MASK_BUS_3[720] = \DIV_MASK_LSB:control_out_3\[721]
Removing Rhs of wire DIV_MASK_BUS_3[720] = \DIV_MASK_LSB:control_3\[731]
Removing Rhs of wire DIV_MASK_BUS_2[722] = \DIV_MASK_LSB:control_out_2\[723]
Removing Rhs of wire DIV_MASK_BUS_2[722] = \DIV_MASK_LSB:control_2\[732]
Removing Rhs of wire ADC_OUT_BUS_11[736] = \ADC_1_OUT_MSB:control_out_3\[1633]
Removing Rhs of wire ADC_OUT_BUS_11[736] = \ADC_1_OUT_MSB:control_3\[1642]
Removing Rhs of wire MUX_BUS_11[738] = \MUXMSB_22:tmp__MUXMSB_22_reg\[735]
Removing Rhs of wire ADC_OUT_BUS_10[740] = \ADC_1_OUT_MSB:control_out_2\[1634]
Removing Rhs of wire ADC_OUT_BUS_10[740] = \ADC_1_OUT_MSB:control_2\[1643]
Removing Rhs of wire MUX_BUS_10[742] = \MUXMSB_21:tmp__MUXMSB_21_reg\[739]
Removing Rhs of wire ADC_OUT_BUS_9[744] = \ADC_1_OUT_MSB:control_out_1\[1635]
Removing Rhs of wire ADC_OUT_BUS_9[744] = \ADC_1_OUT_MSB:control_1\[1644]
Removing Rhs of wire MUX_BUS_9[746] = \MUXMSB_20:tmp__MUXMSB_20_reg\[743]
Removing Rhs of wire ADC_OUT_BUS_8[748] = \ADC_1_OUT_MSB:control_out_0\[1636]
Removing Rhs of wire ADC_OUT_BUS_8[748] = \ADC_1_OUT_MSB:control_0\[1645]
Removing Rhs of wire MUX_BUS_8[750] = \MUXMSB_19:tmp__MUXMSB_19_reg\[747]
Removing Lhs of wire Net_23451[751] = one[24]
Removing Rhs of wire ADC_OUT_BUS_7[753] = \ADC_1_OUT_LSB:control_out_7\[1648]
Removing Rhs of wire ADC_OUT_BUS_7[753] = \ADC_1_OUT_LSB:control_7\[1657]
Removing Rhs of wire MUX_BUS_7[755] = \MUXMSB_18:tmp__MUXMSB_18_reg\[752]
Removing Rhs of wire ADC_OUT_BUS_5[757] = \ADC_1_OUT_LSB:control_out_5\[1650]
Removing Rhs of wire ADC_OUT_BUS_5[757] = \ADC_1_OUT_LSB:control_5\[1659]
Removing Rhs of wire MUX_BUS_5[759] = \MUXMSB_17:tmp__MUXMSB_17_reg\[756]
Removing Rhs of wire ADC_OUT_BUS_3[761] = \ADC_1_OUT_LSB:control_out_3\[1652]
Removing Rhs of wire ADC_OUT_BUS_3[761] = \ADC_1_OUT_LSB:control_3\[1661]
Removing Rhs of wire ADC_DIV_Q_3[762] = cy_tff_4[1619]
Removing Rhs of wire MUX_BUS_3[763] = \MUXMSB_16:tmp__MUXMSB_16_reg\[760]
Removing Rhs of wire ADC_OUT_BUS_6[765] = \ADC_1_OUT_LSB:control_out_6\[1649]
Removing Rhs of wire ADC_OUT_BUS_6[765] = \ADC_1_OUT_LSB:control_6\[1658]
Removing Rhs of wire MUX_BUS_6[767] = \MUXMSB_15:tmp__MUXMSB_15_reg\[764]
Removing Rhs of wire ADC_OUT_BUS_4[769] = \ADC_1_OUT_LSB:control_out_4\[1651]
Removing Rhs of wire ADC_OUT_BUS_4[769] = \ADC_1_OUT_LSB:control_4\[1660]
Removing Rhs of wire MUX_BUS_4[771] = \MUXMSB_14:tmp__MUXMSB_14_reg\[768]
Removing Lhs of wire Net_23458[772] = one[24]
Removing Lhs of wire \Bit_Div_4:add_vv_vv_MODGEN_2_3\[774] = \Bit_Div_4:MODULE_2:g2:a0:s_3\[799]
Removing Lhs of wire \Bit_Div_4:add_vv_vv_MODGEN_2_2\[776] = \Bit_Div_4:MODULE_2:g2:a0:s_2\[800]
Removing Lhs of wire \Bit_Div_4:add_vv_vv_MODGEN_2_1\[778] = \Bit_Div_4:MODULE_2:g2:a0:s_1\[801]
Removing Lhs of wire \Bit_Div_4:add_vv_vv_MODGEN_2_0\[780] = \Bit_Div_4:MODULE_2:g2:a0:s_0\[802]
Removing Lhs of wire BIT_DIV_MUX_3[782] = one[24]
Removing Lhs of wire BIT_DIV_MUX_2[783] = one[24]
Removing Lhs of wire BIT_DIV_MUX_1[784] = one[24]
Removing Lhs of wire BIT_DIV_MUX_0[785] = one[24]
Removing Lhs of wire \Bit_Div_4:cmp_vv_vv_MODGEN_3\[786] = \Bit_Div_4:MODULE_3:g1:a0:xlte\[874]
Removing Lhs of wire \Bit_Div_4:MODULE_2:g2:a0:a_3\[787] = \Bit_Div_4:MODIN3_3\[788]
Removing Lhs of wire \Bit_Div_4:MODIN3_3\[788] = \Bit_Div_4:period_counter_3\[773]
Removing Lhs of wire \Bit_Div_4:MODULE_2:g2:a0:a_2\[789] = \Bit_Div_4:MODIN3_2\[790]
Removing Lhs of wire \Bit_Div_4:MODIN3_2\[790] = \Bit_Div_4:period_counter_2\[775]
Removing Lhs of wire \Bit_Div_4:MODULE_2:g2:a0:a_1\[791] = \Bit_Div_4:MODIN3_1\[792]
Removing Lhs of wire \Bit_Div_4:MODIN3_1\[792] = \Bit_Div_4:period_counter_1\[777]
Removing Lhs of wire \Bit_Div_4:MODULE_2:g2:a0:a_0\[793] = \Bit_Div_4:MODIN3_0\[794]
Removing Lhs of wire \Bit_Div_4:MODIN3_0\[794] = \Bit_Div_4:period_counter_0\[779]
Removing Lhs of wire \Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[806] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[807] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newa_3\[808] = \Bit_Div_4:period_counter_3\[773]
Removing Lhs of wire \Bit_Div_4:MODIN4_3\[809] = \Bit_Div_4:period_counter_3\[773]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newa_2\[810] = \Bit_Div_4:period_counter_2\[775]
Removing Lhs of wire \Bit_Div_4:MODIN4_2\[811] = \Bit_Div_4:period_counter_2\[775]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newa_1\[812] = \Bit_Div_4:period_counter_1\[777]
Removing Lhs of wire \Bit_Div_4:MODIN4_1\[813] = \Bit_Div_4:period_counter_1\[777]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newa_0\[814] = \Bit_Div_4:period_counter_0\[779]
Removing Lhs of wire \Bit_Div_4:MODIN4_0\[815] = \Bit_Div_4:period_counter_0\[779]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newb_3\[816] = zero[8]
Removing Lhs of wire \Bit_Div_4:MODIN5_3\[817] = zero[8]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newb_2\[818] = \Bit_Div_4:MODIN5_2\[819]
Removing Lhs of wire \Bit_Div_4:MODIN5_2\[819] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newb_1\[820] = \Bit_Div_4:MODIN5_1\[821]
Removing Lhs of wire \Bit_Div_4:MODIN5_1\[821] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:newb_0\[822] = \Bit_Div_4:MODIN5_0\[823]
Removing Lhs of wire \Bit_Div_4:MODIN5_0\[823] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:dataa_3\[824] = \Bit_Div_4:period_counter_3\[773]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:dataa_2\[825] = \Bit_Div_4:period_counter_2\[775]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:dataa_1\[826] = \Bit_Div_4:period_counter_1\[777]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:dataa_0\[827] = \Bit_Div_4:period_counter_0\[779]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:datab_3\[828] = zero[8]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:datab_2\[829] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:datab_1\[830] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:datab_0\[831] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:a_3\[832] = \Bit_Div_4:period_counter_3\[773]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:a_2\[833] = \Bit_Div_4:period_counter_2\[775]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:a_1\[834] = \Bit_Div_4:period_counter_1\[777]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:a_0\[835] = \Bit_Div_4:period_counter_0\[779]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:b_3\[836] = zero[8]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:b_2\[837] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:b_1\[838] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:b_0\[839] = one[24]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:albi_2\[851] = zero[8]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:agbi_2\[852] = zero[8]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:lti_1\[855] = \Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_3\[853]
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:gti_1\[856] = \Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_3\[854]
Removing Lhs of wire \Bit_Div_5:add_vv_vv_MODGEN_2_3\[883] = \Bit_Div_5:MODULE_2:g2:a0:s_3\[904]
Removing Lhs of wire \Bit_Div_5:add_vv_vv_MODGEN_2_2\[885] = \Bit_Div_5:MODULE_2:g2:a0:s_2\[905]
Removing Lhs of wire \Bit_Div_5:add_vv_vv_MODGEN_2_1\[887] = \Bit_Div_5:MODULE_2:g2:a0:s_1\[906]
Removing Lhs of wire \Bit_Div_5:add_vv_vv_MODGEN_2_0\[889] = \Bit_Div_5:MODULE_2:g2:a0:s_0\[907]
Removing Lhs of wire \Bit_Div_5:cmp_vv_vv_MODGEN_3\[891] = \Bit_Div_5:MODULE_3:g1:a0:xlte\[979]
Removing Lhs of wire \Bit_Div_5:MODULE_2:g2:a0:a_3\[892] = \Bit_Div_5:MODIN3_3\[893]
Removing Lhs of wire \Bit_Div_5:MODIN3_3\[893] = \Bit_Div_5:period_counter_3\[882]
Removing Lhs of wire \Bit_Div_5:MODULE_2:g2:a0:a_2\[894] = \Bit_Div_5:MODIN3_2\[895]
Removing Lhs of wire \Bit_Div_5:MODIN3_2\[895] = \Bit_Div_5:period_counter_2\[884]
Removing Lhs of wire \Bit_Div_5:MODULE_2:g2:a0:a_1\[896] = \Bit_Div_5:MODIN3_1\[897]
Removing Lhs of wire \Bit_Div_5:MODIN3_1\[897] = \Bit_Div_5:period_counter_1\[886]
Removing Lhs of wire \Bit_Div_5:MODULE_2:g2:a0:a_0\[898] = \Bit_Div_5:MODIN3_0\[899]
Removing Lhs of wire \Bit_Div_5:MODIN3_0\[899] = \Bit_Div_5:period_counter_0\[888]
Removing Lhs of wire \Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[911] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[912] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newa_3\[913] = \Bit_Div_5:period_counter_3\[882]
Removing Lhs of wire \Bit_Div_5:MODIN4_3\[914] = \Bit_Div_5:period_counter_3\[882]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newa_2\[915] = \Bit_Div_5:period_counter_2\[884]
Removing Lhs of wire \Bit_Div_5:MODIN4_2\[916] = \Bit_Div_5:period_counter_2\[884]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newa_1\[917] = \Bit_Div_5:period_counter_1\[886]
Removing Lhs of wire \Bit_Div_5:MODIN4_1\[918] = \Bit_Div_5:period_counter_1\[886]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newa_0\[919] = \Bit_Div_5:period_counter_0\[888]
Removing Lhs of wire \Bit_Div_5:MODIN4_0\[920] = \Bit_Div_5:period_counter_0\[888]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newb_3\[921] = zero[8]
Removing Lhs of wire \Bit_Div_5:MODIN5_3\[922] = zero[8]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newb_2\[923] = one[24]
Removing Lhs of wire \Bit_Div_5:MODIN5_2\[924] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newb_1\[925] = one[24]
Removing Lhs of wire \Bit_Div_5:MODIN5_1\[926] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:newb_0\[927] = one[24]
Removing Lhs of wire \Bit_Div_5:MODIN5_0\[928] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:dataa_3\[929] = \Bit_Div_5:period_counter_3\[882]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:dataa_2\[930] = \Bit_Div_5:period_counter_2\[884]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:dataa_1\[931] = \Bit_Div_5:period_counter_1\[886]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:dataa_0\[932] = \Bit_Div_5:period_counter_0\[888]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:datab_3\[933] = zero[8]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:datab_2\[934] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:datab_1\[935] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:datab_0\[936] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:a_3\[937] = \Bit_Div_5:period_counter_3\[882]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:a_2\[938] = \Bit_Div_5:period_counter_2\[884]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:a_1\[939] = \Bit_Div_5:period_counter_1\[886]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:a_0\[940] = \Bit_Div_5:period_counter_0\[888]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:b_3\[941] = zero[8]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:b_2\[942] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:b_1\[943] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:b_0\[944] = one[24]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:albi_2\[956] = zero[8]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:agbi_2\[957] = zero[8]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:lti_1\[960] = \Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_3\[958]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:gti_1\[961] = \Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_3\[959]
Removing Lhs of wire Net_23454[987] = one[24]
Removing Lhs of wire \Bit_Div_10:add_vv_vv_MODGEN_2_3\[989] = \Bit_Div_10:MODULE_2:g2:a0:s_3\[1010]
Removing Lhs of wire \Bit_Div_10:add_vv_vv_MODGEN_2_2\[991] = \Bit_Div_10:MODULE_2:g2:a0:s_2\[1011]
Removing Lhs of wire \Bit_Div_10:add_vv_vv_MODGEN_2_1\[993] = \Bit_Div_10:MODULE_2:g2:a0:s_1\[1012]
Removing Lhs of wire \Bit_Div_10:add_vv_vv_MODGEN_2_0\[995] = \Bit_Div_10:MODULE_2:g2:a0:s_0\[1013]
Removing Lhs of wire \Bit_Div_10:cmp_vv_vv_MODGEN_3\[997] = \Bit_Div_10:MODULE_3:g1:a0:xlte\[1085]
Removing Lhs of wire \Bit_Div_10:MODULE_2:g2:a0:a_3\[998] = \Bit_Div_10:MODIN3_3\[999]
Removing Lhs of wire \Bit_Div_10:MODIN3_3\[999] = \Bit_Div_10:period_counter_3\[988]
Removing Lhs of wire \Bit_Div_10:MODULE_2:g2:a0:a_2\[1000] = \Bit_Div_10:MODIN3_2\[1001]
Removing Lhs of wire \Bit_Div_10:MODIN3_2\[1001] = \Bit_Div_10:period_counter_2\[990]
Removing Lhs of wire \Bit_Div_10:MODULE_2:g2:a0:a_1\[1002] = \Bit_Div_10:MODIN3_1\[1003]
Removing Lhs of wire \Bit_Div_10:MODIN3_1\[1003] = \Bit_Div_10:period_counter_1\[992]
Removing Lhs of wire \Bit_Div_10:MODULE_2:g2:a0:a_0\[1004] = \Bit_Div_10:MODIN3_0\[1005]
Removing Lhs of wire \Bit_Div_10:MODIN3_0\[1005] = \Bit_Div_10:period_counter_0\[994]
Removing Lhs of wire \Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[1017] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[1018] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newa_3\[1019] = \Bit_Div_10:period_counter_3\[988]
Removing Lhs of wire \Bit_Div_10:MODIN4_3\[1020] = \Bit_Div_10:period_counter_3\[988]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newa_2\[1021] = \Bit_Div_10:period_counter_2\[990]
Removing Lhs of wire \Bit_Div_10:MODIN4_2\[1022] = \Bit_Div_10:period_counter_2\[990]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newa_1\[1023] = \Bit_Div_10:period_counter_1\[992]
Removing Lhs of wire \Bit_Div_10:MODIN4_1\[1024] = \Bit_Div_10:period_counter_1\[992]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newa_0\[1025] = \Bit_Div_10:period_counter_0\[994]
Removing Lhs of wire \Bit_Div_10:MODIN4_0\[1026] = \Bit_Div_10:period_counter_0\[994]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newb_3\[1027] = zero[8]
Removing Lhs of wire \Bit_Div_10:MODIN5_3\[1028] = zero[8]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newb_2\[1029] = one[24]
Removing Lhs of wire \Bit_Div_10:MODIN5_2\[1030] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newb_1\[1031] = one[24]
Removing Lhs of wire \Bit_Div_10:MODIN5_1\[1032] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:newb_0\[1033] = one[24]
Removing Lhs of wire \Bit_Div_10:MODIN5_0\[1034] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:dataa_3\[1035] = \Bit_Div_10:period_counter_3\[988]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:dataa_2\[1036] = \Bit_Div_10:period_counter_2\[990]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:dataa_1\[1037] = \Bit_Div_10:period_counter_1\[992]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:dataa_0\[1038] = \Bit_Div_10:period_counter_0\[994]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:datab_3\[1039] = zero[8]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:datab_2\[1040] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:datab_1\[1041] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:datab_0\[1042] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:a_3\[1043] = \Bit_Div_10:period_counter_3\[988]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:a_2\[1044] = \Bit_Div_10:period_counter_2\[990]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:a_1\[1045] = \Bit_Div_10:period_counter_1\[992]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:a_0\[1046] = \Bit_Div_10:period_counter_0\[994]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:b_3\[1047] = zero[8]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:b_2\[1048] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:b_1\[1049] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:b_0\[1050] = one[24]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:albi_2\[1062] = zero[8]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:agbi_2\[1063] = zero[8]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:lti_1\[1066] = \Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_3\[1064]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:gti_1\[1067] = \Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_3\[1065]
Removing Lhs of wire \Bit_Div_11:add_vv_vv_MODGEN_2_3\[1094] = \Bit_Div_11:MODULE_2:g2:a0:s_3\[1115]
Removing Lhs of wire \Bit_Div_11:add_vv_vv_MODGEN_2_2\[1096] = \Bit_Div_11:MODULE_2:g2:a0:s_2\[1116]
Removing Lhs of wire \Bit_Div_11:add_vv_vv_MODGEN_2_1\[1098] = \Bit_Div_11:MODULE_2:g2:a0:s_1\[1117]
Removing Lhs of wire \Bit_Div_11:add_vv_vv_MODGEN_2_0\[1100] = \Bit_Div_11:MODULE_2:g2:a0:s_0\[1118]
Removing Lhs of wire \Bit_Div_11:cmp_vv_vv_MODGEN_3\[1102] = \Bit_Div_11:MODULE_3:g1:a0:xlte\[1190]
Removing Lhs of wire \Bit_Div_11:MODULE_2:g2:a0:a_3\[1103] = \Bit_Div_11:MODIN3_3\[1104]
Removing Lhs of wire \Bit_Div_11:MODIN3_3\[1104] = \Bit_Div_11:period_counter_3\[1093]
Removing Lhs of wire \Bit_Div_11:MODULE_2:g2:a0:a_2\[1105] = \Bit_Div_11:MODIN3_2\[1106]
Removing Lhs of wire \Bit_Div_11:MODIN3_2\[1106] = \Bit_Div_11:period_counter_2\[1095]
Removing Lhs of wire \Bit_Div_11:MODULE_2:g2:a0:a_1\[1107] = \Bit_Div_11:MODIN3_1\[1108]
Removing Lhs of wire \Bit_Div_11:MODIN3_1\[1108] = \Bit_Div_11:period_counter_1\[1097]
Removing Lhs of wire \Bit_Div_11:MODULE_2:g2:a0:a_0\[1109] = \Bit_Div_11:MODIN3_0\[1110]
Removing Lhs of wire \Bit_Div_11:MODIN3_0\[1110] = \Bit_Div_11:period_counter_0\[1099]
Removing Lhs of wire \Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[1122] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[1123] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newa_3\[1124] = \Bit_Div_11:period_counter_3\[1093]
Removing Lhs of wire \Bit_Div_11:MODIN4_3\[1125] = \Bit_Div_11:period_counter_3\[1093]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newa_2\[1126] = \Bit_Div_11:period_counter_2\[1095]
Removing Lhs of wire \Bit_Div_11:MODIN4_2\[1127] = \Bit_Div_11:period_counter_2\[1095]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newa_1\[1128] = \Bit_Div_11:period_counter_1\[1097]
Removing Lhs of wire \Bit_Div_11:MODIN4_1\[1129] = \Bit_Div_11:period_counter_1\[1097]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newa_0\[1130] = \Bit_Div_11:period_counter_0\[1099]
Removing Lhs of wire \Bit_Div_11:MODIN4_0\[1131] = \Bit_Div_11:period_counter_0\[1099]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newb_3\[1132] = zero[8]
Removing Lhs of wire \Bit_Div_11:MODIN5_3\[1133] = zero[8]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newb_2\[1134] = one[24]
Removing Lhs of wire \Bit_Div_11:MODIN5_2\[1135] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newb_1\[1136] = one[24]
Removing Lhs of wire \Bit_Div_11:MODIN5_1\[1137] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:newb_0\[1138] = one[24]
Removing Lhs of wire \Bit_Div_11:MODIN5_0\[1139] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:dataa_3\[1140] = \Bit_Div_11:period_counter_3\[1093]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:dataa_2\[1141] = \Bit_Div_11:period_counter_2\[1095]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:dataa_1\[1142] = \Bit_Div_11:period_counter_1\[1097]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:dataa_0\[1143] = \Bit_Div_11:period_counter_0\[1099]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:datab_3\[1144] = zero[8]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:datab_2\[1145] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:datab_1\[1146] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:datab_0\[1147] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:a_3\[1148] = \Bit_Div_11:period_counter_3\[1093]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:a_2\[1149] = \Bit_Div_11:period_counter_2\[1095]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:a_1\[1150] = \Bit_Div_11:period_counter_1\[1097]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:a_0\[1151] = \Bit_Div_11:period_counter_0\[1099]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:b_3\[1152] = zero[8]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:b_2\[1153] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:b_1\[1154] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:b_0\[1155] = one[24]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:albi_2\[1167] = zero[8]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:agbi_2\[1168] = zero[8]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:lti_1\[1171] = \Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_3\[1169]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:gti_1\[1172] = \Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_3\[1170]
Removing Lhs of wire \Bit_Div_6:add_vv_vv_MODGEN_2_3\[1199] = \Bit_Div_6:MODULE_2:g2:a0:s_3\[1220]
Removing Lhs of wire \Bit_Div_6:add_vv_vv_MODGEN_2_2\[1201] = \Bit_Div_6:MODULE_2:g2:a0:s_2\[1221]
Removing Lhs of wire \Bit_Div_6:add_vv_vv_MODGEN_2_1\[1203] = \Bit_Div_6:MODULE_2:g2:a0:s_1\[1222]
Removing Lhs of wire \Bit_Div_6:add_vv_vv_MODGEN_2_0\[1205] = \Bit_Div_6:MODULE_2:g2:a0:s_0\[1223]
Removing Lhs of wire \Bit_Div_6:cmp_vv_vv_MODGEN_3\[1207] = \Bit_Div_6:MODULE_3:g1:a0:xlte\[1295]
Removing Lhs of wire \Bit_Div_6:MODULE_2:g2:a0:a_3\[1208] = \Bit_Div_6:MODIN3_3\[1209]
Removing Lhs of wire \Bit_Div_6:MODIN3_3\[1209] = \Bit_Div_6:period_counter_3\[1198]
Removing Lhs of wire \Bit_Div_6:MODULE_2:g2:a0:a_2\[1210] = \Bit_Div_6:MODIN3_2\[1211]
Removing Lhs of wire \Bit_Div_6:MODIN3_2\[1211] = \Bit_Div_6:period_counter_2\[1200]
Removing Lhs of wire \Bit_Div_6:MODULE_2:g2:a0:a_1\[1212] = \Bit_Div_6:MODIN3_1\[1213]
Removing Lhs of wire \Bit_Div_6:MODIN3_1\[1213] = \Bit_Div_6:period_counter_1\[1202]
Removing Lhs of wire \Bit_Div_6:MODULE_2:g2:a0:a_0\[1214] = \Bit_Div_6:MODIN3_0\[1215]
Removing Lhs of wire \Bit_Div_6:MODIN3_0\[1215] = \Bit_Div_6:period_counter_0\[1204]
Removing Lhs of wire \Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[1227] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[1228] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newa_3\[1229] = \Bit_Div_6:period_counter_3\[1198]
Removing Lhs of wire \Bit_Div_6:MODIN4_3\[1230] = \Bit_Div_6:period_counter_3\[1198]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newa_2\[1231] = \Bit_Div_6:period_counter_2\[1200]
Removing Lhs of wire \Bit_Div_6:MODIN4_2\[1232] = \Bit_Div_6:period_counter_2\[1200]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newa_1\[1233] = \Bit_Div_6:period_counter_1\[1202]
Removing Lhs of wire \Bit_Div_6:MODIN4_1\[1234] = \Bit_Div_6:period_counter_1\[1202]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newa_0\[1235] = \Bit_Div_6:period_counter_0\[1204]
Removing Lhs of wire \Bit_Div_6:MODIN4_0\[1236] = \Bit_Div_6:period_counter_0\[1204]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newb_3\[1237] = zero[8]
Removing Lhs of wire \Bit_Div_6:MODIN5_3\[1238] = zero[8]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newb_2\[1239] = one[24]
Removing Lhs of wire \Bit_Div_6:MODIN5_2\[1240] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newb_1\[1241] = one[24]
Removing Lhs of wire \Bit_Div_6:MODIN5_1\[1242] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:newb_0\[1243] = one[24]
Removing Lhs of wire \Bit_Div_6:MODIN5_0\[1244] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:dataa_3\[1245] = \Bit_Div_6:period_counter_3\[1198]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:dataa_2\[1246] = \Bit_Div_6:period_counter_2\[1200]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:dataa_1\[1247] = \Bit_Div_6:period_counter_1\[1202]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:dataa_0\[1248] = \Bit_Div_6:period_counter_0\[1204]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:datab_3\[1249] = zero[8]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:datab_2\[1250] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:datab_1\[1251] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:datab_0\[1252] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:a_3\[1253] = \Bit_Div_6:period_counter_3\[1198]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:a_2\[1254] = \Bit_Div_6:period_counter_2\[1200]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:a_1\[1255] = \Bit_Div_6:period_counter_1\[1202]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:a_0\[1256] = \Bit_Div_6:period_counter_0\[1204]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:b_3\[1257] = zero[8]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:b_2\[1258] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:b_1\[1259] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:b_0\[1260] = one[24]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:albi_2\[1272] = zero[8]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:agbi_2\[1273] = zero[8]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:lti_1\[1276] = \Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_3\[1274]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:gti_1\[1277] = \Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_3\[1275]
Removing Lhs of wire \Bit_Div_7:add_vv_vv_MODGEN_2_3\[1304] = \Bit_Div_7:MODULE_2:g2:a0:s_3\[1325]
Removing Lhs of wire \Bit_Div_7:add_vv_vv_MODGEN_2_2\[1306] = \Bit_Div_7:MODULE_2:g2:a0:s_2\[1326]
Removing Lhs of wire \Bit_Div_7:add_vv_vv_MODGEN_2_1\[1308] = \Bit_Div_7:MODULE_2:g2:a0:s_1\[1327]
Removing Lhs of wire \Bit_Div_7:add_vv_vv_MODGEN_2_0\[1310] = \Bit_Div_7:MODULE_2:g2:a0:s_0\[1328]
Removing Lhs of wire \Bit_Div_7:cmp_vv_vv_MODGEN_3\[1312] = \Bit_Div_7:MODULE_3:g1:a0:xlte\[1400]
Removing Lhs of wire \Bit_Div_7:MODULE_2:g2:a0:a_3\[1313] = \Bit_Div_7:MODIN3_3\[1314]
Removing Lhs of wire \Bit_Div_7:MODIN3_3\[1314] = \Bit_Div_7:period_counter_3\[1303]
Removing Lhs of wire \Bit_Div_7:MODULE_2:g2:a0:a_2\[1315] = \Bit_Div_7:MODIN3_2\[1316]
Removing Lhs of wire \Bit_Div_7:MODIN3_2\[1316] = \Bit_Div_7:period_counter_2\[1305]
Removing Lhs of wire \Bit_Div_7:MODULE_2:g2:a0:a_1\[1317] = \Bit_Div_7:MODIN3_1\[1318]
Removing Lhs of wire \Bit_Div_7:MODIN3_1\[1318] = \Bit_Div_7:period_counter_1\[1307]
Removing Lhs of wire \Bit_Div_7:MODULE_2:g2:a0:a_0\[1319] = \Bit_Div_7:MODIN3_0\[1320]
Removing Lhs of wire \Bit_Div_7:MODIN3_0\[1320] = \Bit_Div_7:period_counter_0\[1309]
Removing Lhs of wire \Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[1332] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[1333] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newa_3\[1334] = \Bit_Div_7:period_counter_3\[1303]
Removing Lhs of wire \Bit_Div_7:MODIN4_3\[1335] = \Bit_Div_7:period_counter_3\[1303]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newa_2\[1336] = \Bit_Div_7:period_counter_2\[1305]
Removing Lhs of wire \Bit_Div_7:MODIN4_2\[1337] = \Bit_Div_7:period_counter_2\[1305]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newa_1\[1338] = \Bit_Div_7:period_counter_1\[1307]
Removing Lhs of wire \Bit_Div_7:MODIN4_1\[1339] = \Bit_Div_7:period_counter_1\[1307]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newa_0\[1340] = \Bit_Div_7:period_counter_0\[1309]
Removing Lhs of wire \Bit_Div_7:MODIN4_0\[1341] = \Bit_Div_7:period_counter_0\[1309]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newb_3\[1342] = zero[8]
Removing Lhs of wire \Bit_Div_7:MODIN5_3\[1343] = zero[8]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newb_2\[1344] = one[24]
Removing Lhs of wire \Bit_Div_7:MODIN5_2\[1345] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newb_1\[1346] = one[24]
Removing Lhs of wire \Bit_Div_7:MODIN5_1\[1347] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:newb_0\[1348] = one[24]
Removing Lhs of wire \Bit_Div_7:MODIN5_0\[1349] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:dataa_3\[1350] = \Bit_Div_7:period_counter_3\[1303]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:dataa_2\[1351] = \Bit_Div_7:period_counter_2\[1305]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:dataa_1\[1352] = \Bit_Div_7:period_counter_1\[1307]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:dataa_0\[1353] = \Bit_Div_7:period_counter_0\[1309]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:datab_3\[1354] = zero[8]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:datab_2\[1355] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:datab_1\[1356] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:datab_0\[1357] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:a_3\[1358] = \Bit_Div_7:period_counter_3\[1303]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:a_2\[1359] = \Bit_Div_7:period_counter_2\[1305]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:a_1\[1360] = \Bit_Div_7:period_counter_1\[1307]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:a_0\[1361] = \Bit_Div_7:period_counter_0\[1309]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:b_3\[1362] = zero[8]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:b_2\[1363] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:b_1\[1364] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:b_0\[1365] = one[24]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:albi_2\[1377] = zero[8]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:agbi_2\[1378] = zero[8]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:lti_1\[1381] = \Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_3\[1379]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:gti_1\[1382] = \Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_3\[1380]
Removing Lhs of wire \Bit_Div_8:add_vv_vv_MODGEN_2_3\[1409] = \Bit_Div_8:MODULE_2:g2:a0:s_3\[1430]
Removing Lhs of wire \Bit_Div_8:add_vv_vv_MODGEN_2_2\[1411] = \Bit_Div_8:MODULE_2:g2:a0:s_2\[1431]
Removing Lhs of wire \Bit_Div_8:add_vv_vv_MODGEN_2_1\[1413] = \Bit_Div_8:MODULE_2:g2:a0:s_1\[1432]
Removing Lhs of wire \Bit_Div_8:add_vv_vv_MODGEN_2_0\[1415] = \Bit_Div_8:MODULE_2:g2:a0:s_0\[1433]
Removing Lhs of wire \Bit_Div_8:cmp_vv_vv_MODGEN_3\[1417] = \Bit_Div_8:MODULE_3:g1:a0:xlte\[1505]
Removing Lhs of wire \Bit_Div_8:MODULE_2:g2:a0:a_3\[1418] = \Bit_Div_8:MODIN3_3\[1419]
Removing Lhs of wire \Bit_Div_8:MODIN3_3\[1419] = \Bit_Div_8:period_counter_3\[1408]
Removing Lhs of wire \Bit_Div_8:MODULE_2:g2:a0:a_2\[1420] = \Bit_Div_8:MODIN3_2\[1421]
Removing Lhs of wire \Bit_Div_8:MODIN3_2\[1421] = \Bit_Div_8:period_counter_2\[1410]
Removing Lhs of wire \Bit_Div_8:MODULE_2:g2:a0:a_1\[1422] = \Bit_Div_8:MODIN3_1\[1423]
Removing Lhs of wire \Bit_Div_8:MODIN3_1\[1423] = \Bit_Div_8:period_counter_1\[1412]
Removing Lhs of wire \Bit_Div_8:MODULE_2:g2:a0:a_0\[1424] = \Bit_Div_8:MODIN3_0\[1425]
Removing Lhs of wire \Bit_Div_8:MODIN3_0\[1425] = \Bit_Div_8:period_counter_0\[1414]
Removing Lhs of wire \Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[1437] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[1438] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newa_3\[1439] = \Bit_Div_8:period_counter_3\[1408]
Removing Lhs of wire \Bit_Div_8:MODIN4_3\[1440] = \Bit_Div_8:period_counter_3\[1408]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newa_2\[1441] = \Bit_Div_8:period_counter_2\[1410]
Removing Lhs of wire \Bit_Div_8:MODIN4_2\[1442] = \Bit_Div_8:period_counter_2\[1410]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newa_1\[1443] = \Bit_Div_8:period_counter_1\[1412]
Removing Lhs of wire \Bit_Div_8:MODIN4_1\[1444] = \Bit_Div_8:period_counter_1\[1412]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newa_0\[1445] = \Bit_Div_8:period_counter_0\[1414]
Removing Lhs of wire \Bit_Div_8:MODIN4_0\[1446] = \Bit_Div_8:period_counter_0\[1414]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newb_3\[1447] = zero[8]
Removing Lhs of wire \Bit_Div_8:MODIN5_3\[1448] = zero[8]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newb_2\[1449] = one[24]
Removing Lhs of wire \Bit_Div_8:MODIN5_2\[1450] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newb_1\[1451] = one[24]
Removing Lhs of wire \Bit_Div_8:MODIN5_1\[1452] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:newb_0\[1453] = one[24]
Removing Lhs of wire \Bit_Div_8:MODIN5_0\[1454] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:dataa_3\[1455] = \Bit_Div_8:period_counter_3\[1408]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:dataa_2\[1456] = \Bit_Div_8:period_counter_2\[1410]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:dataa_1\[1457] = \Bit_Div_8:period_counter_1\[1412]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:dataa_0\[1458] = \Bit_Div_8:period_counter_0\[1414]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:datab_3\[1459] = zero[8]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:datab_2\[1460] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:datab_1\[1461] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:datab_0\[1462] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:a_3\[1463] = \Bit_Div_8:period_counter_3\[1408]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:a_2\[1464] = \Bit_Div_8:period_counter_2\[1410]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:a_1\[1465] = \Bit_Div_8:period_counter_1\[1412]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:a_0\[1466] = \Bit_Div_8:period_counter_0\[1414]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:b_3\[1467] = zero[8]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:b_2\[1468] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:b_1\[1469] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:b_0\[1470] = one[24]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:albi_2\[1482] = zero[8]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:agbi_2\[1483] = zero[8]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:lti_1\[1486] = \Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_3\[1484]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:gti_1\[1487] = \Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_3\[1485]
Removing Lhs of wire \Bit_Div_9:add_vv_vv_MODGEN_2_3\[1514] = \Bit_Div_9:MODULE_2:g2:a0:s_3\[1535]
Removing Lhs of wire \Bit_Div_9:add_vv_vv_MODGEN_2_2\[1516] = \Bit_Div_9:MODULE_2:g2:a0:s_2\[1536]
Removing Lhs of wire \Bit_Div_9:add_vv_vv_MODGEN_2_1\[1518] = \Bit_Div_9:MODULE_2:g2:a0:s_1\[1537]
Removing Lhs of wire \Bit_Div_9:add_vv_vv_MODGEN_2_0\[1520] = \Bit_Div_9:MODULE_2:g2:a0:s_0\[1538]
Removing Lhs of wire \Bit_Div_9:cmp_vv_vv_MODGEN_3\[1522] = \Bit_Div_9:MODULE_3:g1:a0:xlte\[1610]
Removing Lhs of wire \Bit_Div_9:MODULE_2:g2:a0:a_3\[1523] = \Bit_Div_9:MODIN3_3\[1524]
Removing Lhs of wire \Bit_Div_9:MODIN3_3\[1524] = \Bit_Div_9:period_counter_3\[1513]
Removing Lhs of wire \Bit_Div_9:MODULE_2:g2:a0:a_2\[1525] = \Bit_Div_9:MODIN3_2\[1526]
Removing Lhs of wire \Bit_Div_9:MODIN3_2\[1526] = \Bit_Div_9:period_counter_2\[1515]
Removing Lhs of wire \Bit_Div_9:MODULE_2:g2:a0:a_1\[1527] = \Bit_Div_9:MODIN3_1\[1528]
Removing Lhs of wire \Bit_Div_9:MODIN3_1\[1528] = \Bit_Div_9:period_counter_1\[1517]
Removing Lhs of wire \Bit_Div_9:MODULE_2:g2:a0:a_0\[1529] = \Bit_Div_9:MODIN3_0\[1530]
Removing Lhs of wire \Bit_Div_9:MODIN3_0\[1530] = \Bit_Div_9:period_counter_0\[1519]
Removing Lhs of wire \Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[1542] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[1543] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newa_3\[1544] = \Bit_Div_9:period_counter_3\[1513]
Removing Lhs of wire \Bit_Div_9:MODIN4_3\[1545] = \Bit_Div_9:period_counter_3\[1513]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newa_2\[1546] = \Bit_Div_9:period_counter_2\[1515]
Removing Lhs of wire \Bit_Div_9:MODIN4_2\[1547] = \Bit_Div_9:period_counter_2\[1515]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newa_1\[1548] = \Bit_Div_9:period_counter_1\[1517]
Removing Lhs of wire \Bit_Div_9:MODIN4_1\[1549] = \Bit_Div_9:period_counter_1\[1517]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newa_0\[1550] = \Bit_Div_9:period_counter_0\[1519]
Removing Lhs of wire \Bit_Div_9:MODIN4_0\[1551] = \Bit_Div_9:period_counter_0\[1519]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newb_3\[1552] = zero[8]
Removing Lhs of wire \Bit_Div_9:MODIN5_3\[1553] = zero[8]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newb_2\[1554] = one[24]
Removing Lhs of wire \Bit_Div_9:MODIN5_2\[1555] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newb_1\[1556] = one[24]
Removing Lhs of wire \Bit_Div_9:MODIN5_1\[1557] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:newb_0\[1558] = one[24]
Removing Lhs of wire \Bit_Div_9:MODIN5_0\[1559] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:dataa_3\[1560] = \Bit_Div_9:period_counter_3\[1513]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:dataa_2\[1561] = \Bit_Div_9:period_counter_2\[1515]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:dataa_1\[1562] = \Bit_Div_9:period_counter_1\[1517]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:dataa_0\[1563] = \Bit_Div_9:period_counter_0\[1519]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:datab_3\[1564] = zero[8]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:datab_2\[1565] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:datab_1\[1566] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:datab_0\[1567] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:a_3\[1568] = \Bit_Div_9:period_counter_3\[1513]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:a_2\[1569] = \Bit_Div_9:period_counter_2\[1515]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:a_1\[1570] = \Bit_Div_9:period_counter_1\[1517]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:a_0\[1571] = \Bit_Div_9:period_counter_0\[1519]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:b_3\[1572] = zero[8]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:b_2\[1573] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:b_1\[1574] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:b_0\[1575] = one[24]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:albi_2\[1587] = zero[8]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:agbi_2\[1588] = zero[8]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:lti_1\[1591] = \Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_3\[1589]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:gti_1\[1592] = \Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_3\[1590]
Removing Lhs of wire tmp__cy_tff_4_clk[1618] = ADC_OUT_BUS_3[761]
Removing Rhs of wire MUX_BUS_2[1622] = \MUXMSB_13:tmp__MUXMSB_13_reg\[1621]
Removing Lhs of wire \ADC_1_OUT_MSB:clk\[1623] = ADC_REG_CK[683]
Removing Lhs of wire \ADC_1_OUT_MSB:rst\[1624] = zero[8]
Removing Lhs of wire \ADC_1_OUT_LSB:clk\[1646] = ADC_REG_CK[683]
Removing Lhs of wire \ADC_1_OUT_LSB:rst\[1647] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_7\[1665] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_6\[1666] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_5\[1667] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_4\[1668] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_3\[1669] = MUX_BUS_11[738]
Removing Lhs of wire \DAC_IN_MSB:status_2\[1670] = MUX_BUS_10[742]
Removing Lhs of wire \DAC_IN_MSB:status_1\[1671] = MUX_BUS_9[746]
Removing Lhs of wire \DAC_IN_MSB:status_0\[1672] = MUX_BUS_8[750]
Removing Lhs of wire \DAC_IN_LSB:status_7\[1674] = MUX_BUS_7[755]
Removing Lhs of wire \DAC_IN_LSB:status_6\[1675] = MUX_BUS_6[767]
Removing Lhs of wire \DAC_IN_LSB:status_5\[1676] = MUX_BUS_5[759]
Removing Lhs of wire \DAC_IN_LSB:status_4\[1677] = MUX_BUS_4[771]
Removing Lhs of wire \DAC_IN_LSB:status_3\[1678] = MUX_BUS_3[763]
Removing Lhs of wire \DAC_IN_LSB:status_2\[1679] = MUX_BUS_2[1622]
Removing Lhs of wire \DAC_IN_LSB:status_1\[1680] = MUX_BUS_1[676]
Removing Lhs of wire \DAC_IN_LSB:status_0\[1681] = MUX_BUS_0[681]
Removing Lhs of wire tmp__cy_tff_2_clk[1684] = ADC_OUT_BUS_0[679]
Removing Lhs of wire tmp__cy_tff_1_clk[1686] = ADC_OUT_BUS_1[674]
Removing Lhs of wire \SPI_DAC:BSPIM:so_send_reg\\D\[1688] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:mosi_pre_reg\\D\[1694] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:dpcounter_one_reg\\D\[1696] = \SPI_DAC:BSPIM:load_rx_data\[136]
Removing Lhs of wire \SPI_DAC:BSPIM:mosi_from_dp_reg\\D\[1697] = \SPI_DAC:BSPIM:mosi_from_dp\[150]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\[1701] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\[1702] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\[1703] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\[1704] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\[1705] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\[1706] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\\D\[1771] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect\[525]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\\D\[1773] = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\[522]
Removing Lhs of wire ADC_DIV_Q_11D[1775] = \Bit_Div_11:pwm\[1101]
Removing Lhs of wire ADC_DIV_Q_10D[1776] = \Bit_Div_10:pwm\[996]
Removing Lhs of wire ADC_DIV_Q_9D[1777] = \Bit_Div_9:pwm\[1521]
Removing Lhs of wire ADC_DIV_Q_8D[1778] = \Bit_Div_8:pwm\[1416]
Removing Lhs of wire ADC_DIV_Q_7D[1779] = \Bit_Div_7:pwm\[1311]
Removing Lhs of wire ADC_DIV_Q_5D[1780] = \Bit_Div_5:pwm\[890]
Removing Lhs of wire ADC_DIV_Q_6D[1781] = \Bit_Div_6:pwm\[1206]
Removing Lhs of wire ADC_DIV_Q_4D[1782] = \Bit_Div_4:pwm\[781]
Removing Lhs of wire \Bit_Div_4:period_counter_3\\D\[1783] = \Bit_Div_4:MODULE_2:g2:a0:s_3\[799]
Removing Lhs of wire \Bit_Div_4:period_counter_2\\D\[1784] = \Bit_Div_4:MODULE_2:g2:a0:s_2\[800]
Removing Lhs of wire \Bit_Div_4:period_counter_1\\D\[1785] = \Bit_Div_4:MODULE_2:g2:a0:s_1\[801]
Removing Lhs of wire \Bit_Div_4:period_counter_0\\D\[1786] = \Bit_Div_4:MODULE_2:g2:a0:s_0\[802]
Removing Lhs of wire \Bit_Div_5:period_counter_3\\D\[1787] = \Bit_Div_5:MODULE_2:g2:a0:s_3\[904]
Removing Lhs of wire \Bit_Div_5:period_counter_2\\D\[1788] = \Bit_Div_5:MODULE_2:g2:a0:s_2\[905]
Removing Lhs of wire \Bit_Div_5:period_counter_1\\D\[1789] = \Bit_Div_5:MODULE_2:g2:a0:s_1\[906]
Removing Lhs of wire \Bit_Div_5:period_counter_0\\D\[1790] = \Bit_Div_5:MODULE_2:g2:a0:s_0\[907]
Removing Lhs of wire \Bit_Div_10:period_counter_3\\D\[1791] = \Bit_Div_10:MODULE_2:g2:a0:s_3\[1010]
Removing Lhs of wire \Bit_Div_10:period_counter_2\\D\[1792] = \Bit_Div_10:MODULE_2:g2:a0:s_2\[1011]
Removing Lhs of wire \Bit_Div_10:period_counter_1\\D\[1793] = \Bit_Div_10:MODULE_2:g2:a0:s_1\[1012]
Removing Lhs of wire \Bit_Div_10:period_counter_0\\D\[1794] = \Bit_Div_10:MODULE_2:g2:a0:s_0\[1013]
Removing Lhs of wire \Bit_Div_11:period_counter_3\\D\[1795] = \Bit_Div_11:MODULE_2:g2:a0:s_3\[1115]
Removing Lhs of wire \Bit_Div_11:period_counter_2\\D\[1796] = \Bit_Div_11:MODULE_2:g2:a0:s_2\[1116]
Removing Lhs of wire \Bit_Div_11:period_counter_1\\D\[1797] = \Bit_Div_11:MODULE_2:g2:a0:s_1\[1117]
Removing Lhs of wire \Bit_Div_11:period_counter_0\\D\[1798] = \Bit_Div_11:MODULE_2:g2:a0:s_0\[1118]
Removing Lhs of wire \Bit_Div_6:period_counter_3\\D\[1799] = \Bit_Div_6:MODULE_2:g2:a0:s_3\[1220]
Removing Lhs of wire \Bit_Div_6:period_counter_2\\D\[1800] = \Bit_Div_6:MODULE_2:g2:a0:s_2\[1221]
Removing Lhs of wire \Bit_Div_6:period_counter_1\\D\[1801] = \Bit_Div_6:MODULE_2:g2:a0:s_1\[1222]
Removing Lhs of wire \Bit_Div_6:period_counter_0\\D\[1802] = \Bit_Div_6:MODULE_2:g2:a0:s_0\[1223]
Removing Lhs of wire \Bit_Div_7:period_counter_3\\D\[1803] = \Bit_Div_7:MODULE_2:g2:a0:s_3\[1325]
Removing Lhs of wire \Bit_Div_7:period_counter_2\\D\[1804] = \Bit_Div_7:MODULE_2:g2:a0:s_2\[1326]
Removing Lhs of wire \Bit_Div_7:period_counter_1\\D\[1805] = \Bit_Div_7:MODULE_2:g2:a0:s_1\[1327]
Removing Lhs of wire \Bit_Div_7:period_counter_0\\D\[1806] = \Bit_Div_7:MODULE_2:g2:a0:s_0\[1328]
Removing Lhs of wire \Bit_Div_8:period_counter_3\\D\[1807] = \Bit_Div_8:MODULE_2:g2:a0:s_3\[1430]
Removing Lhs of wire \Bit_Div_8:period_counter_2\\D\[1808] = \Bit_Div_8:MODULE_2:g2:a0:s_2\[1431]
Removing Lhs of wire \Bit_Div_8:period_counter_1\\D\[1809] = \Bit_Div_8:MODULE_2:g2:a0:s_1\[1432]
Removing Lhs of wire \Bit_Div_8:period_counter_0\\D\[1810] = \Bit_Div_8:MODULE_2:g2:a0:s_0\[1433]
Removing Lhs of wire \Bit_Div_9:period_counter_3\\D\[1811] = \Bit_Div_9:MODULE_2:g2:a0:s_3\[1535]
Removing Lhs of wire \Bit_Div_9:period_counter_2\\D\[1812] = \Bit_Div_9:MODULE_2:g2:a0:s_2\[1536]
Removing Lhs of wire \Bit_Div_9:period_counter_1\\D\[1813] = \Bit_Div_9:MODULE_2:g2:a0:s_1\[1537]
Removing Lhs of wire \Bit_Div_9:period_counter_0\\D\[1814] = \Bit_Div_9:MODULE_2:g2:a0:s_0\[1538]

------------------------------------------------------
Aliased 0 equations, 696 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\SPI_DAC:BSPIM:load_rx_data\' (cost = 1):
\SPI_DAC:BSPIM:load_rx_data\ <= ((not \SPI_DAC:BSPIM:count_4\ and not \SPI_DAC:BSPIM:count_3\ and not \SPI_DAC:BSPIM:count_2\ and not \SPI_DAC:BSPIM:count_1\ and \SPI_DAC:BSPIM:count_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_4:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_4:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_4:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_4:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_4:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_4:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_4:period_counter_0\
	OR not \Bit_Div_4:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_4:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_4:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_4:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_5:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_5:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_5:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_5:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_5:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_5:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_5:period_counter_0\
	OR not \Bit_Div_5:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_5:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_5:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_5:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_10:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_10:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_10:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_10:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_10:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_10:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_10:period_counter_0\
	OR not \Bit_Div_10:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_10:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_10:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_10:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_11:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_11:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_11:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_11:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_11:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_11:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_11:period_counter_0\
	OR not \Bit_Div_11:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_11:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_11:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_11:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_6:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_6:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_6:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_6:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_6:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_6:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_6:period_counter_0\
	OR not \Bit_Div_6:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_6:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_6:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_6:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_7:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_7:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_7:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_7:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_7:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_7:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_7:period_counter_0\
	OR not \Bit_Div_7:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_7:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_7:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_7:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_8:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_8:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_8:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_8:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_8:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_8:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_8:period_counter_0\
	OR not \Bit_Div_8:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_8:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_8:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_8:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\Bit_Div_9:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:xnor_array_2\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:xnor_array_2\ <= (\Bit_Div_9:period_counter_2\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:xnor_array_1\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:xnor_array_1\ <= (\Bit_Div_9:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_3\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_3\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_3\ <= (\Bit_Div_9:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:albi_1\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:albi_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:agbi_1\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:agbi_1\ <= (\Bit_Div_9:period_counter_3\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_0\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_0\ <= (not \Bit_Div_9:period_counter_0\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_0\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_0\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_1\' (cost = 2):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_1\ <= (not \Bit_Div_9:period_counter_0\
	OR not \Bit_Div_9:period_counter_1\);

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_1\' (cost = 0):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:gx:u0:agbi_0\' (cost = 1):
\Bit_Div_9:MODULE_3:g1:a0:gx:u0:agbi_0\ <= (\Bit_Div_9:MODULE_3:g1:a0:gx:u0:gti_0\
	OR \Bit_Div_9:period_counter_3\);


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_4:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_4:period_counter_3\ and not \Bit_Div_4:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_4:period_counter_1\ and \Bit_Div_4:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_5:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_5:period_counter_3\ and not \Bit_Div_5:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_5:period_counter_1\ and \Bit_Div_5:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_10:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_10:period_counter_3\ and not \Bit_Div_10:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_10:period_counter_1\ and \Bit_Div_10:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_11:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_11:period_counter_3\ and not \Bit_Div_11:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_11:period_counter_1\ and \Bit_Div_11:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_6:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_6:period_counter_3\ and not \Bit_Div_6:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_6:period_counter_1\ and \Bit_Div_6:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_7:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_7:period_counter_3\ and not \Bit_Div_7:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_7:period_counter_1\ and \Bit_Div_7:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_8:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_8:period_counter_3\ and not \Bit_Div_8:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_8:period_counter_1\ and \Bit_Div_8:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_3:g1:a0:xlte\' (cost = 2):
\Bit_Div_9:MODULE_3:g1:a0:xlte\ <= ((not \Bit_Div_9:period_counter_3\ and not \Bit_Div_9:MODULE_3:g1:a0:gx:u0:gti_0\));

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 4):
\Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\Bit_Div_9:period_counter_1\ and \Bit_Div_9:period_counter_0\));


Substituting virtuals - pass 3:

Note:  Virtual signal \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_4:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_4:period_counter_2\ and \Bit_Div_4:period_counter_1\ and \Bit_Div_4:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_5:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_5:period_counter_2\ and \Bit_Div_5:period_counter_1\ and \Bit_Div_5:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_10:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_10:period_counter_2\ and \Bit_Div_10:period_counter_1\ and \Bit_Div_10:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_11:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_11:period_counter_2\ and \Bit_Div_11:period_counter_1\ and \Bit_Div_11:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_6:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_6:period_counter_2\ and \Bit_Div_6:period_counter_1\ and \Bit_Div_6:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_7:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_7:period_counter_2\ and \Bit_Div_7:period_counter_1\ and \Bit_Div_7:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_8:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_8:period_counter_2\ and \Bit_Div_8:period_counter_1\ and \Bit_Div_8:period_counter_0\));

Note:  Expanding virtual equation for '\Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 4):
\Bit_Div_9:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <= ((\Bit_Div_9:period_counter_2\ and \Bit_Div_9:period_counter_1\ and \Bit_Div_9:period_counter_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 143 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Aliasing \Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Aliasing \Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Aliasing \Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Aliasing \Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Aliasing \Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Aliasing \Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Aliasing \Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_2\ to zero
Removing Lhs of wire \Bit_Div_4:MODULE_3:g1:a0:gx:u0:gt_2\[864] = zero[8]
Removing Lhs of wire \Bit_Div_5:MODULE_3:g1:a0:gx:u0:gt_2\[969] = zero[8]
Removing Lhs of wire \Bit_Div_10:MODULE_3:g1:a0:gx:u0:gt_2\[1075] = zero[8]
Removing Lhs of wire \Bit_Div_11:MODULE_3:g1:a0:gx:u0:gt_2\[1180] = zero[8]
Removing Lhs of wire \Bit_Div_6:MODULE_3:g1:a0:gx:u0:gt_2\[1285] = zero[8]
Removing Lhs of wire \Bit_Div_7:MODULE_3:g1:a0:gx:u0:gt_2\[1390] = zero[8]
Removing Lhs of wire \Bit_Div_8:MODULE_3:g1:a0:gx:u0:gt_2\[1495] = zero[8]
Removing Lhs of wire \Bit_Div_9:MODULE_3:g1:a0:gx:u0:gt_2\[1600] = zero[8]

------------------------------------------------------
Aliased 0 equations, 8 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj" -dcpsoc3 ADC_DAC.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.150ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.0.0.432, Family: PSoC3, Started at: Friday, 14 April 2017 16:21:59
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -d CY8C5888LTQ-LP097 ADC_DAC.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.035ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \Bit_Div_4:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_4:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_4:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Removed wire end \Bit_Div_5:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_5:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_5:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Removed wire end \Bit_Div_10:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_10:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_10:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Removed wire end \Bit_Div_11:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_11:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_11:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Removed wire end \Bit_Div_6:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_6:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_6:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Removed wire end \Bit_Div_7:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_7:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_7:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Removed wire end \Bit_Div_8:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_8:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_8:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Removed wire end \Bit_Div_9:MODULE_3:g1:a0:gx:u0:lti_0\ kept \Bit_Div_9:MODULE_3:g1:a0:gx:u0:lt_2\
    Removed wire end \Bit_Div_9:MODULE_3:g1:a0:gx:u0:gti_0\ kept zero
    Converted constant MacroCell: \SPI_DAC:BSPIM:so_send_reg\ from registered to combinatorial
    Converted constant MacroCell: \SPI_DAC:BSPIM:mosi_pre_reg\ from registered to combinatorial
Assigning clock ADC_SAR_Seq_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'SPI_DAC_IntClock'. Fanout=1, Signal=\SPI_DAC:Net_276\
    Digital Clock 1: Automatic-assigning  clock 'Bus_clock'. Fanout=12, Signal=ADC_REG_CK
    Digital Clock 2: Automatic-assigning  clock 'ADC_REG_CLOCK'. Fanout=2, Signal=ADC_CLK
    Digital Clock 3: Automatic-assigning  clock 'SEQ_CLOCK'. Fanout=73, Signal=Net_11790
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \SPI_DAC:BSPIM:ClkEn\: with output requested to be synchronous
        ClockIn: SPI_DAC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: SPI_DAC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: SEQ_CLOCK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: SEQ_CLOCK, EnableOut: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: SEQ_CLOCK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: SEQ_CLOCK, EnableOut: Constant 1
</CYPRESSTAG>
<CYPRESSTAG name="UDB Routed Clock Assignment">
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_2
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_2
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_4
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_4
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_5
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_5
    Routed Clock: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_2
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_2
    Routed Clock: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_3
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_3
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_6
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_6
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_7
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_7
    Routed Clock: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_0
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_0
    Routed Clock: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_1
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_1
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_3
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_3
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_0
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_0
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_1
        Effective Clock: Bus_clock
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 13 pin(s) will be assigned a location by the fitter: \LCD_Char_1:LCDPort(0)\, \LCD_Char_1:LCDPort(1)\, \LCD_Char_1:LCDPort(2)\, \LCD_Char_1:LCDPort(3)\, \LCD_Char_1:LCDPort(4)\, \LCD_Char_1:LCDPort(5)\, \LCD_Char_1:LCDPort(6)\, AUDIO_IN(0), DIV_MUX_CONTROL(0), MASK_OFF_CONTROL(0), MISO_IN(0), PWM_1_CONTROL(0), SAMPLE_RATE_CONTROL(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = \LCD_Char_1:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(0)\__PA ,
            pad => \LCD_Char_1:LCDPort(0)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(1)\__PA ,
            pad => \LCD_Char_1:LCDPort(1)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(2)\__PA ,
            pad => \LCD_Char_1:LCDPort(2)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(3)\__PA ,
            pad => \LCD_Char_1:LCDPort(3)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(4)\__PA ,
            pad => \LCD_Char_1:LCDPort(4)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(5)\__PA ,
            pad => \LCD_Char_1:LCDPort(5)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(6)\__PA ,
            pad => \LCD_Char_1:LCDPort(6)_PAD\ );

    Pin : Name = AUDIO_IN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => AUDIO_IN(0)__PA ,
            analog_term => Net_806 ,
            pad => AUDIO_IN(0)_PAD );

    Pin : Name = DIV_MUX_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DIV_MUX_CONTROL(0)__PA ,
            analog_term => Net_12634 ,
            pad => DIV_MUX_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ );

    Pin : Name = MASK_OFF_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MASK_OFF_CONTROL(0)__PA ,
            analog_term => Net_12632 ,
            pad => MASK_OFF_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ );

    Pin : Name = MOSI_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MOSI_OUT(0)__PA ,
            input => Net_6027 ,
            pad => MOSI_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SAMPLE_RATE_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SAMPLE_RATE_CONTROL(0)__PA ,
            analog_term => Net_12631 ,
            pad => SAMPLE_RATE_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ );

    Pin : Name = VREF_BUFF(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => VREF_BUFF(0)__PA ,
            analog_term => Net_775 ,
            pad => VREF_BUFF(0)_PAD );
        Properties:
        {
        }

    Pin : Name = MISO_IN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MISO_IN(0)__PA ,
            fb => Net_6028 ,
            pad => MISO_IN(0)_PAD );

    Pin : Name = SCLK_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SCLK_OUT(0)__PA ,
            input => Net_6026 ,
            pad => SCLK_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SS_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: INP_DIS_LO
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SS_OUT(0)__PA ,
            input => Net_6025 ,
            pad => SS_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = PWM_1_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => PWM_1_CONTROL(0)__PA ,
            analog_term => Net_21813 ,
            pad => PWM_1_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:ch_addr_5\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:ch_addr_4\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:ch_addr_3\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:ch_addr_2\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:ch_addr_1\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:ch_addr_1\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq:ch_addr_0\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:load_rx_data\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\
        );
        Output = \SPI_DAC:BSPIM:load_rx_data\ (fanout=3)

    MacroCell: Name=\SPI_DAC:BSPIM:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_0\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:tx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_4\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:rx_status_6\, Mode=(Combinatorial)
        Total # of inputs        : 6
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:rx_status_4\
        );
        Output = \SPI_DAC:BSPIM:rx_status_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:ch_addr_5\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:ch_addr_4\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:ch_addr_3\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:ch_addr_2\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_12629 * !\ADC_SAR_Seq:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=MUX_BUS_1, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_1 * ADC_OUT_BUS_1
            + DIV_MASK_BUS_1 * ADC_DIV_Q_1
        );
        Output = MUX_BUS_1 (fanout=1)

    MacroCell: Name=MUX_BUS_0, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_0 * ADC_OUT_BUS_0
            + DIV_MASK_BUS_0 * ADC_DIV_Q_0
        );
        Output = MUX_BUS_0 (fanout=1)

    MacroCell: Name=MUX_BUS_11, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_11 * ADC_OUT_BUS_11
            + DIV_MASK_BUS_11 * ADC_DIV_Q_11
        );
        Output = MUX_BUS_11 (fanout=1)

    MacroCell: Name=MUX_BUS_10, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_10 * ADC_OUT_BUS_10
            + DIV_MASK_BUS_10 * ADC_DIV_Q_10
        );
        Output = MUX_BUS_10 (fanout=1)

    MacroCell: Name=MUX_BUS_9, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_9 * ADC_OUT_BUS_9
            + DIV_MASK_BUS_9 * ADC_DIV_Q_9
        );
        Output = MUX_BUS_9 (fanout=1)

    MacroCell: Name=MUX_BUS_8, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_8 * ADC_OUT_BUS_8
            + DIV_MASK_BUS_8 * ADC_DIV_Q_8
        );
        Output = MUX_BUS_8 (fanout=1)

    MacroCell: Name=MUX_BUS_7, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_7 * ADC_OUT_BUS_7
            + DIV_MASK_BUS_7 * ADC_DIV_Q_7
        );
        Output = MUX_BUS_7 (fanout=1)

    MacroCell: Name=MUX_BUS_5, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_5 * ADC_OUT_BUS_5
            + DIV_MASK_BUS_5 * ADC_DIV_Q_5
        );
        Output = MUX_BUS_5 (fanout=1)

    MacroCell: Name=MUX_BUS_3, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_3 * ADC_OUT_BUS_3
            + DIV_MASK_BUS_3 * ADC_DIV_Q_3
        );
        Output = MUX_BUS_3 (fanout=1)

    MacroCell: Name=MUX_BUS_6, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_6 * ADC_OUT_BUS_6
            + DIV_MASK_BUS_6 * ADC_DIV_Q_6
        );
        Output = MUX_BUS_6 (fanout=1)

    MacroCell: Name=MUX_BUS_4, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_4 * ADC_OUT_BUS_4
            + DIV_MASK_BUS_4 * ADC_DIV_Q_4
        );
        Output = MUX_BUS_4 (fanout=1)

    MacroCell: Name=MUX_BUS_2, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              tmp__cy_tff_3_clk * !DIV_MASK_BUS_2
            + cy_tff_3 * DIV_MASK_BUS_2
        );
        Output = MUX_BUS_2 (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)

    MacroCell: Name=Net_6027, Mode=(D-Register)
        Total # of inputs        : 11
        Total # of product terms : 7
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 7 pterms
        !(
              !Net_6027 * !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:mosi_from_dp\
            + !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:mosi_from_dp\
        );
        Output = Net_6027 (fanout=2)

    MacroCell: Name=\SPI_DAC:BSPIM:state_2\, Mode=(D-Register)
        Total # of inputs        : 10
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              \SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              !\SPI_DAC:BSPIM:ld_ident\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_2\ (fanout=13)

    MacroCell: Name=\SPI_DAC:BSPIM:state_1\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:state_1\ (fanout=13)

    MacroCell: Name=\SPI_DAC:BSPIM:state_0\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\
            + !\SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_0\ (fanout=13)

    MacroCell: Name=Net_6025, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        !(
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * !Net_6025
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !Net_6025
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * !Net_6025
        );
        Output = Net_6025 (fanout=2)

    MacroCell: Name=\SPI_DAC:BSPIM:load_cond\, Mode=(T-Register)
        Total # of inputs        : 9
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
        );
        Output = \SPI_DAC:BSPIM:load_cond\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:ld_ident\, Mode=(T-Register)
        Total # of inputs        : 9
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:ld_ident\ (fanout=4)

    MacroCell: Name=\SPI_DAC:BSPIM:cnt_enable\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
        );
        Output = \SPI_DAC:BSPIM:cnt_enable\ (fanout=2)

    MacroCell: Name=Net_6026, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * Net_6026
        );
        Output = Net_6026 (fanout=2)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_5\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_4\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_3\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_2\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_1\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_12630, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\
        );
        Output = Net_12630 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_12630
            + \ADC_SAR_Seq:Net_3935\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=cy_tff_3, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(tmp__cy_tff_3_clk)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = cy_tff_3 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_11, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_3\
        );
        Output = ADC_DIV_Q_11 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_10, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_3\
        );
        Output = ADC_DIV_Q_10 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_9, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_3\
        );
        Output = ADC_DIV_Q_9 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_8, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_3\
        );
        Output = ADC_DIV_Q_8 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_7, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_3\
        );
        Output = ADC_DIV_Q_7 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_5, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_3\
        );
        Output = ADC_DIV_Q_5 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_6, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_3\
        );
        Output = ADC_DIV_Q_6 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_4, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_3\
        );
        Output = ADC_DIV_Q_4 (fanout=1)

    MacroCell: Name=\Bit_Div_4:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_2\ * \Bit_Div_4:period_counter_1\ * 
              \Bit_Div_4:period_counter_0\
        );
        Output = \Bit_Div_4:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_4:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_1\ * \Bit_Div_4:period_counter_0\
        );
        Output = \Bit_Div_4:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_4:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_0\
        );
        Output = \Bit_Div_4:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_4:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_4:period_counter_0\ (fanout=3)

    MacroCell: Name=\Bit_Div_5:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_2\ * \Bit_Div_5:period_counter_1\ * 
              \Bit_Div_5:period_counter_0\
        );
        Output = \Bit_Div_5:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_5:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_1\ * \Bit_Div_5:period_counter_0\
        );
        Output = \Bit_Div_5:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_5:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_0\
        );
        Output = \Bit_Div_5:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_5:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_5:period_counter_0\ (fanout=3)

    MacroCell: Name=\Bit_Div_10:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_2\ * \Bit_Div_10:period_counter_1\ * 
              \Bit_Div_10:period_counter_0\
        );
        Output = \Bit_Div_10:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_10:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_1\ * \Bit_Div_10:period_counter_0\
        );
        Output = \Bit_Div_10:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_10:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_0\
        );
        Output = \Bit_Div_10:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_10:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_10:period_counter_0\ (fanout=3)

    MacroCell: Name=\Bit_Div_11:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_2\ * \Bit_Div_11:period_counter_1\ * 
              \Bit_Div_11:period_counter_0\
        );
        Output = \Bit_Div_11:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_11:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_1\ * \Bit_Div_11:period_counter_0\
        );
        Output = \Bit_Div_11:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_11:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_0\
        );
        Output = \Bit_Div_11:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_11:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_11:period_counter_0\ (fanout=3)

    MacroCell: Name=\Bit_Div_6:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_2\ * \Bit_Div_6:period_counter_1\ * 
              \Bit_Div_6:period_counter_0\
        );
        Output = \Bit_Div_6:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_6:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_1\ * \Bit_Div_6:period_counter_0\
        );
        Output = \Bit_Div_6:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_6:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_0\
        );
        Output = \Bit_Div_6:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_6:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_6:period_counter_0\ (fanout=3)

    MacroCell: Name=\Bit_Div_7:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_2\ * \Bit_Div_7:period_counter_1\ * 
              \Bit_Div_7:period_counter_0\
        );
        Output = \Bit_Div_7:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_7:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_1\ * \Bit_Div_7:period_counter_0\
        );
        Output = \Bit_Div_7:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_7:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_0\
        );
        Output = \Bit_Div_7:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_7:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_7:period_counter_0\ (fanout=3)

    MacroCell: Name=\Bit_Div_8:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_2\ * \Bit_Div_8:period_counter_1\ * 
              \Bit_Div_8:period_counter_0\
        );
        Output = \Bit_Div_8:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_8:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_1\ * \Bit_Div_8:period_counter_0\
        );
        Output = \Bit_Div_8:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_8:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_0\
        );
        Output = \Bit_Div_8:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_8:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_8:period_counter_0\ (fanout=3)

    MacroCell: Name=\Bit_Div_9:period_counter_3\, Mode=(T-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_2\ * \Bit_Div_9:period_counter_1\ * 
              \Bit_Div_9:period_counter_0\
        );
        Output = \Bit_Div_9:period_counter_3\ (fanout=1)

    MacroCell: Name=\Bit_Div_9:period_counter_2\, Mode=(T-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_1\ * \Bit_Div_9:period_counter_0\
        );
        Output = \Bit_Div_9:period_counter_2\ (fanout=1)

    MacroCell: Name=\Bit_Div_9:period_counter_1\, Mode=(T-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_0\
        );
        Output = \Bit_Div_9:period_counter_1\ (fanout=2)

    MacroCell: Name=\Bit_Div_9:period_counter_0\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_9:period_counter_0\ (fanout=3)

    MacroCell: Name=ADC_DIV_Q_3, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_3)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_3 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_0, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_0)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_0 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_1, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_1)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_1 (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u0\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
            cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
            cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
            route_si => Net_6028 ,
            f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
            chain_out => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000000001000001000011100000000000000000100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \SPI_DAC:BSPIM:sR16:Dp:u1\

    datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u1\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
            cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
            cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
            route_si => Net_6028 ,
            f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
            so_comb => \SPI_DAC:BSPIM:mosi_from_dp\ ,
            f0_bus_stat_comb => \SPI_DAC:BSPIM:tx_status_2\ ,
            f0_blk_stat_comb => \SPI_DAC:BSPIM:tx_status_1\ ,
            f1_bus_stat_comb => \SPI_DAC:BSPIM:rx_status_5\ ,
            f1_blk_stat_comb => \SPI_DAC:BSPIM:rx_status_4\ ,
            chain_in => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000010001100001000111100000000000000000100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \SPI_DAC:BSPIM:sR16:Dp:u0\
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR_Seq:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => Net_11790 ,
            status_0 => Net_12630 ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

    statuscell: Name =\DAC_IN_MSB:sts:sts_reg\
        PORT MAP (
            status_3 => MUX_BUS_11 ,
            status_2 => MUX_BUS_10 ,
            status_1 => MUX_BUS_9 ,
            status_0 => MUX_BUS_8 );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000000"
        }
        Clock Enable: True

    statuscell: Name =\DAC_IN_LSB:sts:sts_reg\
        PORT MAP (
            status_7 => MUX_BUS_7 ,
            status_6 => MUX_BUS_6 ,
            status_5 => MUX_BUS_5 ,
            status_4 => MUX_BUS_4 ,
            status_3 => MUX_BUS_3 ,
            status_2 => MUX_BUS_2 ,
            status_1 => MUX_BUS_1 ,
            status_0 => MUX_BUS_0 );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000000"
        }
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\SPI_DAC:BSPIM:TxStsReg\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            status_4 => \SPI_DAC:BSPIM:tx_status_4\ ,
            status_3 => \SPI_DAC:BSPIM:load_rx_data\ ,
            status_2 => \SPI_DAC:BSPIM:tx_status_2\ ,
            status_1 => \SPI_DAC:BSPIM:tx_status_1\ ,
            status_0 => \SPI_DAC:BSPIM:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0000000"
            cy_md_select = "0001001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\SPI_DAC:BSPIM:RxStsReg\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            status_6 => \SPI_DAC:BSPIM:rx_status_6\ ,
            status_5 => \SPI_DAC:BSPIM:rx_status_5\ ,
            status_4 => \SPI_DAC:BSPIM:rx_status_4\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0000000"
            cy_md_select = "1000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq:nrq\ ,
            out => \ADC_SAR_Seq:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_SAR_Seq:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => Net_11790 ,
            control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\DIV_MASK_MSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_REG_CK ,
            control_7 => \DIV_MASK_MSB:control_7\ ,
            control_6 => \DIV_MASK_MSB:control_6\ ,
            control_5 => \DIV_MASK_MSB:control_5\ ,
            control_4 => \DIV_MASK_MSB:control_4\ ,
            control_3 => DIV_MASK_BUS_11 ,
            control_2 => DIV_MASK_BUS_10 ,
            control_1 => DIV_MASK_BUS_9 ,
            control_0 => DIV_MASK_BUS_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00001111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\DIV_MASK_LSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_REG_CK ,
            control_7 => DIV_MASK_BUS_7 ,
            control_6 => DIV_MASK_BUS_6 ,
            control_5 => DIV_MASK_BUS_5 ,
            control_4 => DIV_MASK_BUS_4 ,
            control_3 => DIV_MASK_BUS_3 ,
            control_2 => DIV_MASK_BUS_2 ,
            control_1 => DIV_MASK_BUS_1 ,
            control_0 => DIV_MASK_BUS_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\ADC_1_OUT_MSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_REG_CK ,
            control_7 => \ADC_1_OUT_MSB:control_7\ ,
            control_6 => \ADC_1_OUT_MSB:control_6\ ,
            control_5 => \ADC_1_OUT_MSB:control_5\ ,
            control_4 => \ADC_1_OUT_MSB:control_4\ ,
            control_3 => ADC_OUT_BUS_11 ,
            control_2 => ADC_OUT_BUS_10 ,
            control_1 => ADC_OUT_BUS_9 ,
            control_0 => ADC_OUT_BUS_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00001111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\ADC_1_OUT_LSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_REG_CK ,
            control_7 => ADC_OUT_BUS_7 ,
            control_6 => ADC_OUT_BUS_6 ,
            control_5 => ADC_OUT_BUS_5 ,
            control_4 => ADC_OUT_BUS_4 ,
            control_3 => ADC_OUT_BUS_3 ,
            control_2 => tmp__cy_tff_3_clk ,
            control_1 => ADC_OUT_BUS_1 ,
            control_0 => ADC_OUT_BUS_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\SPI_DAC:BSPIM:BitCounter\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            enable => \SPI_DAC:BSPIM:cnt_enable\ ,
            count_6 => \SPI_DAC:BSPIM:count_6\ ,
            count_5 => \SPI_DAC:BSPIM:count_5\ ,
            count_4 => \SPI_DAC:BSPIM:count_4\ ,
            count_3 => \SPI_DAC:BSPIM:count_3\ ,
            count_2 => \SPI_DAC:BSPIM:count_2\ ,
            count_1 => \SPI_DAC:BSPIM:count_1\ ,
            count_0 => \SPI_DAC:BSPIM:count_0\ ,
            tc => \SPI_DAC:BSPIM:cnt_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0011111"
            cy_route_en = 1
            cy_route_ld = 0
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => Net_11790 ,
            load => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq:ch_addr_0\ ,
            tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_576 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR_Seq:IRQ\
        PORT MAP (
            interrupt => Net_12630 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    4 :    4 :    8 : 50.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    1 :    0 :    1 : 100.00 %
Interrupts                    :    2 :   30 :   32 :  6.25 %
IO                            :   17 :   31 :   48 : 35.42 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    1 :    3 :    4 : 25.00 %
UDB                           :      :      :      :        
  Macrocells                  :  146 :   46 :  192 : 76.04 %
  Unique P-terms              :  177 :  207 :  384 : 46.09 %
  Total P-terms               :  182 :      :      :        
  Datapath Cells              :    2 :   22 :   24 :  8.33 %
  Status Cells                :    8 :   16 :   24 : 33.33 %
    Status Registers          :    3 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    7 :   17 :   24 : 29.17 %
    Control Registers         :    5 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    2 :    2 :    4 : 50.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    2 :    0 :    2 : 100.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.152ms
Tech Mapping phase: Elapsed time ==> 0s.233ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_22826" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12639" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12640" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12642" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12644" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12645" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12647" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12649" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12650" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12652" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12654" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12655" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12657" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12659" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12660" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12662" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12664" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12665" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12667" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12669" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12670" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12672" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12674" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12675" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12677" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12679" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12680" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12682" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12684" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12685" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12687" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12689" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12690" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12692" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12694" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12695" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12697" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12699" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12700" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12702" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12704" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12705" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12707" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12709" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12710" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12711" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12712" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12713" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12714" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12715" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12716" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12717" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12718" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12719" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12720" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12721" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12722" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12723" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12724" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12725" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_6@[IOP=(12)][IoId=(6)] : MOSI_OUT(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : SCLK_OUT(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : SS_OUT(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : VREF_BUFF(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : AUDIO_IN(0)
IO_6@[IOP=(1)][IoId=(6)] : DIV_MUX_CONTROL(0)
IO_2@[IOP=(3)][IoId=(2)] : MASK_OFF_CONTROL(0)
IO_7@[IOP=(1)][IoId=(7)] : PWM_1_CONTROL(0)
IO_2@[IOP=(15)][IoId=(2)] : SAMPLE_RATE_CONTROL(0)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_1:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \ADC_SAR_1:vRef_1024\
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq:SAR:vRef_Vdda_1\
OpAmp[3]@[FFB(OpAmp,3)] : \Opamp_1:ABuf\ (OPAMP-GPIO)
OpAmp[0]@[FFB(OpAmp,0)] : \Opamp_2:ABuf\ (OPAMP-GPIO)
IO_1@[IOP=(0)][IoId=(1)] : Dedicated_Output (OPAMP-GPIO)
IO_7@[IOP=(3)][IoId=(7)] : Dedicated_Output_1 (OPAMP-GPIO)
Log: apr.M0058: The analog placement iterative improvement is 52% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 94% done. (App=cydsfit)
Analog Placement Results:
IO_6@[IOP=(12)][IoId=(6)] : MOSI_OUT(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : SCLK_OUT(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : SS_OUT(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : VREF_BUFF(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : AUDIO_IN(0)
IO_5@[IOP=(15)][IoId=(5)] : DIV_MUX_CONTROL(0)
IO_2@[IOP=(2)][IoId=(2)] : MASK_OFF_CONTROL(0)
IO_1@[IOP=(2)][IoId=(1)] : PWM_1_CONTROL(0)
IO_7@[IOP=(0)][IoId=(7)] : SAMPLE_RATE_CONTROL(0)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_1:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \ADC_SAR_1:vRef_1024\
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq:SAR:vRef_Vdda_1\
OpAmp[3]@[FFB(OpAmp,3)] : \Opamp_1:ABuf\ (OPAMP-GPIO)
OpAmp[1]@[FFB(OpAmp,1)] : \Opamp_2:ABuf\ (OPAMP-GPIO)
IO_6@[IOP=(3)][IoId=(6)] : Dedicated_Output (OPAMP-GPIO)
IO_7@[IOP=(3)][IoId=(7)] : Dedicated_Output_1 (OPAMP-GPIO)

Analog Placement phase: Elapsed time ==> 6s.758ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.015ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_SAR_Seq:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_12631 {
    p0_3
  }
  Net: Net_12632 {
    p0_7
  }
  Net: Net_12634 {
    p0_0
  }
  Net: Net_21813 {
    p0_4
  }
  Net: Net_22826 {
  }
  Net: Net_12639 {
  }
  Net: Net_12640 {
  }
  Net: Net_12642 {
  }
  Net: Net_12644 {
  }
  Net: Net_12645 {
  }
  Net: Net_12647 {
  }
  Net: Net_12649 {
  }
  Net: Net_12650 {
  }
  Net: Net_12652 {
  }
  Net: Net_12654 {
  }
  Net: Net_12655 {
  }
  Net: Net_12657 {
  }
  Net: Net_12659 {
  }
  Net: Net_12660 {
  }
  Net: Net_12662 {
  }
  Net: Net_12664 {
  }
  Net: Net_12665 {
  }
  Net: Net_12667 {
  }
  Net: Net_12669 {
  }
  Net: Net_12670 {
  }
  Net: Net_12672 {
  }
  Net: Net_12674 {
  }
  Net: Net_12675 {
  }
  Net: Net_12677 {
  }
  Net: Net_12679 {
  }
  Net: Net_12680 {
  }
  Net: Net_12682 {
  }
  Net: Net_12684 {
  }
  Net: Net_12685 {
  }
  Net: Net_12687 {
  }
  Net: Net_12689 {
  }
  Net: Net_12690 {
  }
  Net: Net_12692 {
  }
  Net: Net_12694 {
  }
  Net: Net_12695 {
  }
  Net: Net_12697 {
  }
  Net: Net_12699 {
  }
  Net: Net_12700 {
  }
  Net: Net_12702 {
  }
  Net: Net_12704 {
  }
  Net: Net_12705 {
  }
  Net: Net_12707 {
  }
  Net: Net_12709 {
  }
  Net: Net_12710 {
  }
  Net: Net_12711 {
  }
  Net: Net_12712 {
  }
  Net: Net_12713 {
  }
  Net: Net_12714 {
  }
  Net: Net_12715 {
  }
  Net: Net_12716 {
  }
  Net: Net_12717 {
  }
  Net: Net_12718 {
  }
  Net: Net_12719 {
  }
  Net: Net_12720 {
  }
  Net: Net_12721 {
  }
  Net: Net_12722 {
  }
  Net: Net_12723 {
  }
  Net: Net_12724 {
  }
  Net: Net_12725 {
  }
  Net: Net_806 {
    opamp_3_vplus
    opamp_3_vplus_x_p3_3
    p3_3
  }
  Net: Net_775 {
    p3_6
    agr6_x_p3_6
    agr6
    agl6_x_agr6
    agl6
    agl6_x_p0_6
    p0_6
    opamp_1_vminus_x_p3_6
    opamp_1_vminus
  }
  Net: Net_800 {
    p3_7
    opamp_3_vminus_x_p3_7
    opamp_3_vminus
    agr7_x_p3_7
    agr7
    agr7_x_sar_1_vplus
    sar_1_vplus
  }
  Net: \ADC_SAR_1:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC_SAR_1:Net_209\ {
  }
  Net: \ADC_SAR_1:Net_233\ {
    opamp_1_vplus
    opamp_1_vplus_x_opamp_13_vref_1024
    opamp_13_vref_1024
    common_vref_1024
    sar_1_vref_1024
    sar_1_vref_x_sar_1_vref_1024
    sar_1_vref
  }
  Net: \ADC_SAR_Seq:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR_Seq:SAR:Net_209\ {
  }
  Net: \ADC_SAR_Seq:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: AmuxNet::\ADC_SAR_Seq:AMuxHw_2\ {
    sar_0_vplus
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_3
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p0_4
    agl7_x_p0_7
    agl4_x_p0_0
    p0_3
    p0_4
    p0_7
    p0_0
  }
}
Map of item to net {
  opamp_3_vplus                                    -> Net_806
  opamp_3_vplus_x_p3_3                             -> Net_806
  p3_3                                             -> Net_806
  p3_6                                             -> Net_775
  agr6_x_p3_6                                      -> Net_775
  agr6                                             -> Net_775
  agl6_x_agr6                                      -> Net_775
  agl6                                             -> Net_775
  agl6_x_p0_6                                      -> Net_775
  p0_6                                             -> Net_775
  opamp_1_vminus_x_p3_6                            -> Net_775
  opamp_1_vminus                                   -> Net_775
  p3_7                                             -> Net_800
  opamp_3_vminus_x_p3_7                            -> Net_800
  opamp_3_vminus                                   -> Net_800
  agr7_x_p3_7                                      -> Net_800
  agr7                                             -> Net_800
  agr7_x_sar_1_vplus                               -> Net_800
  sar_1_vplus                                      -> Net_800
  sar_1_vrefhi                                     -> \ADC_SAR_1:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC_SAR_1:Net_126\
  sar_1_vminus                                     -> \ADC_SAR_1:Net_126\
  opamp_1_vplus                                    -> \ADC_SAR_1:Net_233\
  opamp_1_vplus_x_opamp_13_vref_1024               -> \ADC_SAR_1:Net_233\
  opamp_13_vref_1024                               -> \ADC_SAR_1:Net_233\
  common_vref_1024                                 -> \ADC_SAR_1:Net_233\
  sar_1_vref_1024                                  -> \ADC_SAR_1:Net_233\
  sar_1_vref_x_sar_1_vref_1024                     -> \ADC_SAR_1:Net_233\
  sar_1_vref                                       -> \ADC_SAR_1:Net_233\
  sar_0_vrefhi                                     -> \ADC_SAR_Seq:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR_Seq:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_SAR_Seq:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_SAR_Seq:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vref                                       -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vplus                                      -> \ADC_SAR_Seq:Net_2803\
  p0_3                                             -> Net_12631
  p0_7                                             -> Net_12632
  p0_0                                             -> Net_12634
  p0_4                                             -> Net_21813
  agl7_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl7                                             -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl7_x_p0_3                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl4_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl4                                             -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl4_x_p0_4                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl7_x_p0_7                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl4_x_p0_0                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_SAR_Seq:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_12631
      Outer: agl7_x_p0_3
      Inner: __open__
      Path {
        p0_3
        agl7_x_p0_3
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_12632
      Outer: agl7_x_p0_7
      Inner: __open__
      Path {
        p0_7
        agl7_x_p0_7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_12634
      Outer: agl4_x_p0_0
      Inner: __open__
      Path {
        p0_0
        agl4_x_p0_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_21813
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_22826
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_12639
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_12640
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_12642
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_12644
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_12645
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_12647
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_12649
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_12650
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_12652
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_12654
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_12655
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_12657
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_12659
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_12660
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_12662
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_12664
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_12665
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_12667
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_12669
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_12670
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_12672
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_12674
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_12675
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_12677
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_12679
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_12680
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_12682
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_12684
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_12685
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_12687
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_12689
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_12690
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_12692
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_12694
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_12695
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_12697
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_12699
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_12700
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_12702
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_12704
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_12705
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_12707
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_12709
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_12710
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_12711
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_12712
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_12713
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_12714
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_12715
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_12716
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_12717
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_12718
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_12719
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_12720
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_12721
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_12722
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_12723
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_12724
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_12725
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.278ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 6.2 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   48 :    0 :   48 : 100.00%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            6.54
                   Pterms :            3.73
               Macrocells :            3.04
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.004ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.175ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         24 :       8.42 :       6.08
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=3, #inputs=6, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=MUX_BUS_8, Mode=(Combinatorial) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_8 * ADC_OUT_BUS_8
            + DIV_MASK_BUS_8 * ADC_DIV_Q_8
        );
        Output = MUX_BUS_8 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Bit_Div_10:period_counter_3\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_2\ * \Bit_Div_10:period_counter_1\ * 
              \Bit_Div_10:period_counter_0\
        );
        Output = \Bit_Div_10:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Bit_Div_10:period_counter_0\, Mode=(T-Register) @ [UDB=(0,0)][LB=0][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_10:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,0)][LB=1] #macrocells=4, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=MUX_BUS_9, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_9 * ADC_OUT_BUS_9
            + DIV_MASK_BUS_9 * ADC_DIV_Q_9
        );
        Output = MUX_BUS_9 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_11, Mode=(Combinatorial) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_11 * ADC_OUT_BUS_11
            + DIV_MASK_BUS_11 * ADC_DIV_Q_11
        );
        Output = MUX_BUS_11 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Bit_Div_10:period_counter_1\, Mode=(T-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_0\
        );
        Output = \Bit_Div_10:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Bit_Div_10:period_counter_2\, Mode=(T-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_1\ * \Bit_Div_10:period_counter_0\
        );
        Output = \Bit_Div_10:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\DAC_IN_MSB:sts:sts_reg\
    PORT MAP (
        status_3 => MUX_BUS_11 ,
        status_2 => MUX_BUS_10 ,
        status_1 => MUX_BUS_9 ,
        status_0 => MUX_BUS_8 );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000000"
    }
    Clock Enable: True

controlcell: Name =\DIV_MASK_MSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_REG_CK ,
        control_7 => \DIV_MASK_MSB:control_7\ ,
        control_6 => \DIV_MASK_MSB:control_6\ ,
        control_5 => \DIV_MASK_MSB:control_5\ ,
        control_4 => \DIV_MASK_MSB:control_4\ ,
        control_3 => DIV_MASK_BUS_11 ,
        control_2 => DIV_MASK_BUS_10 ,
        control_1 => DIV_MASK_BUS_9 ,
        control_0 => DIV_MASK_BUS_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00001111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=3, #inputs=6, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=MUX_BUS_10, Mode=(Combinatorial) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_10 * ADC_OUT_BUS_10
            + DIV_MASK_BUS_10 * ADC_DIV_Q_10
        );
        Output = MUX_BUS_10 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\Bit_Div_5:period_counter_3\, Mode=(T-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_2\ * \Bit_Div_5:period_counter_1\ * 
              \Bit_Div_5:period_counter_0\
        );
        Output = \Bit_Div_5:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Bit_Div_5:period_counter_0\, Mode=(T-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_5:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\Bit_Div_5:period_counter_1\, Mode=(T-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_0\
        );
        Output = \Bit_Div_5:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Bit_Div_5:period_counter_2\, Mode=(T-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_1\ * \Bit_Div_5:period_counter_0\
        );
        Output = \Bit_Div_5:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC_1_OUT_MSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_REG_CK ,
        control_7 => \ADC_1_OUT_MSB:control_7\ ,
        control_6 => \ADC_1_OUT_MSB:control_6\ ,
        control_5 => \ADC_1_OUT_MSB:control_5\ ,
        control_4 => \ADC_1_OUT_MSB:control_4\ ,
        control_3 => ADC_OUT_BUS_11 ,
        control_2 => ADC_OUT_BUS_10 ,
        control_1 => ADC_OUT_BUS_9 ,
        control_0 => ADC_OUT_BUS_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00001111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Bit_Div_11:period_counter_3\, Mode=(T-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_2\ * \Bit_Div_11:period_counter_1\ * 
              \Bit_Div_11:period_counter_0\
        );
        Output = \Bit_Div_11:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Bit_Div_11:period_counter_1\, Mode=(T-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_0\
        );
        Output = \Bit_Div_11:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Bit_Div_11:period_counter_0\, Mode=(T-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_11:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Bit_Div_11:period_counter_2\, Mode=(T-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_1\ * \Bit_Div_11:period_counter_0\
        );
        Output = \Bit_Div_11:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_11, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_11:period_counter_3\
        );
        Output = ADC_DIV_Q_11 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_10, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_10:period_counter_3\
        );
        Output = ADC_DIV_Q_10 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=ADC_DIV_Q_8, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_3\
        );
        Output = ADC_DIV_Q_8 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,3)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u0\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
        cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
        cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
        route_si => Net_6028 ,
        f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
        chain_out => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000000001000001000011100000000000000000100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \SPI_DAC:BSPIM:sR16:Dp:u1\

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,5)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Bit_Div_9:period_counter_3\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_2\ * \Bit_Div_9:period_counter_1\ * 
              \Bit_Div_9:period_counter_0\
        );
        Output = \Bit_Div_9:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Bit_Div_9:period_counter_2\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_1\ * \Bit_Div_9:period_counter_0\
        );
        Output = \Bit_Div_9:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Bit_Div_9:period_counter_1\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_0\
        );
        Output = \Bit_Div_9:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Bit_Div_9:period_counter_0\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_9:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_9, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_9:period_counter_3\
        );
        Output = ADC_DIV_Q_9 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_5, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_5:period_counter_3\
        );
        Output = ADC_DIV_Q_5 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=1, #inputs=11, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=Net_6027, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 7
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 7 pterms
        !(
              !Net_6027 * !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:mosi_from_dp\
            + !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:mosi_from_dp\
        );
        Output = Net_6027 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=1, #inputs=9, #pterms=4
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:load_cond\, Mode=(T-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 9
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
        );
        Output = \SPI_DAC:BSPIM:load_cond\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=2, #inputs=8, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\SPI_DAC:BSPIM:load_rx_data\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\
        );
        Output = \SPI_DAC:BSPIM:load_rx_data\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:tx_status_4\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,2)][LB=1] #macrocells=3, #inputs=11, #pterms=7
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\SPI_DAC:BSPIM:rx_status_6\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:rx_status_4\
        );
        Output = \SPI_DAC:BSPIM:rx_status_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:cnt_enable\, Mode=(T-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
        );
        Output = \SPI_DAC:BSPIM:cnt_enable\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_6026, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * Net_6026
        );
        Output = Net_6026 (fanout=2)
        Properties               : 
        {
        }
}

count7cell: Name =\SPI_DAC:BSPIM:BitCounter\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        enable => \SPI_DAC:BSPIM:cnt_enable\ ,
        count_6 => \SPI_DAC:BSPIM:count_6\ ,
        count_5 => \SPI_DAC:BSPIM:count_5\ ,
        count_4 => \SPI_DAC:BSPIM:count_4\ ,
        count_3 => \SPI_DAC:BSPIM:count_3\ ,
        count_2 => \SPI_DAC:BSPIM:count_2\ ,
        count_1 => \SPI_DAC:BSPIM:count_1\ ,
        count_0 => \SPI_DAC:BSPIM:count_0\ ,
        tc => \SPI_DAC:BSPIM:cnt_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0011111"
        cy_route_en = 1
        cy_route_ld = 0
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u1\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
        cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
        cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
        route_si => Net_6028 ,
        f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
        so_comb => \SPI_DAC:BSPIM:mosi_from_dp\ ,
        f0_bus_stat_comb => \SPI_DAC:BSPIM:tx_status_2\ ,
        f0_blk_stat_comb => \SPI_DAC:BSPIM:tx_status_1\ ,
        f1_bus_stat_comb => \SPI_DAC:BSPIM:rx_status_5\ ,
        f1_blk_stat_comb => \SPI_DAC:BSPIM:rx_status_4\ ,
        chain_in => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000010001100001000111100000000000000000100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \SPI_DAC:BSPIM:sR16:Dp:u0\

statusicell: Name =\SPI_DAC:BSPIM:RxStsReg\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        status_6 => \SPI_DAC:BSPIM:rx_status_6\ ,
        status_5 => \SPI_DAC:BSPIM:rx_status_5\ ,
        status_4 => \SPI_DAC:BSPIM:rx_status_4\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0000000"
        cy_md_select = "1000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=2, #inputs=10, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\SPI_DAC:BSPIM:state_0\, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\
            + !\SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_0\ (fanout=13)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:ld_ident\, Mode=(T-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 9
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:ld_ident\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=Net_6025, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        !(
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * !Net_6025
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !Net_6025
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * !Net_6025
        );
        Output = Net_6025 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\SPI_DAC:BSPIM:state_1\, Mode=(T-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 10
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:state_1\ (fanout=13)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:state_2\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 10
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              \SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              !\SPI_DAC:BSPIM:ld_ident\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_2\ (fanout=13)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=3, #inputs=10, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\SPI_DAC:BSPIM:tx_status_0\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\SPI_DAC:BSPIM:TxStsReg\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        status_4 => \SPI_DAC:BSPIM:tx_status_4\ ,
        status_3 => \SPI_DAC:BSPIM:load_rx_data\ ,
        status_2 => \SPI_DAC:BSPIM:tx_status_2\ ,
        status_1 => \SPI_DAC:BSPIM:tx_status_1\ ,
        status_0 => \SPI_DAC:BSPIM:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0000000"
        cy_md_select = "0001001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=4, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Bit_Div_7:period_counter_3\, Mode=(T-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_2\ * \Bit_Div_7:period_counter_1\ * 
              \Bit_Div_7:period_counter_0\
        );
        Output = \Bit_Div_7:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Bit_Div_7:period_counter_2\, Mode=(T-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_1\ * \Bit_Div_7:period_counter_0\
        );
        Output = \Bit_Div_7:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Bit_Div_7:period_counter_1\, Mode=(T-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_0\
        );
        Output = \Bit_Div_7:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Bit_Div_7:period_counter_0\, Mode=(T-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_7:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=8, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_6, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_3\
        );
        Output = ADC_DIV_Q_6 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_6, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_6 * ADC_OUT_BUS_6
            + DIV_MASK_BUS_6 * ADC_DIV_Q_6
        );
        Output = MUX_BUS_6 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=MUX_BUS_7, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_7 * ADC_OUT_BUS_7
            + DIV_MASK_BUS_7 * ADC_DIV_Q_7
        );
        Output = MUX_BUS_7 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=ADC_DIV_Q_7, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_7:period_counter_3\
        );
        Output = ADC_DIV_Q_7 (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC_1_OUT_LSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_REG_CK ,
        control_7 => ADC_OUT_BUS_7 ,
        control_6 => ADC_OUT_BUS_6 ,
        control_5 => ADC_OUT_BUS_5 ,
        control_4 => ADC_OUT_BUS_4 ,
        control_3 => ADC_OUT_BUS_3 ,
        control_2 => tmp__cy_tff_3_clk ,
        control_1 => ADC_OUT_BUS_1 ,
        control_0 => ADC_OUT_BUS_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=3, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_0, Mode=(T-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_0)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_0 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_2, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              tmp__cy_tff_3_clk * !DIV_MASK_BUS_2
            + cy_tff_3 * DIV_MASK_BUS_2
        );
        Output = MUX_BUS_2 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=MUX_BUS_3, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_3 * ADC_OUT_BUS_3
            + DIV_MASK_BUS_3 * ADC_DIV_Q_3
        );
        Output = MUX_BUS_3 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=3, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=cy_tff_3, Mode=(T-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(tmp__cy_tff_3_clk)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = cy_tff_3 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_5, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_5 * ADC_OUT_BUS_5
            + DIV_MASK_BUS_5 * ADC_DIV_Q_5
        );
        Output = MUX_BUS_5 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=MUX_BUS_0, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_0 * ADC_OUT_BUS_0
            + DIV_MASK_BUS_0 * ADC_DIV_Q_0
        );
        Output = MUX_BUS_0 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statuscell: Name =\DAC_IN_LSB:sts:sts_reg\
    PORT MAP (
        status_7 => MUX_BUS_7 ,
        status_6 => MUX_BUS_6 ,
        status_5 => MUX_BUS_5 ,
        status_4 => MUX_BUS_4 ,
        status_3 => MUX_BUS_3 ,
        status_2 => MUX_BUS_2 ,
        status_1 => MUX_BUS_1 ,
        status_0 => MUX_BUS_0 );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000000"
    }
    Clock Enable: True

controlcell: Name =\DIV_MASK_LSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_REG_CK ,
        control_7 => DIV_MASK_BUS_7 ,
        control_6 => DIV_MASK_BUS_6 ,
        control_5 => DIV_MASK_BUS_5 ,
        control_4 => DIV_MASK_BUS_4 ,
        control_3 => DIV_MASK_BUS_3 ,
        control_2 => DIV_MASK_BUS_2 ,
        control_1 => DIV_MASK_BUS_1 ,
        control_0 => DIV_MASK_BUS_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Bit_Div_8:period_counter_3\, Mode=(T-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_2\ * \Bit_Div_8:period_counter_1\ * 
              \Bit_Div_8:period_counter_0\
        );
        Output = \Bit_Div_8:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Bit_Div_8:period_counter_2\, Mode=(T-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_1\ * \Bit_Div_8:period_counter_0\
        );
        Output = \Bit_Div_8:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Bit_Div_8:period_counter_1\, Mode=(T-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \Bit_Div_8:period_counter_0\
        );
        Output = \Bit_Div_8:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Bit_Div_8:period_counter_0\, Mode=(T-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_8:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_3, Mode=(T-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_3)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_3 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=MUX_BUS_4, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_4 * ADC_OUT_BUS_4
            + DIV_MASK_BUS_4 * ADC_DIV_Q_4
        );
        Output = MUX_BUS_4 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=MUX_BUS_1, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_1 * ADC_OUT_BUS_1
            + DIV_MASK_BUS_1 * ADC_DIV_Q_1
        );
        Output = MUX_BUS_1 (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=2, #inputs=3, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\Bit_Div_6:period_counter_3\, Mode=(T-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_2\ * \Bit_Div_6:period_counter_1\ * 
              \Bit_Div_6:period_counter_0\
        );
        Output = \Bit_Div_6:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Bit_Div_6:period_counter_0\, Mode=(T-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_6:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\Bit_Div_6:period_counter_2\, Mode=(T-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_1\ * \Bit_Div_6:period_counter_0\
        );
        Output = \Bit_Div_6:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\Bit_Div_6:period_counter_1\, Mode=(T-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \Bit_Div_6:period_counter_0\
        );
        Output = \Bit_Div_6:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }
}

synccell: Name =\ADC_SAR_Seq:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq:nrq\ ,
        out => \ADC_SAR_Seq:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=1, #inputs=3, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_12630
            + \ADC_SAR_Seq:Net_3935\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,1)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=Net_12630, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\
        );
        Output = Net_12630 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC_SAR_Seq:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => Net_11790 ,
        control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=2, #inputs=3, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_4, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_3\
        );
        Output = ADC_DIV_Q_4 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_12629 * !\ADC_SAR_Seq:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=3, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\Bit_Div_4:period_counter_3\, Mode=(T-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_2\ * \Bit_Div_4:period_counter_1\ * 
              \Bit_Div_4:period_counter_0\
        );
        Output = \Bit_Div_4:period_counter_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\Bit_Div_4:period_counter_2\, Mode=(T-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_1\ * \Bit_Div_4:period_counter_0\
        );
        Output = \Bit_Div_4:period_counter_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\Bit_Div_4:period_counter_1\, Mode=(T-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \Bit_Div_4:period_counter_0\
        );
        Output = \Bit_Div_4:period_counter_1\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\Bit_Div_4:period_counter_0\, Mode=(T-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = \Bit_Div_4:period_counter_0\ (fanout=3)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_SAR_Seq:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => Net_11790 ,
        status_0 => Net_12630 ,
        clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:ch_addr_5\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:ch_addr_4\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:ch_addr_3\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:ch_addr_2\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:ch_addr_1\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:ch_addr_1\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq:ch_addr_0\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_1, Mode=(T-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_REG_CK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_1)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_1 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

count7cell: Name =\ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => Net_11790 ,
        load => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq:ch_addr_0\ ,
        tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_5\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_1\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_3\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_2\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_4\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (Net_11790) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:ch_addr_5\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:ch_addr_4\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:ch_addr_3\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:ch_addr_2\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }
}

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_576 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\ADC_SAR_Seq:IRQ\
        PORT MAP (
            interrupt => Net_12630 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR_Seq:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = DIV_MUX_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DIV_MUX_CONTROL(0)__PA ,
        analog_term => Net_12634 ,
        pad => DIV_MUX_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = SAMPLE_RATE_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SAMPLE_RATE_CONTROL(0)__PA ,
        analog_term => Net_12631 ,
        pad => SAMPLE_RATE_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = PWM_1_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => PWM_1_CONTROL(0)__PA ,
        analog_term => Net_21813 ,
        pad => PWM_1_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = MISO_IN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MISO_IN(0)__PA ,
        fb => Net_6028 ,
        pad => MISO_IN(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = VREF_BUFF(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => VREF_BUFF(0)__PA ,
        analog_term => Net_775 ,
        pad => VREF_BUFF(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = MASK_OFF_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MASK_OFF_CONTROL(0)__PA ,
        analog_term => Net_12632 ,
        pad => MASK_OFF_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=0]: 
Pin : Name = \LCD_Char_1:LCDPort(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(0)\__PA ,
        pad => \LCD_Char_1:LCDPort(0)_PAD\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = \LCD_Char_1:LCDPort(1)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(1)\__PA ,
        pad => \LCD_Char_1:LCDPort(1)_PAD\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \LCD_Char_1:LCDPort(2)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(2)\__PA ,
        pad => \LCD_Char_1:LCDPort(2)_PAD\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = \LCD_Char_1:LCDPort(3)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(3)\__PA ,
        pad => \LCD_Char_1:LCDPort(3)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \LCD_Char_1:LCDPort(4)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(4)\__PA ,
        pad => \LCD_Char_1:LCDPort(4)_PAD\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = \LCD_Char_1:LCDPort(5)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(5)\__PA ,
        pad => \LCD_Char_1:LCDPort(5)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \LCD_Char_1:LCDPort(6)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(6)\__PA ,
        pad => \LCD_Char_1:LCDPort(6)_PAD\ );
    Properties:
    {
    }

Port 2 is empty
Port 3 contains the following IO cells:
[IoId=3]: 
Pin : Name = AUDIO_IN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => AUDIO_IN(0)__PA ,
        analog_term => Net_806 ,
        pad => AUDIO_IN(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = Dedicated_Output
    Attributes:
        In Group/Port: False
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Dedicated_Output__PA ,
        analog_term => Net_775 );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = Dedicated_Output_1
    Attributes:
        In Group/Port: False
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Dedicated_Output_1__PA ,
        analog_term => Net_800 );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=4]: 
Pin : Name = SS_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: INP_DIS_LO
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SS_OUT(0)__PA ,
        input => Net_6025 ,
        pad => SS_OUT(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = SCLK_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SCLK_OUT(0)__PA ,
        input => Net_6026 ,
        pad => SCLK_OUT(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = MOSI_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MOSI_OUT(0)__PA ,
        input => Net_6027 ,
        pad => MOSI_OUT(0)_PAD );
    Properties:
    {
    }

Port 15 is empty
ARM group 0: empty
CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \SPI_DAC:Net_276\ ,
            dclk_0 => \SPI_DAC:Net_276_local\ ,
            dclk_glb_1 => ADC_REG_CK ,
            dclk_1 => ADC_REG_CK_local ,
            dclk_glb_2 => ADC_CLK ,
            dclk_2 => ADC_CLK_local ,
            dclk_glb_3 => Net_11790 ,
            dclk_3 => Net_11790_local );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: 
    DFB Block @ F(DFB,0): 
    dfbcell: Name =\Filter:DFB\
        PORT MAP (
            out_1 => \Filter:Net_8\ ,
            out_2 => \Filter:Net_9\ ,
            dmareq_1 => Net_1326 ,
            dmareq_2 => Net_1327 ,
            interrupt => Net_1328 );
        Properties:
        {
            cy_registers = ""
        }
Delta-Sigma ADC group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\PWM_ADC_CK:PWMHW\
        PORT MAP (
            clock => ADC_CLK ,
            enable => __ONE__ ,
            tc => \PWM_ADC_CK:Net_63\ ,
            cmp => PWM_CK ,
            irq => \PWM_ADC_CK:Net_54\ );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: empty
VIDAC group 0: empty
Opamp group 0: 
    Opamp Block @ F(OpAmp,1): 
    abufcell: Name =\Opamp_2:ABuf\
        PORT MAP (
            vplus => \ADC_SAR_1:Net_233\ ,
            vminus => Net_775 ,
            vout => Net_775 );
        Properties:
        {
            cy_registers = ""
        }
    Opamp Block @ F(OpAmp,3): 
    abufcell: Name =\Opamp_1:ABuf\
        PORT MAP (
            vplus => Net_806 ,
            vminus => Net_800 ,
            vout => Net_800 );
        Properties:
        {
            cy_registers = ""
        }
CapSense Buffers group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,3): 
    vrefcell: Name =\ADC_SAR_1:vRef_1024\
        PORT MAP (
            vout => \ADC_SAR_1:Net_233\ );
        Properties:
        {
            autoenable = 1
            guid = "89B398AD-36A8-4627-9212-707F2986319E"
            ignoresleep = 0
            name = "1.024V"
        }
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_SAR_Seq:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_SAR_Seq:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR_Seq:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq:Net_2803\ ,
            vminus => \ADC_SAR_Seq:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR_Seq:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq:SAR:Net_235\ ,
            clk_udb => Net_11790_local ,
            irq => \ADC_SAR_Seq:SAR:Net_252\ ,
            next => Net_12629 ,
            data_out_udb_11 => \ADC_SAR_Seq:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC_SAR_1:ADC_SAR\
        PORT MAP (
            vplus => Net_800 ,
            vminus => \ADC_SAR_1:Net_126\ ,
            ext_pin => \ADC_SAR_1:Net_209\ ,
            vrefhi_out => \ADC_SAR_1:Net_126\ ,
            vref => \ADC_SAR_1:Net_233\ ,
            clk_udb => ADC_CLK_local ,
            sof_udb => PWM_CK ,
            irq => \ADC_SAR_1:Net_252\ ,
            next => Net_5999 ,
            data_out_udb_11 => \ADC_SAR_1:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_1:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_1:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_1:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_1:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_1:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_1:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_1:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_1:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_1:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_1:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_1:Net_207_0\ ,
            eof_udb => Net_576 );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_12725 ,
            muxin_62 => Net_12724 ,
            muxin_61 => Net_12723 ,
            muxin_60 => Net_12722 ,
            muxin_59 => Net_12721 ,
            muxin_58 => Net_12720 ,
            muxin_57 => Net_12719 ,
            muxin_56 => Net_12718 ,
            muxin_55 => Net_12717 ,
            muxin_54 => Net_12716 ,
            muxin_53 => Net_12715 ,
            muxin_52 => Net_12714 ,
            muxin_51 => Net_12713 ,
            muxin_50 => Net_12712 ,
            muxin_49 => Net_12711 ,
            muxin_48 => Net_12710 ,
            muxin_47 => Net_12709 ,
            muxin_46 => Net_12707 ,
            muxin_45 => Net_12705 ,
            muxin_44 => Net_12704 ,
            muxin_43 => Net_12702 ,
            muxin_42 => Net_12700 ,
            muxin_41 => Net_12699 ,
            muxin_40 => Net_12697 ,
            muxin_39 => Net_12695 ,
            muxin_38 => Net_12694 ,
            muxin_37 => Net_12692 ,
            muxin_36 => Net_12690 ,
            muxin_35 => Net_12689 ,
            muxin_34 => Net_12687 ,
            muxin_33 => Net_12685 ,
            muxin_32 => Net_12684 ,
            muxin_31 => Net_12682 ,
            muxin_30 => Net_12680 ,
            muxin_29 => Net_12679 ,
            muxin_28 => Net_12677 ,
            muxin_27 => Net_12675 ,
            muxin_26 => Net_12674 ,
            muxin_25 => Net_12672 ,
            muxin_24 => Net_12670 ,
            muxin_23 => Net_12669 ,
            muxin_22 => Net_12667 ,
            muxin_21 => Net_12665 ,
            muxin_20 => Net_12664 ,
            muxin_19 => Net_12662 ,
            muxin_18 => Net_12660 ,
            muxin_17 => Net_12659 ,
            muxin_16 => Net_12657 ,
            muxin_15 => Net_12655 ,
            muxin_14 => Net_12654 ,
            muxin_13 => Net_12652 ,
            muxin_12 => Net_12650 ,
            muxin_11 => Net_12649 ,
            muxin_10 => Net_12647 ,
            muxin_9 => Net_12645 ,
            muxin_8 => Net_12644 ,
            muxin_7 => Net_12642 ,
            muxin_6 => Net_12640 ,
            muxin_5 => Net_12639 ,
            muxin_4 => Net_22826 ,
            muxin_3 => Net_21813 ,
            muxin_2 => Net_12634 ,
            muxin_1 => Net_12632 ,
            muxin_0 => Net_12631 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \ADC_SAR_Seq:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                         | 
Port | Pin | Fixed |      Type |       Drive Mode |                    Name | Connections
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
   0 |   0 |       |      NONE |      HI_Z_ANALOG |      DIV_MUX_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_12634)
     |   3 |       |      NONE |      HI_Z_ANALOG |  SAMPLE_RATE_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_12631)
     |   4 |       |      NONE |      HI_Z_ANALOG |        PWM_1_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_21813)
     |   5 |       |      NONE |     HI_Z_DIGITAL |              MISO_IN(0) | FB(Net_6028)
     |   6 |     * |      NONE |      HI_Z_ANALOG |            VREF_BUFF(0) | Analog(Net_775)
     |   7 |       |      NONE |      HI_Z_ANALOG |     MASK_OFF_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_12632)
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
   1 |   0 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(0)\ | 
     |   1 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(1)\ | 
     |   2 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(2)\ | 
     |   3 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(3)\ | 
     |   4 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(4)\ | 
     |   5 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(5)\ | 
     |   6 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(6)\ | 
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
   3 |   3 |       |      NONE |      HI_Z_ANALOG |             AUDIO_IN(0) | Analog(Net_806)
     |   6 |       |      NONE |      HI_Z_ANALOG |        Dedicated_Output | Analog(Net_775)
     |   7 |       |      NONE |      HI_Z_ANALOG |      Dedicated_Output_1 | Analog(Net_800)
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
  12 |   4 |     * |      NONE |         CMOS_OUT |               SS_OUT(0) | In(Net_6025)
     |   5 |     * |      NONE |         CMOS_OUT |             SCLK_OUT(0) | In(Net_6026)
     |   6 |     * |      NONE |         CMOS_OUT |             MOSI_OUT(0) | In(Net_6027)
---------------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.008ms
Digital Placement phase: Elapsed time ==> 6s.755ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 4s.725ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.244ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.050ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in ADC_DAC_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.672ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.304ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 20s.117ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 20s.118ms
API generation phase: Elapsed time ==> 1s.856ms
Dependency generation phase: Elapsed time ==> 0s.028ms
Cleanup phase: Elapsed time ==> 0s.001ms
