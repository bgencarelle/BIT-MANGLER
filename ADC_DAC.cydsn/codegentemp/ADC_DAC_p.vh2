-- Project:   ADC_DAC
-- Generated: 04/15/2017 13:41:20
-- PSoC Creator  4.0 Update 1

ENTITY ADC_DAC IS
    PORT(
        \LCD_Char_1:LCDPort(0)_PAD\ : OUT std_ulogic;
        \LCD_Char_1:LCDPort(1)_PAD\ : OUT std_ulogic;
        \LCD_Char_1:LCDPort(2)_PAD\ : OUT std_ulogic;
        \LCD_Char_1:LCDPort(3)_PAD\ : OUT std_ulogic;
        \LCD_Char_1:LCDPort(4)_PAD\ : OUT std_ulogic;
        \LCD_Char_1:LCDPort(5)_PAD\ : OUT std_ulogic;
        \LCD_Char_1:LCDPort(6)_PAD\ : OUT std_ulogic;
        MOSI_OUT(0)_PAD : OUT std_ulogic;
        MISO_IN(0)_PAD : IN std_ulogic;
        SCLK_OUT(0)_PAD : OUT std_ulogic;
        SS_OUT(0)_PAD : OUT std_ulogic);
    ATTRIBUTE voltage_VDDABUF OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDA OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VUSB OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDD OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO0 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO1 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO2 OF __DEFAULT__ : ENTITY IS 5e0;
    ATTRIBUTE voltage_VDDIO3 OF __DEFAULT__ : ENTITY IS 5e0;
END ADC_DAC;

ARCHITECTURE __DEFAULT__ OF ADC_DAC IS
    SIGNAL ADC_CLK : bit;
    ATTRIBUTE udbclken_assigned OF ADC_CLK : SIGNAL IS "True";
    ATTRIBUTE global_signal OF ADC_CLK : SIGNAL IS true;
    SIGNAL ADC_CLK_local : bit;
    SIGNAL ADC_DIV_Q_0 : bit;
    SIGNAL ADC_DIV_Q_10 : bit;
    SIGNAL ADC_DIV_Q_11 : bit;
    SIGNAL ADC_DIV_Q_3 : bit;
    SIGNAL ADC_DIV_Q_4 : bit;
    SIGNAL ADC_DIV_Q_5 : bit;
    SIGNAL ADC_DIV_Q_6 : bit;
    SIGNAL ADC_DIV_Q_7 : bit;
    SIGNAL ADC_DIV_Q_8 : bit;
    SIGNAL ADC_DIV_Q_9 : bit;
    SIGNAL ADC_OUT_BUS_0 : bit;
    SIGNAL ADC_OUT_BUS_10 : bit;
    SIGNAL ADC_OUT_BUS_11 : bit;
    SIGNAL ADC_OUT_BUS_3 : bit;
    SIGNAL ADC_OUT_BUS_4 : bit;
    SIGNAL ADC_OUT_BUS_5 : bit;
    SIGNAL ADC_OUT_BUS_6 : bit;
    SIGNAL ADC_OUT_BUS_7 : bit;
    SIGNAL ADC_OUT_BUS_8 : bit;
    SIGNAL ADC_OUT_BUS_9 : bit;
    SIGNAL AUDIO_IN(0)__PA : bit;
    SIGNAL ClockBlock_100k : bit;
    SIGNAL ClockBlock_1k : bit;
    SIGNAL ClockBlock_32k : bit;
    SIGNAL ClockBlock_BUS_CLK : bit;
    ATTRIBUTE global_signal OF ClockBlock_BUS_CLK : SIGNAL IS true;
    SIGNAL ClockBlock_BUS_CLK_local : bit;
    SIGNAL ClockBlock_ILO : bit;
    SIGNAL ClockBlock_IMO : bit;
    SIGNAL ClockBlock_MASTER_CLK : bit;
    SIGNAL ClockBlock_PLL_OUT : bit;
    SIGNAL ClockBlock_XTAL : bit;
    SIGNAL ClockBlock_XTAL_32KHZ : bit;
    SIGNAL DIV_MASK_BUS_0 : bit;
    SIGNAL DIV_MASK_BUS_1 : bit;
    SIGNAL DIV_MASK_BUS_10 : bit;
    SIGNAL DIV_MASK_BUS_11 : bit;
    SIGNAL DIV_MASK_BUS_2 : bit;
    SIGNAL DIV_MASK_BUS_3 : bit;
    SIGNAL DIV_MASK_BUS_4 : bit;
    SIGNAL DIV_MASK_BUS_5 : bit;
    SIGNAL DIV_MASK_BUS_6 : bit;
    SIGNAL DIV_MASK_BUS_7 : bit;
    SIGNAL DIV_MASK_BUS_8 : bit;
    SIGNAL DIV_MASK_BUS_9 : bit;
    SIGNAL DIV_MUX_CONTROL(0)__PA : bit;
    SIGNAL Dedicated_Output_1__PA : bit;
    SIGNAL Dedicated_Output__PA : bit;
    SIGNAL MASK_OFF_CONTROL(0)__PA : bit;
    SIGNAL MISO_IN(0)__PA : bit;
    SIGNAL MOSI_OUT(0)__PA : bit;
    SIGNAL MUX_BUS_0 : bit;
    SIGNAL MUX_BUS_1 : bit;
    SIGNAL MUX_BUS_10 : bit;
    SIGNAL MUX_BUS_11 : bit;
    SIGNAL MUX_BUS_2 : bit;
    SIGNAL MUX_BUS_3 : bit;
    SIGNAL MUX_BUS_4 : bit;
    SIGNAL MUX_BUS_5 : bit;
    SIGNAL MUX_BUS_6 : bit;
    SIGNAL MUX_BUS_7 : bit;
    SIGNAL MUX_BUS_8 : bit;
    SIGNAL MUX_BUS_9 : bit;
    SIGNAL Net_12629 : bit;
    SIGNAL Net_12630 : bit;
    SIGNAL Net_1326 : bit;
    SIGNAL Net_1327 : bit;
    SIGNAL Net_1328 : bit;
    SIGNAL Net_576 : bit;
    SIGNAL Net_5999 : bit;
    SIGNAL Net_6025 : bit;
    SIGNAL Net_6026 : bit;
    SIGNAL Net_6027 : bit;
    SIGNAL Net_6028 : bit;
    SIGNAL PWM_1_CONTROL(0)__PA : bit;
    SIGNAL PWM_CK : bit;
    SIGNAL SAMPLE_RATE_CONTROL(0)__PA : bit;
    SIGNAL SCLK_OUT(0)__PA : bit;
    SIGNAL SS_OUT(0)__PA : bit;
    SIGNAL VREF_BUFF(0)__PA : bit;
    SIGNAL \ADC_1_OUT_MSB:control_4\ : bit;
    SIGNAL \ADC_1_OUT_MSB:control_5\ : bit;
    SIGNAL \ADC_1_OUT_MSB:control_6\ : bit;
    SIGNAL \ADC_1_OUT_MSB:control_7\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_0\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_10\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_11\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_1\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_2\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_3\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_4\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_5\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_6\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_7\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_8\ : bit;
    SIGNAL \ADC_SAR_1:Net_207_9\ : bit;
    SIGNAL \ADC_SAR_1:Net_252\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ : bit;
    ATTRIBUTE soft OF \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ : SIGNAL IS 1;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ : bit;
    SIGNAL \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ : bit;
    SIGNAL \ADC_SAR_Seq:Net_3698\ : bit;
    SIGNAL \ADC_SAR_Seq:Net_3830\ : bit;
    SIGNAL \ADC_SAR_Seq:Net_3935\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_0\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_10\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_11\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_1\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_2\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_3\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_4\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_5\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_6\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_7\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_8\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_207_9\ : bit;
    SIGNAL \ADC_SAR_Seq:SAR:Net_252\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:control_2\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:control_3\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:control_4\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:control_5\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:control_6\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:control_7\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:count_6\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:enable\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:load_period\ : bit;
    SIGNAL \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ : bit;
    SIGNAL \ADC_SAR_Seq:ch_addr_0\ : bit;
    SIGNAL \ADC_SAR_Seq:ch_addr_1\ : bit;
    SIGNAL \ADC_SAR_Seq:ch_addr_2\ : bit;
    SIGNAL \ADC_SAR_Seq:ch_addr_3\ : bit;
    SIGNAL \ADC_SAR_Seq:ch_addr_4\ : bit;
    SIGNAL \ADC_SAR_Seq:ch_addr_5\ : bit;
    SIGNAL \ADC_SAR_Seq:nrq\ : bit;
    SIGNAL \DIV_MASK_MSB:control_4\ : bit;
    SIGNAL \DIV_MASK_MSB:control_5\ : bit;
    SIGNAL \DIV_MASK_MSB:control_6\ : bit;
    SIGNAL \DIV_MASK_MSB:control_7\ : bit;
    SIGNAL \Filter:Net_8\ : bit;
    SIGNAL \Filter:Net_9\ : bit;
    SIGNAL \\\LCD_Char_1:LCDPort(0)\\__PA\ : bit;
    SIGNAL \\\LCD_Char_1:LCDPort(1)\\__PA\ : bit;
    SIGNAL \\\LCD_Char_1:LCDPort(2)\\__PA\ : bit;
    SIGNAL \\\LCD_Char_1:LCDPort(3)\\__PA\ : bit;
    SIGNAL \\\LCD_Char_1:LCDPort(4)\\__PA\ : bit;
    SIGNAL \\\LCD_Char_1:LCDPort(5)\\__PA\ : bit;
    SIGNAL \\\LCD_Char_1:LCDPort(6)\\__PA\ : bit;
    SIGNAL \PWM_10:PWMUDB:cmp1_eq\ : bit;
    SIGNAL \PWM_10:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_10:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_10:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_10:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_10:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_10:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_10:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_10:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_11:PWMUDB:cmp1_eq\ : bit;
    SIGNAL \PWM_11:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_11:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_11:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_11:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_11:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_11:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_11:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_11:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_4:PWMUDB:cmp1_eq\ : bit;
    SIGNAL \PWM_4:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_4:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_4:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_4:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_4:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_4:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_4:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_4:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_5:PWMUDB:cmp1_eq\ : bit;
    SIGNAL \PWM_5:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_5:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_5:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_5:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_5:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_5:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_5:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_5:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_6:PWMUDB:cmp1_eq\ : bit;
    SIGNAL \PWM_6:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_6:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_6:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_6:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_6:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_6:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_6:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_6:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_7:PWMUDB:cmp1_eq\ : bit;
    SIGNAL \PWM_7:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_7:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_7:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_7:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_7:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_7:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_7:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_7:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_8:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_8:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_8:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_8:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_8:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_8:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_8:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_8:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_9:PWMUDB:cmp1_less\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_0\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_1\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_2\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_3\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_4\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_5\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_6\ : bit;
    SIGNAL \PWM_9:PWMUDB:control_7\ : bit;
    SIGNAL \PWM_9:PWMUDB:prevCompare1\ : bit;
    SIGNAL \PWM_9:PWMUDB:runmode_enable\ : bit;
    SIGNAL \PWM_9:PWMUDB:status_0\ : bit;
    SIGNAL \PWM_9:PWMUDB:status_2\ : bit;
    SIGNAL \PWM_9:PWMUDB:status_3\ : bit;
    SIGNAL \PWM_9:PWMUDB:tc_i\ : bit;
    SIGNAL \PWM_ADC_CK:Net_54\ : bit;
    SIGNAL \PWM_ADC_CK:Net_63\ : bit;
    SIGNAL \SPI_DAC:BSPIM:cnt_enable\ : bit;
    SIGNAL \SPI_DAC:BSPIM:cnt_tc\ : bit;
    SIGNAL \SPI_DAC:BSPIM:count_0\ : bit;
    SIGNAL \SPI_DAC:BSPIM:count_1\ : bit;
    SIGNAL \SPI_DAC:BSPIM:count_2\ : bit;
    SIGNAL \SPI_DAC:BSPIM:count_3\ : bit;
    SIGNAL \SPI_DAC:BSPIM:count_4\ : bit;
    SIGNAL \SPI_DAC:BSPIM:count_5\ : bit;
    SIGNAL \SPI_DAC:BSPIM:count_6\ : bit;
    SIGNAL \SPI_DAC:BSPIM:ld_ident\ : bit;
    SIGNAL \SPI_DAC:BSPIM:load_cond\ : bit;
    SIGNAL \SPI_DAC:BSPIM:load_rx_data\ : bit;
    SIGNAL \SPI_DAC:BSPIM:mosi_from_dp\ : bit;
    SIGNAL \SPI_DAC:BSPIM:rx_status_4\ : bit;
    SIGNAL \SPI_DAC:BSPIM:rx_status_5\ : bit;
    SIGNAL \SPI_DAC:BSPIM:rx_status_6\ : bit;
    SIGNAL \SPI_DAC:BSPIM:state_0\ : bit;
    SIGNAL \SPI_DAC:BSPIM:state_1\ : bit;
    SIGNAL \SPI_DAC:BSPIM:state_2\ : bit;
    SIGNAL \SPI_DAC:BSPIM:tx_status_0\ : bit;
    SIGNAL \SPI_DAC:BSPIM:tx_status_1\ : bit;
    SIGNAL \SPI_DAC:BSPIM:tx_status_2\ : bit;
    SIGNAL \SPI_DAC:BSPIM:tx_status_4\ : bit;
    SIGNAL \SPI_DAC:Net_276\ : bit;
    ATTRIBUTE udbclken_assigned OF \SPI_DAC:Net_276\ : SIGNAL IS "True";
    ATTRIBUTE global_signal OF \SPI_DAC:Net_276\ : SIGNAL IS true;
    SIGNAL \SPI_DAC:Net_276_local\ : bit;
    SIGNAL __ONE__ : bit;
    ATTRIBUTE POWER OF __ONE__ : SIGNAL IS true;
    SIGNAL __ZERO__ : bit;
    ATTRIBUTE GROUND OF __ZERO__ : SIGNAL IS true;
    SIGNAL cy_tff_2 : bit;
    SIGNAL cy_tff_3 : bit;
    SIGNAL one : bit;
    ATTRIBUTE POWER OF one : SIGNAL IS true;
    SIGNAL tmp__cy_tff_2_clk : bit;
    SIGNAL tmp__cy_tff_3_clk : bit;
    SIGNAL zero : bit;
    ATTRIBUTE GROUND OF zero : SIGNAL IS true;
    SIGNAL \ClockBlock.dclk_glb_ff_1__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.ce0__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.cl0__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.z0__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.ff0__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.ce1__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.cl1__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.z1__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.ff1__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.co_msb__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.sol_msb__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u0.cfbo__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u1.sor__sig\ : bit;
    SIGNAL \SPI_DAC:BSPIM:sR16:Dp:u1.cmsbo__sig\ : bit;
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ : LABEL IS "macrocell1";
    ATTRIBUTE lib_model OF AUDIO_IN(0) : LABEL IS "iocell1";
    ATTRIBUTE Location OF AUDIO_IN(0) : LABEL IS "P4[7]";
    ATTRIBUTE lib_model OF DIV_MUX_CONTROL(0) : LABEL IS "iocell2";
    ATTRIBUTE Location OF DIV_MUX_CONTROL(0) : LABEL IS "P4[2]";
    ATTRIBUTE lib_model OF MASK_OFF_CONTROL(0) : LABEL IS "iocell3";
    ATTRIBUTE Location OF MASK_OFF_CONTROL(0) : LABEL IS "P4[4]";
    ATTRIBUTE lib_model OF MOSI_OUT(0) : LABEL IS "iocell4";
    ATTRIBUTE Location OF MOSI_OUT(0) : LABEL IS "P12[6]";
    ATTRIBUTE lib_model OF SAMPLE_RATE_CONTROL(0) : LABEL IS "iocell5";
    ATTRIBUTE Location OF SAMPLE_RATE_CONTROL(0) : LABEL IS "P4[0]";
    ATTRIBUTE lib_model OF VREF_BUFF(0) : LABEL IS "iocell6";
    ATTRIBUTE Location OF VREF_BUFF(0) : LABEL IS "P0[6]";
    ATTRIBUTE lib_model OF SCLK_OUT(0) : LABEL IS "iocell7";
    ATTRIBUTE Location OF SCLK_OUT(0) : LABEL IS "P12[5]";
    ATTRIBUTE lib_model OF SS_OUT(0) : LABEL IS "iocell8";
    ATTRIBUTE Location OF SS_OUT(0) : LABEL IS "P12[4]";
    ATTRIBUTE lib_model OF PWM_1_CONTROL(0) : LABEL IS "iocell9";
    ATTRIBUTE Location OF PWM_1_CONTROL(0) : LABEL IS "P4[6]";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:load_rx_data\ : LABEL IS "macrocell2";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:tx_status_0\ : LABEL IS "macrocell3";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:tx_status_4\ : LABEL IS "macrocell4";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:rx_status_6\ : LABEL IS "macrocell5";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ : LABEL IS "macrocell6";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ : LABEL IS "macrocell7";
    ATTRIBUTE lib_model OF MUX_BUS_0 : LABEL IS "macrocell8";
    ATTRIBUTE lib_model OF MUX_BUS_11 : LABEL IS "macrocell9";
    ATTRIBUTE lib_model OF MUX_BUS_10 : LABEL IS "macrocell10";
    ATTRIBUTE lib_model OF MUX_BUS_9 : LABEL IS "macrocell11";
    ATTRIBUTE lib_model OF MUX_BUS_8 : LABEL IS "macrocell12";
    ATTRIBUTE lib_model OF MUX_BUS_7 : LABEL IS "macrocell13";
    ATTRIBUTE lib_model OF MUX_BUS_5 : LABEL IS "macrocell14";
    ATTRIBUTE lib_model OF MUX_BUS_3 : LABEL IS "macrocell15";
    ATTRIBUTE lib_model OF MUX_BUS_6 : LABEL IS "macrocell16";
    ATTRIBUTE lib_model OF MUX_BUS_4 : LABEL IS "macrocell17";
    ATTRIBUTE lib_model OF \PWM_4:PWMUDB:status_2\ : LABEL IS "macrocell18";
    ATTRIBUTE lib_model OF \PWM_5:PWMUDB:status_2\ : LABEL IS "macrocell19";
    ATTRIBUTE lib_model OF \PWM_11:PWMUDB:status_2\ : LABEL IS "macrocell20";
    ATTRIBUTE lib_model OF \PWM_10:PWMUDB:status_2\ : LABEL IS "macrocell21";
    ATTRIBUTE lib_model OF \PWM_7:PWMUDB:status_2\ : LABEL IS "macrocell22";
    ATTRIBUTE lib_model OF \PWM_9:PWMUDB:status_2\ : LABEL IS "macrocell23";
    ATTRIBUTE lib_model OF \PWM_8:PWMUDB:status_2\ : LABEL IS "macrocell24";
    ATTRIBUTE lib_model OF \PWM_6:PWMUDB:status_2\ : LABEL IS "macrocell25";
    ATTRIBUTE lib_model OF MUX_BUS_2 : LABEL IS "macrocell26";
    ATTRIBUTE lib_model OF MUX_BUS_1 : LABEL IS "macrocell27";
    ATTRIBUTE Location OF \ADC_SAR_1:ADC_SAR\ : LABEL IS "F(SAR,1)";
    ATTRIBUTE Location OF \Opamp_1:ABuf\ : LABEL IS "F(OpAmp,1)";
    ATTRIBUTE lib_model OF __ONE__ : LABEL IS "macrocell28";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:TxStsReg\ : LABEL IS "statusicell1";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:RxStsReg\ : LABEL IS "statusicell2";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:sR16:Dp:u0\ : LABEL IS "datapathcell1";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:sR16:Dp:u1\ : LABEL IS "datapathcell2";
    ATTRIBUTE Location OF \Opamp_2:ABuf\ : LABEL IS "F(OpAmp,2)";
    ATTRIBUTE Location OF \ADC_SAR_Seq:SAR:ADC_SAR\ : LABEL IS "F(SAR,0)";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\ : LABEL IS "controlcell1";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:bSAR_SEQ:EOCSts\ : LABEL IS "statuscell1";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:TempBuf\ : LABEL IS "drqcell1";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:FinalBuf\ : LABEL IS "drqcell2";
    ATTRIBUTE lib_model OF \DIV_MASK_MSB:Sync:ctrl_reg\ : LABEL IS "controlcell2";
    ATTRIBUTE lib_model OF \DIV_MASK_LSB:Sync:ctrl_reg\ : LABEL IS "controlcell3";
    ATTRIBUTE lib_model OF \PWM_4:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell4";
    ATTRIBUTE lib_model OF \PWM_4:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell3";
    ATTRIBUTE lib_model OF \PWM_4:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell3";
    ATTRIBUTE lib_model OF \PWM_5:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell5";
    ATTRIBUTE lib_model OF \PWM_5:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell4";
    ATTRIBUTE lib_model OF \PWM_5:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell4";
    ATTRIBUTE lib_model OF \PWM_11:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell6";
    ATTRIBUTE lib_model OF \PWM_11:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell5";
    ATTRIBUTE lib_model OF \PWM_11:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell5";
    ATTRIBUTE lib_model OF \PWM_10:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell7";
    ATTRIBUTE lib_model OF \PWM_10:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell6";
    ATTRIBUTE lib_model OF \PWM_10:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell6";
    ATTRIBUTE lib_model OF \PWM_7:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell8";
    ATTRIBUTE lib_model OF \PWM_7:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell7";
    ATTRIBUTE lib_model OF \PWM_7:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell7";
    ATTRIBUTE lib_model OF \PWM_9:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell9";
    ATTRIBUTE lib_model OF \PWM_9:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell8";
    ATTRIBUTE lib_model OF \PWM_9:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell8";
    ATTRIBUTE lib_model OF \PWM_8:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell10";
    ATTRIBUTE lib_model OF \PWM_8:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell9";
    ATTRIBUTE lib_model OF \PWM_8:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell9";
    ATTRIBUTE lib_model OF \PWM_6:PWMUDB:genblk1:ctrlreg\ : LABEL IS "controlcell11";
    ATTRIBUTE lib_model OF \PWM_6:PWMUDB:genblk8:stsreg\ : LABEL IS "statusicell10";
    ATTRIBUTE lib_model OF \PWM_6:PWMUDB:sP8:pwmdp:u0\ : LABEL IS "datapathcell10";
    ATTRIBUTE lib_model OF \ADC_1_OUT_MSB:Sync:ctrl_reg\ : LABEL IS "controlcell12";
    ATTRIBUTE lib_model OF \ADC_1_OUT_LSB:Sync:ctrl_reg\ : LABEL IS "controlcell13";
    ATTRIBUTE lib_model OF \DAC_IN_MSB:sts:sts_reg\ : LABEL IS "statuscell2";
    ATTRIBUTE lib_model OF \DAC_IN_LSB:sts:sts_reg\ : LABEL IS "statuscell3";
    ATTRIBUTE lib_model OF Net_6027 : LABEL IS "macrocell29";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:state_2\ : LABEL IS "macrocell30";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:state_1\ : LABEL IS "macrocell31";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:state_0\ : LABEL IS "macrocell32";
    ATTRIBUTE lib_model OF Net_6025 : LABEL IS "macrocell33";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:load_cond\ : LABEL IS "macrocell34";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:ld_ident\ : LABEL IS "macrocell35";
    ATTRIBUTE lib_model OF \SPI_DAC:BSPIM:cnt_enable\ : LABEL IS "macrocell36";
    ATTRIBUTE lib_model OF Net_6026 : LABEL IS "macrocell37";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ : LABEL IS "macrocell38";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ : LABEL IS "macrocell39";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ : LABEL IS "macrocell40";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ : LABEL IS "macrocell41";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ : LABEL IS "macrocell42";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ : LABEL IS "macrocell43";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ : LABEL IS "macrocell44";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ : LABEL IS "macrocell45";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ : LABEL IS "macrocell46";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ : LABEL IS "macrocell47";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ : LABEL IS "macrocell48";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ : LABEL IS "macrocell49";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ : LABEL IS "macrocell50";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ : LABEL IS "macrocell51";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ : LABEL IS "macrocell52";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ : LABEL IS "macrocell53";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ : LABEL IS "macrocell54";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ : LABEL IS "macrocell55";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ : LABEL IS "macrocell56";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ : LABEL IS "macrocell57";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ : LABEL IS "macrocell58";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ : LABEL IS "macrocell59";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ : LABEL IS "macrocell60";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ : LABEL IS "macrocell61";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ : LABEL IS "macrocell62";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ : LABEL IS "macrocell63";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ : LABEL IS "macrocell64";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ : LABEL IS "macrocell65";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ : LABEL IS "macrocell66";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ : LABEL IS "macrocell67";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ : LABEL IS "macrocell68";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ : LABEL IS "macrocell69";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ : LABEL IS "macrocell70";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ : LABEL IS "macrocell71";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ : LABEL IS "macrocell72";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ : LABEL IS "macrocell73";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ : LABEL IS "macrocell74";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ : LABEL IS "macrocell75";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ : LABEL IS "macrocell76";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ : LABEL IS "macrocell77";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ : LABEL IS "macrocell78";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ : LABEL IS "macrocell79";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ : LABEL IS "macrocell80";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ : LABEL IS "macrocell81";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ : LABEL IS "macrocell82";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ : LABEL IS "macrocell83";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ : LABEL IS "macrocell84";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ : LABEL IS "macrocell85";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ : LABEL IS "macrocell86";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ : LABEL IS "macrocell87";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ : LABEL IS "macrocell88";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ : LABEL IS "macrocell89";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ : LABEL IS "macrocell90";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ : LABEL IS "macrocell91";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ : LABEL IS "macrocell92";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ : LABEL IS "macrocell93";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ : LABEL IS "macrocell94";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ : LABEL IS "macrocell95";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ : LABEL IS "macrocell96";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ : LABEL IS "macrocell97";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ : LABEL IS "macrocell98";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ : LABEL IS "macrocell99";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ : LABEL IS "macrocell100";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ : LABEL IS "macrocell101";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ : LABEL IS "macrocell102";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ : LABEL IS "macrocell103";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ : LABEL IS "macrocell104";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ : LABEL IS "macrocell105";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ : LABEL IS "macrocell106";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ : LABEL IS "macrocell107";
    ATTRIBUTE lib_model OF Net_12630 : LABEL IS "macrocell108";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ : LABEL IS "macrocell109";
    ATTRIBUTE lib_model OF \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ : LABEL IS "macrocell110";
    ATTRIBUTE lib_model OF \PWM_4:PWMUDB:runmode_enable\ : LABEL IS "macrocell111";
    ATTRIBUTE lib_model OF \PWM_4:PWMUDB:prevCompare1\ : LABEL IS "macrocell112";
    ATTRIBUTE lib_model OF \PWM_4:PWMUDB:status_0\ : LABEL IS "macrocell113";
    ATTRIBUTE lib_model OF ADC_DIV_Q_4 : LABEL IS "macrocell114";
    ATTRIBUTE lib_model OF \PWM_5:PWMUDB:runmode_enable\ : LABEL IS "macrocell115";
    ATTRIBUTE lib_model OF \PWM_5:PWMUDB:prevCompare1\ : LABEL IS "macrocell116";
    ATTRIBUTE lib_model OF \PWM_5:PWMUDB:status_0\ : LABEL IS "macrocell117";
    ATTRIBUTE lib_model OF ADC_DIV_Q_5 : LABEL IS "macrocell118";
    ATTRIBUTE lib_model OF ADC_DIV_Q_3 : LABEL IS "macrocell119";
    ATTRIBUTE lib_model OF cy_tff_3 : LABEL IS "macrocell120";
    ATTRIBUTE lib_model OF cy_tff_2 : LABEL IS "macrocell121";
    ATTRIBUTE lib_model OF ADC_DIV_Q_0 : LABEL IS "macrocell122";
    ATTRIBUTE lib_model OF \PWM_11:PWMUDB:runmode_enable\ : LABEL IS "macrocell123";
    ATTRIBUTE lib_model OF \PWM_11:PWMUDB:prevCompare1\ : LABEL IS "macrocell124";
    ATTRIBUTE lib_model OF \PWM_11:PWMUDB:status_0\ : LABEL IS "macrocell125";
    ATTRIBUTE lib_model OF ADC_DIV_Q_11 : LABEL IS "macrocell126";
    ATTRIBUTE lib_model OF \PWM_10:PWMUDB:runmode_enable\ : LABEL IS "macrocell127";
    ATTRIBUTE lib_model OF \PWM_10:PWMUDB:prevCompare1\ : LABEL IS "macrocell128";
    ATTRIBUTE lib_model OF \PWM_10:PWMUDB:status_0\ : LABEL IS "macrocell129";
    ATTRIBUTE lib_model OF ADC_DIV_Q_10 : LABEL IS "macrocell130";
    ATTRIBUTE lib_model OF \PWM_7:PWMUDB:runmode_enable\ : LABEL IS "macrocell131";
    ATTRIBUTE lib_model OF \PWM_7:PWMUDB:prevCompare1\ : LABEL IS "macrocell132";
    ATTRIBUTE lib_model OF \PWM_7:PWMUDB:status_0\ : LABEL IS "macrocell133";
    ATTRIBUTE lib_model OF ADC_DIV_Q_7 : LABEL IS "macrocell134";
    ATTRIBUTE lib_model OF \PWM_9:PWMUDB:runmode_enable\ : LABEL IS "macrocell135";
    ATTRIBUTE lib_model OF \PWM_9:PWMUDB:prevCompare1\ : LABEL IS "macrocell136";
    ATTRIBUTE lib_model OF \PWM_9:PWMUDB:status_0\ : LABEL IS "macrocell137";
    ATTRIBUTE lib_model OF ADC_DIV_Q_9 : LABEL IS "macrocell138";
    ATTRIBUTE lib_model OF \PWM_8:PWMUDB:runmode_enable\ : LABEL IS "macrocell139";
    ATTRIBUTE lib_model OF Dedicated_Output_1 : LABEL IS "iocell10";
    ATTRIBUTE Location OF Dedicated_Output_1 : LABEL IS "P3[6]";
    ATTRIBUTE lib_model OF \PWM_8:PWMUDB:prevCompare1\ : LABEL IS "macrocell140";
    ATTRIBUTE lib_model OF \PWM_8:PWMUDB:status_0\ : LABEL IS "macrocell141";
    ATTRIBUTE lib_model OF ADC_DIV_Q_8 : LABEL IS "macrocell142";
    ATTRIBUTE lib_model OF \PWM_6:PWMUDB:runmode_enable\ : LABEL IS "macrocell143";
    ATTRIBUTE lib_model OF Dedicated_Output : LABEL IS "iocell11";
    ATTRIBUTE Location OF Dedicated_Output : LABEL IS "P0[0]";
    ATTRIBUTE lib_model OF \PWM_6:PWMUDB:prevCompare1\ : LABEL IS "macrocell144";
    ATTRIBUTE lib_model OF \PWM_6:PWMUDB:status_0\ : LABEL IS "macrocell145";
    ATTRIBUTE lib_model OF ADC_DIV_Q_6 : LABEL IS "macrocell146";
    COMPONENT abufcell
    END COMPONENT;
    COMPONENT clockblockcell
        PORT (
            dclk_0 : OUT std_ulogic;
            dclk_1 : OUT std_ulogic;
            dclk_2 : OUT std_ulogic;
            dclk_3 : OUT std_ulogic;
            dclk_4 : OUT std_ulogic;
            dclk_5 : OUT std_ulogic;
            dclk_6 : OUT std_ulogic;
            dclk_7 : OUT std_ulogic;
            dclk_glb_0 : OUT std_ulogic;
            dclk_glb_1 : OUT std_ulogic;
            dclk_glb_2 : OUT std_ulogic;
            dclk_glb_3 : OUT std_ulogic;
            dclk_glb_4 : OUT std_ulogic;
            dclk_glb_5 : OUT std_ulogic;
            dclk_glb_6 : OUT std_ulogic;
            dclk_glb_7 : OUT std_ulogic;
            aclk_0 : OUT std_ulogic;
            aclk_1 : OUT std_ulogic;
            aclk_2 : OUT std_ulogic;
            aclk_3 : OUT std_ulogic;
            aclk_glb_0 : OUT std_ulogic;
            aclk_glb_1 : OUT std_ulogic;
            aclk_glb_2 : OUT std_ulogic;
            aclk_glb_3 : OUT std_ulogic;
            clk_a_dig_0 : OUT std_ulogic;
            clk_a_dig_1 : OUT std_ulogic;
            clk_a_dig_2 : OUT std_ulogic;
            clk_a_dig_3 : OUT std_ulogic;
            clk_a_dig_glb_0 : OUT std_ulogic;
            clk_a_dig_glb_1 : OUT std_ulogic;
            clk_a_dig_glb_2 : OUT std_ulogic;
            clk_a_dig_glb_3 : OUT std_ulogic;
            clk_bus : OUT std_ulogic;
            clk_bus_glb : OUT std_ulogic;
            clk_sync : OUT std_ulogic;
            clk_32k_xtal : OUT std_ulogic;
            clk_100k : OUT std_ulogic;
            clk_32k : OUT std_ulogic;
            clk_1k : OUT std_ulogic;
            clk_usb : OUT std_ulogic;
            xmhz_xerr : OUT std_ulogic;
            pll_lock_out : OUT std_ulogic;
            dsi_dig_div_0 : IN std_ulogic;
            dsi_dig_div_1 : IN std_ulogic;
            dsi_dig_div_2 : IN std_ulogic;
            dsi_dig_div_3 : IN std_ulogic;
            dsi_dig_div_4 : IN std_ulogic;
            dsi_dig_div_5 : IN std_ulogic;
            dsi_dig_div_6 : IN std_ulogic;
            dsi_dig_div_7 : IN std_ulogic;
            dsi_ana_div_0 : IN std_ulogic;
            dsi_ana_div_1 : IN std_ulogic;
            dsi_ana_div_2 : IN std_ulogic;
            dsi_ana_div_3 : IN std_ulogic;
            dsi_glb_div : IN std_ulogic;
            dsi_clkin_div : IN std_ulogic;
            imo : OUT std_ulogic;
            ilo : OUT std_ulogic;
            xtal : OUT std_ulogic;
            pllout : OUT std_ulogic;
            clk_bus_glb_ff : OUT std_ulogic;
            aclk_glb_ff_0 : OUT std_ulogic;
            clk_a_dig_glb_ff_0 : OUT std_ulogic;
            aclk_glb_ff_1 : OUT std_ulogic;
            clk_a_dig_glb_ff_1 : OUT std_ulogic;
            aclk_glb_ff_2 : OUT std_ulogic;
            clk_a_dig_glb_ff_2 : OUT std_ulogic;
            aclk_glb_ff_3 : OUT std_ulogic;
            clk_a_dig_glb_ff_3 : OUT std_ulogic;
            dclk_glb_ff_0 : OUT std_ulogic;
            dclk_glb_ff_1 : OUT std_ulogic;
            dclk_glb_ff_2 : OUT std_ulogic;
            dclk_glb_ff_3 : OUT std_ulogic;
            dclk_glb_ff_4 : OUT std_ulogic;
            dclk_glb_ff_5 : OUT std_ulogic;
            dclk_glb_ff_6 : OUT std_ulogic;
            dclk_glb_ff_7 : OUT std_ulogic);
    END COMPONENT;
    COMPONENT controlcell
        PORT (
            control_0 : OUT std_ulogic;
            control_1 : OUT std_ulogic;
            control_2 : OUT std_ulogic;
            control_3 : OUT std_ulogic;
            control_4 : OUT std_ulogic;
            control_5 : OUT std_ulogic;
            control_6 : OUT std_ulogic;
            control_7 : OUT std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            clk_en : IN std_ulogic;
            busclk : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF controlcell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF controlcell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF controlcell : COMPONENT IS "reset";
    COMPONENT count7cell
        PORT (
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            load : IN std_ulogic;
            enable : IN std_ulogic;
            clk_en : IN std_ulogic;
            count_0 : OUT std_ulogic;
            count_1 : OUT std_ulogic;
            count_2 : OUT std_ulogic;
            count_3 : OUT std_ulogic;
            count_4 : OUT std_ulogic;
            count_5 : OUT std_ulogic;
            count_6 : OUT std_ulogic;
            tc : OUT std_ulogic;
            clock_n : IN std_ulogic;
            extclk : IN std_ulogic;
            extclk_n : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF count7cell : COMPONENT IS "clock,clock_n,extclk,extclk_n";
    ATTRIBUTE udb_clken OF count7cell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF count7cell : COMPONENT IS "reset";
    COMPONENT datapathcell
        PORT (
            clock : IN std_ulogic;
            clk_en : IN std_ulogic;
            reset : IN std_ulogic;
            cs_addr_0 : IN std_ulogic;
            cs_addr_1 : IN std_ulogic;
            cs_addr_2 : IN std_ulogic;
            route_si : IN std_ulogic;
            route_ci : IN std_ulogic;
            f0_load : IN std_ulogic;
            f1_load : IN std_ulogic;
            d0_load : IN std_ulogic;
            d1_load : IN std_ulogic;
            ce0_reg : OUT std_ulogic;
            cl0_reg : OUT std_ulogic;
            z0_reg : OUT std_ulogic;
            f0_reg : OUT std_ulogic;
            ce1_reg : OUT std_ulogic;
            cl1_reg : OUT std_ulogic;
            z1_reg : OUT std_ulogic;
            f1_reg : OUT std_ulogic;
            ov_msb_reg : OUT std_ulogic;
            co_msb_reg : OUT std_ulogic;
            cmsb_reg : OUT std_ulogic;
            so_reg : OUT std_ulogic;
            f0_bus_stat_reg : OUT std_ulogic;
            f0_blk_stat_reg : OUT std_ulogic;
            f1_bus_stat_reg : OUT std_ulogic;
            f1_blk_stat_reg : OUT std_ulogic;
            ce0_comb : OUT std_ulogic;
            cl0_comb : OUT std_ulogic;
            z0_comb : OUT std_ulogic;
            f0_comb : OUT std_ulogic;
            ce1_comb : OUT std_ulogic;
            cl1_comb : OUT std_ulogic;
            z1_comb : OUT std_ulogic;
            f1_comb : OUT std_ulogic;
            ov_msb_comb : OUT std_ulogic;
            co_msb_comb : OUT std_ulogic;
            cmsb_comb : OUT std_ulogic;
            so_comb : OUT std_ulogic;
            f0_bus_stat_comb : OUT std_ulogic;
            f0_blk_stat_comb : OUT std_ulogic;
            f1_bus_stat_comb : OUT std_ulogic;
            f1_blk_stat_comb : OUT std_ulogic;
            ce0 : OUT std_ulogic;
            ce0i : IN std_ulogic;
            p_in_0 : IN std_ulogic;
            p_in_1 : IN std_ulogic;
            p_in_2 : IN std_ulogic;
            p_in_3 : IN std_ulogic;
            p_in_4 : IN std_ulogic;
            p_in_5 : IN std_ulogic;
            p_in_6 : IN std_ulogic;
            p_in_7 : IN std_ulogic;
            p_out_0 : OUT std_ulogic;
            p_out_1 : OUT std_ulogic;
            p_out_2 : OUT std_ulogic;
            p_out_3 : OUT std_ulogic;
            p_out_4 : OUT std_ulogic;
            p_out_5 : OUT std_ulogic;
            p_out_6 : OUT std_ulogic;
            p_out_7 : OUT std_ulogic;
            cl0i : IN std_ulogic;
            cl0 : OUT std_ulogic;
            z0i : IN std_ulogic;
            z0 : OUT std_ulogic;
            ff0i : IN std_ulogic;
            ff0 : OUT std_ulogic;
            ce1i : IN std_ulogic;
            ce1 : OUT std_ulogic;
            cl1i : IN std_ulogic;
            cl1 : OUT std_ulogic;
            z1i : IN std_ulogic;
            z1 : OUT std_ulogic;
            ff1i : IN std_ulogic;
            ff1 : OUT std_ulogic;
            cap0i : IN std_ulogic;
            cap0 : OUT std_ulogic;
            cap1i : IN std_ulogic;
            cap1 : OUT std_ulogic;
            ci : IN std_ulogic;
            co_msb : OUT std_ulogic;
            sir : IN std_ulogic;
            sol_msb : OUT std_ulogic;
            cfbi : IN std_ulogic;
            cfbo : OUT std_ulogic;
            sil : IN std_ulogic;
            sor : OUT std_ulogic;
            cmsbi : IN std_ulogic;
            cmsbo : OUT std_ulogic;
            busclk : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF datapathcell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF datapathcell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF datapathcell : COMPONENT IS "reset";
    ATTRIBUTE udb_chain OF datapathcell : COMPONENT IS "ce0i,ce0,cl0i,cl0,z0i,z0,ff0i,ff0,ce1i,ce1,cl1i,cl1,z1i,z1,ff1i,ff1,cap0i,cap0,cap1i,cap1,ci,co_msb,sir,sol_msb,cfbi,cfbo,sil,sor,cmsbi,cmsbo";
    ATTRIBUTE chain_lsb OF datapathcell : COMPONENT IS "ce0i,cl0i,z0i,ff0i,ce1i,cl1i,z1i,ff1i,cap0i,cap1i,ci,sir,cfbi,sor,cmsbo";
    ATTRIBUTE chain_msb OF datapathcell : COMPONENT IS "ce0,cl0,z0,ff0,ce1,cl1,z1,ff1,cap0,cap1,co_msb,sol_msb,cfbo,sil,cmsbi";
    COMPONENT dfbcell
        PORT (
            clock : IN std_ulogic;
            in_1 : IN std_ulogic;
            in_2 : IN std_ulogic;
            out_1 : OUT std_ulogic;
            out_2 : OUT std_ulogic;
            dmareq_1 : OUT std_ulogic;
            dmareq_2 : OUT std_ulogic;
            interrupt : OUT std_ulogic);
    END COMPONENT;
    COMPONENT drqcell
        PORT (
            dmareq : IN std_ulogic;
            termin : IN std_ulogic;
            termout : OUT std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT interrupt
        PORT (
            interrupt : IN std_ulogic;
            clock : IN std_ulogic);
    END COMPONENT;
    COMPONENT iocell
        PORT (
            pin_input : IN std_ulogic;
            oe : IN std_ulogic;
            fb : OUT std_ulogic;
            pad_in : IN std_ulogic;
            pa_out : OUT std_ulogic;
            pad_out : OUT std_ulogic;
            oe_reg : OUT std_ulogic;
            oe_internal : IN std_ulogic;
            in_clock : IN std_ulogic;
            in_clock_en : IN std_ulogic;
            in_reset : IN std_ulogic;
            out_clock : IN std_ulogic;
            out_clock_en : IN std_ulogic;
            out_reset : IN std_ulogic);
    END COMPONENT;
    COMPONENT logicalport
        PORT (
            interrupt : OUT std_ulogic;
            precharge : IN std_ulogic;
            in_clock : IN std_ulogic;
            in_clock_en : IN std_ulogic;
            in_reset : IN std_ulogic;
            out_clock : IN std_ulogic;
            out_clock_en : IN std_ulogic;
            out_reset : IN std_ulogic);
    END COMPONENT;
    COMPONENT macrocell
        PORT (
            main_0 : IN std_ulogic;
            main_1 : IN std_ulogic;
            main_2 : IN std_ulogic;
            main_3 : IN std_ulogic;
            main_4 : IN std_ulogic;
            main_5 : IN std_ulogic;
            main_6 : IN std_ulogic;
            main_7 : IN std_ulogic;
            main_8 : IN std_ulogic;
            main_9 : IN std_ulogic;
            main_10 : IN std_ulogic;
            main_11 : IN std_ulogic;
            ar_0 : IN std_ulogic;
            ap_0 : IN std_ulogic;
            clock_0 : IN std_ulogic;
            clk_en : IN std_ulogic;
            cin : IN std_ulogic;
            cpt0_0 : IN std_ulogic;
            cpt0_1 : IN std_ulogic;
            cpt0_2 : IN std_ulogic;
            cpt0_3 : IN std_ulogic;
            cpt0_4 : IN std_ulogic;
            cpt0_5 : IN std_ulogic;
            cpt0_6 : IN std_ulogic;
            cpt0_7 : IN std_ulogic;
            cpt0_8 : IN std_ulogic;
            cpt0_9 : IN std_ulogic;
            cpt0_10 : IN std_ulogic;
            cpt0_11 : IN std_ulogic;
            cpt1_0 : IN std_ulogic;
            cpt1_1 : IN std_ulogic;
            cpt1_2 : IN std_ulogic;
            cpt1_3 : IN std_ulogic;
            cpt1_4 : IN std_ulogic;
            cpt1_5 : IN std_ulogic;
            cpt1_6 : IN std_ulogic;
            cpt1_7 : IN std_ulogic;
            cpt1_8 : IN std_ulogic;
            cpt1_9 : IN std_ulogic;
            cpt1_10 : IN std_ulogic;
            cpt1_11 : IN std_ulogic;
            cout : OUT std_ulogic;
            q : OUT std_ulogic;
            q_fixed : OUT std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF macrocell : COMPONENT IS "clock_0";
    ATTRIBUTE udb_clken OF macrocell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF macrocell : COMPONENT IS "ar_0";
    ATTRIBUTE udb_preset OF macrocell : COMPONENT IS "ap_0";
    ATTRIBUTE udb_chain OF macrocell : COMPONENT IS "cin,cout";
    ATTRIBUTE chain_lsb OF macrocell : COMPONENT IS "cin";
    ATTRIBUTE chain_msb OF macrocell : COMPONENT IS "cout";
    COMPONENT sarcell
        PORT (
            clock : IN std_ulogic;
            pump_clock : IN std_ulogic;
            clk_udb : IN std_ulogic;
            sof_udb : IN std_ulogic;
            vp_ctl_udb_0 : IN std_ulogic;
            vp_ctl_udb_1 : IN std_ulogic;
            vp_ctl_udb_2 : IN std_ulogic;
            vp_ctl_udb_3 : IN std_ulogic;
            vn_ctl_udb_0 : IN std_ulogic;
            vn_ctl_udb_1 : IN std_ulogic;
            vn_ctl_udb_2 : IN std_ulogic;
            vn_ctl_udb_3 : IN std_ulogic;
            data_out_udb_0 : OUT std_ulogic;
            data_out_udb_1 : OUT std_ulogic;
            data_out_udb_2 : OUT std_ulogic;
            data_out_udb_3 : OUT std_ulogic;
            data_out_udb_4 : OUT std_ulogic;
            data_out_udb_5 : OUT std_ulogic;
            data_out_udb_6 : OUT std_ulogic;
            data_out_udb_7 : OUT std_ulogic;
            data_out_udb_8 : OUT std_ulogic;
            data_out_udb_9 : OUT std_ulogic;
            data_out_udb_10 : OUT std_ulogic;
            data_out_udb_11 : OUT std_ulogic;
            eof_udb : OUT std_ulogic;
            irq : OUT std_ulogic;
            next : OUT std_ulogic);
    END COMPONENT;
    COMPONENT statuscell
        PORT (
            status_0 : IN std_ulogic;
            status_1 : IN std_ulogic;
            status_2 : IN std_ulogic;
            status_3 : IN std_ulogic;
            status_4 : IN std_ulogic;
            status_5 : IN std_ulogic;
            status_6 : IN std_ulogic;
            status_7 : IN std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            clk_en : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF statuscell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF statuscell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF statuscell : COMPONENT IS "reset";
    COMPONENT statusicell
        PORT (
            status_0 : IN std_ulogic;
            status_1 : IN std_ulogic;
            status_2 : IN std_ulogic;
            status_3 : IN std_ulogic;
            status_4 : IN std_ulogic;
            status_5 : IN std_ulogic;
            status_6 : IN std_ulogic;
            clock : IN std_ulogic;
            reset : IN std_ulogic;
            interrupt : OUT std_ulogic;
            clk_en : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF statusicell : COMPONENT IS "clock";
    ATTRIBUTE udb_clken OF statusicell : COMPONENT IS "clk_en";
    ATTRIBUTE udb_reset OF statusicell : COMPONENT IS "reset";
    COMPONENT synccell
        PORT (
            in : IN std_ulogic;
            clock : IN std_ulogic;
            out : OUT std_ulogic;
            clk_en : IN std_ulogic;
            clock_n : IN std_ulogic;
            extclk : IN std_ulogic;
            extclk_n : IN std_ulogic);
    END COMPONENT;
    ATTRIBUTE udb_clk OF synccell : COMPONENT IS "clock,clock_n,extclk,extclk_n";
    ATTRIBUTE udb_clken OF synccell : COMPONENT IS "clk_en";
    COMPONENT timercell
        PORT (
            clock : IN std_ulogic;
            kill : IN std_ulogic;
            enable : IN std_ulogic;
            capture : IN std_ulogic;
            timer_reset : IN std_ulogic;
            tc : OUT std_ulogic;
            cmp : OUT std_ulogic;
            irq : OUT std_ulogic);
    END COMPONENT;
BEGIN

    \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1) + (main_2 * !main_3) + (main_4 * !main_5) + (main_6 * !main_7) + (!main_8 * main_9) + (main_8 * !main_9) + (!main_10 * main_11) + (main_10 * !main_11)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_1 => \ADC_SAR_Seq:ch_addr_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:ch_addr_4\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_5 => \ADC_SAR_Seq:ch_addr_3\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_7 => \ADC_SAR_Seq:ch_addr_2\,
            main_8 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_9 => \ADC_SAR_Seq:ch_addr_1\,
            main_10 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\,
            main_11 => \ADC_SAR_Seq:ch_addr_0\);

    ClockBlock:clockblockcell
        PORT MAP(
            imo => ClockBlock_IMO,
            pllout => ClockBlock_PLL_OUT,
            ilo => ClockBlock_ILO,
            clk_100k => ClockBlock_100k,
            clk_1k => ClockBlock_1k,
            clk_32k => ClockBlock_32k,
            xtal => ClockBlock_XTAL,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ,
            clk_sync => ClockBlock_MASTER_CLK,
            clk_bus_glb => ClockBlock_BUS_CLK,
            clk_bus => ClockBlock_BUS_CLK_local,
            dsi_clkin_div => open,
            dsi_glb_div => open,
            dclk_glb_0 => \SPI_DAC:Net_276\,
            dclk_0 => \SPI_DAC:Net_276_local\,
            dclk_glb_1 => ADC_CLK,
            dclk_1 => ADC_CLK_local,
            dclk_glb_ff_1 => \ClockBlock.dclk_glb_ff_1__sig\);

    \LCD_Char_1:LCDPort\:logicalport
        GENERIC MAP(
            drive_mode => "110110110110110110110",
            ibuf_enabled => "1111111",
            id => "efccb368-07a4-4cd5-862a-a07319c85a4c/ed092b9b-d398-4703-be89-cebf998501f6",
            init_dr_st => "0000000",
            input_buffer_sel => "00000000000000",
            input_clk_en => 0,
            input_sync => "1111111",
            input_sync_mode => "0000000",
            intr_mode => "00000000000000",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => ",,,,,,",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0000000",
            oe_reset => 0,
            oe_sync => "0000000",
            output_clk_en => 0,
            output_clock_mode => "0000000",
            output_conn => "0000000",
            output_mode => "0000000",
            output_reset => 0,
            output_sync => "0000000",
            ovt_hyst_trim => "0000000",
            ovt_needed => "0000000",
            ovt_slew_control => "00000000000000",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => ",,,,,,",
            pin_mode => "OOOOOOO",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1111111",
            sio_ibuf => "00000000",
            sio_info => "00000000000000",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0000000",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0000000",
            vtrip => "10101010101010",
            width => 7,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    \LCD_Char_1:LCDPort(0)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\LCD_Char_1:LCDPort\",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            pa_out => \\\LCD_Char_1:LCDPort(0)\\__PA\,
            oe => open,
            pad_in => \LCD_Char_1:LCDPort(0)_PAD\,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \LCD_Char_1:LCDPort(1)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\LCD_Char_1:LCDPort\",
            logicalport_pin_id => 1,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            pa_out => \\\LCD_Char_1:LCDPort(1)\\__PA\,
            oe => open,
            pad_in => \LCD_Char_1:LCDPort(1)_PAD\,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \LCD_Char_1:LCDPort(2)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\LCD_Char_1:LCDPort\",
            logicalport_pin_id => 2,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            pa_out => \\\LCD_Char_1:LCDPort(2)\\__PA\,
            oe => open,
            pad_in => \LCD_Char_1:LCDPort(2)_PAD\,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \LCD_Char_1:LCDPort(3)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\LCD_Char_1:LCDPort\",
            logicalport_pin_id => 3,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            pa_out => \\\LCD_Char_1:LCDPort(3)\\__PA\,
            oe => open,
            pad_in => \LCD_Char_1:LCDPort(3)_PAD\,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \LCD_Char_1:LCDPort(4)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\LCD_Char_1:LCDPort\",
            logicalport_pin_id => 4,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            pa_out => \\\LCD_Char_1:LCDPort(4)\\__PA\,
            oe => open,
            pad_in => \LCD_Char_1:LCDPort(4)_PAD\,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \LCD_Char_1:LCDPort(5)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\LCD_Char_1:LCDPort\",
            logicalport_pin_id => 5,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            pa_out => \\\LCD_Char_1:LCDPort(5)\\__PA\,
            oe => open,
            pad_in => \LCD_Char_1:LCDPort(5)_PAD\,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \LCD_Char_1:LCDPort(6)\:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "\LCD_Char_1:LCDPort\",
            logicalport_pin_id => 6,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000001")
        PORT MAP(
            pa_out => \\\LCD_Char_1:LCDPort(6)\\__PA\,
            oe => open,
            pad_in => \LCD_Char_1:LCDPort(6)_PAD\,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    AUDIO_IN:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "77715107-f8d5-47e5-a629-0fb83101ac6b",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    AUDIO_IN(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "AUDIO_IN",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => AUDIO_IN(0)__PA,
            oe => open,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    DIV_MUX_CONTROL:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "8f09d42b-4252-4fd9-9747-e1e6888f0885",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    DIV_MUX_CONTROL(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "DIV_MUX_CONTROL",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => DIV_MUX_CONTROL(0)__PA,
            oe => open,
            in_clock => open,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    MASK_OFF_CONTROL:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "958c95b3-19f2-4750-b7c4-23383f3cc89e",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    MASK_OFF_CONTROL(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "MASK_OFF_CONTROL",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => MASK_OFF_CONTROL(0)__PA,
            oe => open,
            in_clock => open,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    MOSI_OUT:logicalport
        GENERIC MAP(
            drive_mode => "110",
            ibuf_enabled => "1",
            id => "e851a3b9-efb8-48be-bbb8-b303b216c393",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "1",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "O",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    MOSI_OUT(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "MOSI_OUT",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000101")
        PORT MAP(
            pa_out => MOSI_OUT(0)__PA,
            oe => open,
            pin_input => Net_6027,
            pad_out => MOSI_OUT(0)_PAD,
            pad_in => MOSI_OUT(0)_PAD,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    SAMPLE_RATE_CONTROL:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "96252028-0a67-4136-8161-5998731ae662",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    SAMPLE_RATE_CONTROL(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "SAMPLE_RATE_CONTROL",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => SAMPLE_RATE_CONTROL(0)__PA,
            oe => open,
            in_clock => open,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    VREF_BUFF:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "177aaffd-317a-4beb-ba81-0c5cd70e7e93",
            init_dr_st => "1",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    VREF_BUFF(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "VREF_BUFF",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => VREF_BUFF(0)__PA,
            oe => open,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    MISO_IN:logicalport
        GENERIC MAP(
            drive_mode => "001",
            ibuf_enabled => "1",
            id => "8d318d8b-cf7b-4b6b-b02c-ab1c5c49d0ba",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "0",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "I",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "00",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    MISO_IN(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "MISO_IN",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000101")
        PORT MAP(
            pa_out => MISO_IN(0)__PA,
            oe => open,
            fb => Net_6028,
            pad_in => MISO_IN(0)_PAD,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    SCLK_OUT:logicalport
        GENERIC MAP(
            drive_mode => "110",
            ibuf_enabled => "1",
            id => "fe06ede2-63c8-422c-a6f7-d7603b8d92d0",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "1",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "O",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    SCLK_OUT(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "SCLK_OUT",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000101")
        PORT MAP(
            pa_out => SCLK_OUT(0)__PA,
            oe => open,
            pin_input => Net_6026,
            pad_out => SCLK_OUT(0)_PAD,
            pad_in => SCLK_OUT(0)_PAD,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    SS_OUT:logicalport
        GENERIC MAP(
            drive_mode => "110",
            ibuf_enabled => "1",
            id => "abfaef39-a1bd-4f53-9a1a-b78fef71fe87",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "1",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "O",
            por_state => 2,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    SS_OUT(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "SS_OUT",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000101")
        PORT MAP(
            pa_out => SS_OUT(0)__PA,
            oe => open,
            pin_input => Net_6025,
            pad_out => SS_OUT(0)_PAD,
            pad_in => SS_OUT(0)_PAD,
            in_clock => open,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    PWM_1_CONTROL:logicalport
        GENERIC MAP(
            drive_mode => "000",
            ibuf_enabled => "0",
            id => "ec958407-0043-4499-b7d2-fed1a912b659",
            init_dr_st => "0",
            input_buffer_sel => "00",
            input_clk_en => 0,
            input_sync => "1",
            input_sync_mode => "0",
            intr_mode => "00",
            invert_in_clock => 0,
            invert_in_clock_en => 0,
            invert_in_reset => 0,
            invert_out_clock => 0,
            invert_out_clock_en => 0,
            invert_out_reset => 0,
            io_voltage => "",
            layout_mode => "CONTIGUOUS",
            oe_conn => "0",
            oe_reset => 0,
            oe_sync => "0",
            output_clk_en => 0,
            output_clock_mode => "0",
            output_conn => "0",
            output_mode => "0",
            output_reset => 0,
            output_sync => "0",
            ovt_hyst_trim => "0",
            ovt_needed => "0",
            ovt_slew_control => "00",
            pa_in_clock => -1,
            pa_in_clock_en => -1,
            pa_in_reset => -1,
            pa_out_clock => -1,
            pa_out_clock_en => -1,
            pa_out_reset => -1,
            pin_aliases => "",
            pin_mode => "A",
            por_state => 4,
            port_alias_group => "",
            port_alias_required => 0,
            sio_group_cnt => 0,
            sio_hifreq => "00000000",
            sio_hyst => "1",
            sio_ibuf => "00000000",
            sio_info => "00",
            sio_obuf => "00000000",
            sio_refsel => "00000000",
            sio_vohsel => "00000000",
            sio_vtrip => "00000000",
            slew_rate => "0",
            spanning => 0,
            sw_only => 0,
            use_annotation => "0",
            vtrip => "10",
            width => 1,
            in_clk_inv => 0,
            in_clken_inv => 0,
            in_clken_mode => 1,
            in_rst_inv => 0,
            out_clk_inv => 0,
            out_clken_inv => 0,
            out_clken_mode => 1,
            out_rst_inv => 0)
        PORT MAP(
            in_clock_en => open,
            in_reset => open,
            out_clock_en => open,
            out_reset => open);

    PWM_1_CONTROL(0):iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            logicalport => "PWM_1_CONTROL",
            logicalport_pin_id => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => PWM_1_CONTROL(0)__PA,
            oe => open,
            in_clock => open,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\,
            in_clock_en => '1',
            in_reset => '0',
            out_clock => open,
            out_clock_en => '1',
            out_reset => '0');

    \SPI_DAC:BSPIM:load_rx_data\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * !main_3 * main_4)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:load_rx_data\,
            main_0 => \SPI_DAC:BSPIM:count_4\,
            main_1 => \SPI_DAC:BSPIM:count_3\,
            main_2 => \SPI_DAC:BSPIM:count_2\,
            main_3 => \SPI_DAC:BSPIM:count_1\,
            main_4 => \SPI_DAC:BSPIM:count_0\);

    \SPI_DAC:BSPIM:tx_status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:tx_status_0\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\);

    \SPI_DAC:BSPIM:tx_status_4\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:tx_status_4\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\);

    \SPI_DAC:BSPIM:rx_status_6\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * !main_3 * main_4 * main_5)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:rx_status_6\,
            main_0 => \SPI_DAC:BSPIM:count_4\,
            main_1 => \SPI_DAC:BSPIM:count_3\,
            main_2 => \SPI_DAC:BSPIM:count_2\,
            main_3 => \SPI_DAC:BSPIM:count_1\,
            main_4 => \SPI_DAC:BSPIM:count_0\,
            main_5 => \SPI_DAC:BSPIM:rx_status_4\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\:macrocell
        GENERIC MAP(
            soft => 1,
            eqn_main => "(!main_0 * main_1) + (!main_2 * main_3) + (!main_4 * main_5) + (!main_6 * main_7) + (main_8)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_1 => \ADC_SAR_Seq:ch_addr_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:ch_addr_4\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_5 => \ADC_SAR_Seq:ch_addr_3\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_7 => \ADC_SAR_Seq:ch_addr_2\,
            main_8 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\);

    \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\,
            main_0 => Net_12629,
            main_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\);

    MUX_BUS_0:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_0,
            main_0 => DIV_MASK_BUS_0,
            main_1 => ADC_OUT_BUS_0,
            main_2 => ADC_DIV_Q_0);

    MUX_BUS_11:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_11,
            main_0 => DIV_MASK_BUS_11,
            main_1 => ADC_OUT_BUS_11,
            main_2 => ADC_DIV_Q_11);

    MUX_BUS_10:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_10,
            main_0 => DIV_MASK_BUS_10,
            main_1 => ADC_OUT_BUS_10,
            main_2 => ADC_DIV_Q_10);

    MUX_BUS_9:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_9,
            main_0 => DIV_MASK_BUS_9,
            main_1 => ADC_OUT_BUS_9,
            main_2 => ADC_DIV_Q_9);

    MUX_BUS_8:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_8,
            main_0 => DIV_MASK_BUS_8,
            main_1 => ADC_OUT_BUS_8,
            main_2 => ADC_DIV_Q_8);

    MUX_BUS_7:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_7,
            main_0 => DIV_MASK_BUS_7,
            main_1 => ADC_OUT_BUS_7,
            main_2 => ADC_DIV_Q_7);

    MUX_BUS_5:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_5,
            main_0 => DIV_MASK_BUS_5,
            main_1 => ADC_OUT_BUS_5,
            main_2 => ADC_DIV_Q_5);

    MUX_BUS_3:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_3,
            main_0 => DIV_MASK_BUS_3,
            main_1 => ADC_OUT_BUS_3,
            main_2 => ADC_DIV_Q_3);

    MUX_BUS_6:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_6,
            main_0 => DIV_MASK_BUS_6,
            main_1 => ADC_OUT_BUS_6,
            main_2 => ADC_DIV_Q_6);

    MUX_BUS_4:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_4,
            main_0 => DIV_MASK_BUS_4,
            main_1 => ADC_OUT_BUS_4,
            main_2 => ADC_DIV_Q_4);

    \PWM_4:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_4:PWMUDB:status_2\,
            main_0 => \PWM_4:PWMUDB:runmode_enable\,
            main_1 => \PWM_4:PWMUDB:tc_i\);

    \PWM_5:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_5:PWMUDB:status_2\,
            main_0 => \PWM_5:PWMUDB:runmode_enable\,
            main_1 => \PWM_5:PWMUDB:tc_i\);

    \PWM_11:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_11:PWMUDB:status_2\,
            main_0 => \PWM_11:PWMUDB:runmode_enable\,
            main_1 => \PWM_11:PWMUDB:tc_i\);

    \PWM_10:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_10:PWMUDB:status_2\,
            main_0 => \PWM_10:PWMUDB:runmode_enable\,
            main_1 => \PWM_10:PWMUDB:tc_i\);

    \PWM_7:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_7:PWMUDB:status_2\,
            main_0 => \PWM_7:PWMUDB:runmode_enable\,
            main_1 => \PWM_7:PWMUDB:tc_i\);

    \PWM_9:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_9:PWMUDB:status_2\,
            main_0 => \PWM_9:PWMUDB:runmode_enable\,
            main_1 => \PWM_9:PWMUDB:tc_i\);

    \PWM_8:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_8:PWMUDB:status_2\,
            main_0 => \PWM_8:PWMUDB:runmode_enable\,
            main_1 => \PWM_8:PWMUDB:tc_i\);

    \PWM_6:PWMUDB:status_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => \PWM_6:PWMUDB:status_2\,
            main_0 => \PWM_6:PWMUDB:runmode_enable\,
            main_1 => \PWM_6:PWMUDB:tc_i\);

    MUX_BUS_2:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_2,
            main_0 => DIV_MASK_BUS_2,
            main_1 => tmp__cy_tff_3_clk,
            main_2 => cy_tff_3);

    MUX_BUS_1:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * main_2)",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => MUX_BUS_1,
            main_0 => DIV_MASK_BUS_1,
            main_1 => tmp__cy_tff_2_clk,
            main_2 => cy_tff_2);

    \Filter:DFB\:dfbcell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            in_1 => open,
            in_2 => open,
            out_1 => \Filter:Net_8\,
            out_2 => \Filter:Net_9\,
            dmareq_1 => Net_1326,
            dmareq_2 => Net_1327,
            interrupt => Net_1328);

    \ADC_SAR_1:IRQ\:interrupt
        GENERIC MAP(
            int_type => "10",
            is_nmi => 0)
        PORT MAP(
            interrupt => Net_576,
            clock => ClockBlock_BUS_CLK);

    \ADC_SAR_1:ADC_SAR\:sarcell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            clk_udb => ADC_CLK_local,
            sof_udb => PWM_CK,
            vp_ctl_udb_3 => open,
            vp_ctl_udb_2 => open,
            vp_ctl_udb_1 => open,
            vp_ctl_udb_0 => open,
            vn_ctl_udb_3 => open,
            vn_ctl_udb_2 => open,
            vn_ctl_udb_1 => open,
            vn_ctl_udb_0 => open,
            irq => \ADC_SAR_1:Net_252\,
            next => Net_5999,
            data_out_udb_11 => \ADC_SAR_1:Net_207_11\,
            data_out_udb_10 => \ADC_SAR_1:Net_207_10\,
            data_out_udb_9 => \ADC_SAR_1:Net_207_9\,
            data_out_udb_8 => \ADC_SAR_1:Net_207_8\,
            data_out_udb_7 => \ADC_SAR_1:Net_207_7\,
            data_out_udb_6 => \ADC_SAR_1:Net_207_6\,
            data_out_udb_5 => \ADC_SAR_1:Net_207_5\,
            data_out_udb_4 => \ADC_SAR_1:Net_207_4\,
            data_out_udb_3 => \ADC_SAR_1:Net_207_3\,
            data_out_udb_2 => \ADC_SAR_1:Net_207_2\,
            data_out_udb_1 => \ADC_SAR_1:Net_207_1\,
            data_out_udb_0 => \ADC_SAR_1:Net_207_0\,
            eof_udb => Net_576);

    \Opamp_1:ABuf\:abufcell
        GENERIC MAP(
            cy_registers => "");

    __ONE__:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 0,
            clken_mode => 1)
        PORT MAP(
            q => __ONE__);

    \SPI_DAC:BSPIM:BitCounter\:count7cell
        GENERIC MAP(
            cy_alt_mode => 0,
            cy_init_value => "0000000",
            cy_period => "0011111",
            cy_route_en => 1,
            cy_route_ld => 0,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => \SPI_DAC:Net_276\,
            load => open,
            enable => \SPI_DAC:BSPIM:cnt_enable\,
            count_6 => \SPI_DAC:BSPIM:count_6\,
            count_5 => \SPI_DAC:BSPIM:count_5\,
            count_4 => \SPI_DAC:BSPIM:count_4\,
            count_3 => \SPI_DAC:BSPIM:count_3\,
            count_2 => \SPI_DAC:BSPIM:count_2\,
            count_1 => \SPI_DAC:BSPIM:count_1\,
            count_0 => \SPI_DAC:BSPIM:count_0\,
            tc => \SPI_DAC:BSPIM:cnt_tc\);

    \SPI_DAC:BSPIM:TxStsReg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "0000000",
            cy_md_select => "0001001",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => \SPI_DAC:Net_276\,
            status_6 => open,
            status_5 => open,
            status_4 => \SPI_DAC:BSPIM:tx_status_4\,
            status_3 => \SPI_DAC:BSPIM:load_rx_data\,
            status_2 => \SPI_DAC:BSPIM:tx_status_2\,
            status_1 => \SPI_DAC:BSPIM:tx_status_1\,
            status_0 => \SPI_DAC:BSPIM:tx_status_0\);

    \SPI_DAC:BSPIM:RxStsReg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "0000000",
            cy_md_select => "1000000",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => \SPI_DAC:Net_276\,
            status_6 => \SPI_DAC:BSPIM:rx_status_6\,
            status_5 => \SPI_DAC:BSPIM:rx_status_5\,
            status_4 => \SPI_DAC:BSPIM:rx_status_4\,
            status_3 => open,
            status_2 => open,
            status_1 => open,
            status_0 => open);

    \SPI_DAC:BSPIM:sR16:Dp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000000001000001000011100000000000000000100",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => \SPI_DAC:Net_276\,
            cs_addr_2 => \SPI_DAC:BSPIM:state_2\,
            cs_addr_1 => \SPI_DAC:BSPIM:state_1\,
            cs_addr_0 => \SPI_DAC:BSPIM:state_0\,
            route_si => Net_6028,
            f1_load => \SPI_DAC:BSPIM:load_rx_data\,
            busclk => ClockBlock_BUS_CLK,
            ce0 => \SPI_DAC:BSPIM:sR16:Dp:u0.ce0__sig\,
            cl0 => \SPI_DAC:BSPIM:sR16:Dp:u0.cl0__sig\,
            z0 => \SPI_DAC:BSPIM:sR16:Dp:u0.z0__sig\,
            ff0 => \SPI_DAC:BSPIM:sR16:Dp:u0.ff0__sig\,
            ce1 => \SPI_DAC:BSPIM:sR16:Dp:u0.ce1__sig\,
            cl1 => \SPI_DAC:BSPIM:sR16:Dp:u0.cl1__sig\,
            z1 => \SPI_DAC:BSPIM:sR16:Dp:u0.z1__sig\,
            ff1 => \SPI_DAC:BSPIM:sR16:Dp:u0.ff1__sig\,
            co_msb => \SPI_DAC:BSPIM:sR16:Dp:u0.co_msb__sig\,
            sol_msb => \SPI_DAC:BSPIM:sR16:Dp:u0.sol_msb__sig\,
            cfbo => \SPI_DAC:BSPIM:sR16:Dp:u0.cfbo__sig\,
            sil => \SPI_DAC:BSPIM:sR16:Dp:u1.sor__sig\,
            cmsbi => \SPI_DAC:BSPIM:sR16:Dp:u1.cmsbo__sig\);

    \SPI_DAC:BSPIM:sR16:Dp:u1\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000010001100001000111100000000000000000100",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => \SPI_DAC:Net_276\,
            cs_addr_2 => \SPI_DAC:BSPIM:state_2\,
            cs_addr_1 => \SPI_DAC:BSPIM:state_1\,
            cs_addr_0 => \SPI_DAC:BSPIM:state_0\,
            route_si => Net_6028,
            f1_load => \SPI_DAC:BSPIM:load_rx_data\,
            so_comb => \SPI_DAC:BSPIM:mosi_from_dp\,
            f0_bus_stat_comb => \SPI_DAC:BSPIM:tx_status_2\,
            f0_blk_stat_comb => \SPI_DAC:BSPIM:tx_status_1\,
            f1_bus_stat_comb => \SPI_DAC:BSPIM:rx_status_5\,
            f1_blk_stat_comb => \SPI_DAC:BSPIM:rx_status_4\,
            busclk => ClockBlock_BUS_CLK,
            ce0i => \SPI_DAC:BSPIM:sR16:Dp:u0.ce0__sig\,
            cl0i => \SPI_DAC:BSPIM:sR16:Dp:u0.cl0__sig\,
            z0i => \SPI_DAC:BSPIM:sR16:Dp:u0.z0__sig\,
            ff0i => \SPI_DAC:BSPIM:sR16:Dp:u0.ff0__sig\,
            ce1i => \SPI_DAC:BSPIM:sR16:Dp:u0.ce1__sig\,
            cl1i => \SPI_DAC:BSPIM:sR16:Dp:u0.cl1__sig\,
            z1i => \SPI_DAC:BSPIM:sR16:Dp:u0.z1__sig\,
            ff1i => \SPI_DAC:BSPIM:sR16:Dp:u0.ff1__sig\,
            ci => \SPI_DAC:BSPIM:sR16:Dp:u0.co_msb__sig\,
            sir => \SPI_DAC:BSPIM:sR16:Dp:u0.sol_msb__sig\,
            cfbi => \SPI_DAC:BSPIM:sR16:Dp:u0.cfbo__sig\,
            sor => \SPI_DAC:BSPIM:sR16:Dp:u1.sor__sig\,
            cmsbo => \SPI_DAC:BSPIM:sR16:Dp:u1.cmsbo__sig\);

    \Opamp_2:ABuf\:abufcell
        GENERIC MAP(
            cy_registers => "");

    \ADC_SAR_Seq:SAR:ADC_SAR\:sarcell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            clk_udb => ADC_CLK_local,
            sof_udb => open,
            vp_ctl_udb_3 => open,
            vp_ctl_udb_2 => open,
            vp_ctl_udb_1 => open,
            vp_ctl_udb_0 => open,
            vn_ctl_udb_3 => open,
            vn_ctl_udb_2 => open,
            vn_ctl_udb_1 => open,
            vn_ctl_udb_0 => open,
            irq => \ADC_SAR_Seq:SAR:Net_252\,
            next => Net_12629,
            data_out_udb_11 => \ADC_SAR_Seq:SAR:Net_207_11\,
            data_out_udb_10 => \ADC_SAR_Seq:SAR:Net_207_10\,
            data_out_udb_9 => \ADC_SAR_Seq:SAR:Net_207_9\,
            data_out_udb_8 => \ADC_SAR_Seq:SAR:Net_207_8\,
            data_out_udb_7 => \ADC_SAR_Seq:SAR:Net_207_7\,
            data_out_udb_6 => \ADC_SAR_Seq:SAR:Net_207_6\,
            data_out_udb_5 => \ADC_SAR_Seq:SAR:Net_207_5\,
            data_out_udb_4 => \ADC_SAR_Seq:SAR:Net_207_4\,
            data_out_udb_3 => \ADC_SAR_Seq:SAR:Net_207_3\,
            data_out_udb_2 => \ADC_SAR_Seq:SAR:Net_207_2\,
            data_out_udb_1 => \ADC_SAR_Seq:SAR:Net_207_1\,
            data_out_udb_0 => \ADC_SAR_Seq:SAR:Net_207_0\,
            eof_udb => \ADC_SAR_Seq:Net_3830\);

    \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00000111",
            cy_ctrl_mode_1 => "00000110",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\,
            control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\,
            control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\,
            control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\,
            control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\,
            control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\,
            control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\,
            control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\,
            busclk => ClockBlock_BUS_CLK);

    \ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\:count7cell
        GENERIC MAP(
            cy_alt_mode => 0,
            cy_init_value => "0000000",
            cy_period => "0000011",
            cy_route_en => 1,
            cy_route_ld => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 3)
        PORT MAP(
            clock => ADC_CLK,
            load => \ADC_SAR_Seq:bSAR_SEQ:load_period\,
            enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\,
            count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\,
            count_5 => \ADC_SAR_Seq:ch_addr_5\,
            count_4 => \ADC_SAR_Seq:ch_addr_4\,
            count_3 => \ADC_SAR_Seq:ch_addr_3\,
            count_2 => \ADC_SAR_Seq:ch_addr_2\,
            count_1 => \ADC_SAR_Seq:ch_addr_1\,
            count_0 => \ADC_SAR_Seq:ch_addr_0\,
            tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\);

    \ADC_SAR_Seq:bSAR_SEQ:EOCSts\:statuscell
        GENERIC MAP(
            cy_force_order => 1,
            cy_md_select => "00000001",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 3)
        PORT MAP(
            clock => ADC_CLK,
            status_7 => open,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => open,
            status_2 => open,
            status_1 => open,
            status_0 => Net_12630,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\);

    \ADC_SAR_Seq:TempBuf\:drqcell
        GENERIC MAP(
            drq_type => "00",
            num_tds => 0)
        PORT MAP(
            dmareq => \ADC_SAR_Seq:Net_3830\,
            termin => '0',
            termout => \ADC_SAR_Seq:Net_3698\,
            clock => ClockBlock_BUS_CLK);

    \ADC_SAR_Seq:FinalBuf\:drqcell
        GENERIC MAP(
            drq_type => "00",
            num_tds => 0)
        PORT MAP(
            dmareq => \ADC_SAR_Seq:Net_3698\,
            termin => '0',
            termout => \ADC_SAR_Seq:nrq\,
            clock => ClockBlock_BUS_CLK);

    \ADC_SAR_Seq:IRQ\:interrupt
        GENERIC MAP(
            int_type => "10",
            is_nmi => 0)
        PORT MAP(
            interrupt => Net_12630,
            clock => ClockBlock_BUS_CLK);

    \ADC_SAR_Seq:Sync:genblk1[0]:INST\:synccell
        GENERIC MAP(
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ClockBlock_BUS_CLK,
            in => \ADC_SAR_Seq:nrq\,
            out => \ADC_SAR_Seq:Net_3935\);

    \PWM_ADC_CK:PWMHW\:timercell
        GENERIC MAP(
            cy_registers => "")
        PORT MAP(
            clock => \ClockBlock.dclk_glb_ff_1__sig\,
            kill => open,
            enable => __ONE__,
            capture => open,
            timer_reset => open,
            tc => \PWM_ADC_CK:Net_63\,
            cmp => PWM_CK,
            irq => \PWM_ADC_CK:Net_54\);

    \DIV_MASK_MSB:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00001111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 1,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \DIV_MASK_MSB:control_7\,
            control_6 => \DIV_MASK_MSB:control_6\,
            control_5 => \DIV_MASK_MSB:control_5\,
            control_4 => \DIV_MASK_MSB:control_4\,
            control_3 => DIV_MASK_BUS_11,
            control_2 => DIV_MASK_BUS_10,
            control_1 => DIV_MASK_BUS_9,
            control_0 => DIV_MASK_BUS_8,
            busclk => ClockBlock_BUS_CLK);

    \DIV_MASK_LSB:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 1,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => DIV_MASK_BUS_7,
            control_6 => DIV_MASK_BUS_6,
            control_5 => DIV_MASK_BUS_5,
            control_4 => DIV_MASK_BUS_4,
            control_3 => DIV_MASK_BUS_3,
            control_2 => DIV_MASK_BUS_2,
            control_1 => DIV_MASK_BUS_1,
            control_0 => DIV_MASK_BUS_0,
            busclk => ClockBlock_BUS_CLK);

    \PWM_4:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_4:PWMUDB:control_7\,
            control_6 => \PWM_4:PWMUDB:control_6\,
            control_5 => \PWM_4:PWMUDB:control_5\,
            control_4 => \PWM_4:PWMUDB:control_4\,
            control_3 => \PWM_4:PWMUDB:control_3\,
            control_2 => \PWM_4:PWMUDB:control_2\,
            control_1 => \PWM_4:PWMUDB:control_1\,
            control_0 => \PWM_4:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_4,
            busclk => ClockBlock_BUS_CLK);

    \PWM_4:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_4:PWMUDB:status_3\,
            status_2 => \PWM_4:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_4:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_4);

    \PWM_4:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_4:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_4:PWMUDB:runmode_enable\,
            ce0_comb => \PWM_4:PWMUDB:cmp1_eq\,
            cl0_comb => \PWM_4:PWMUDB:cmp1_less\,
            z0_comb => \PWM_4:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_4:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_4,
            busclk => ClockBlock_BUS_CLK);

    \PWM_5:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_5:PWMUDB:control_7\,
            control_6 => \PWM_5:PWMUDB:control_6\,
            control_5 => \PWM_5:PWMUDB:control_5\,
            control_4 => \PWM_5:PWMUDB:control_4\,
            control_3 => \PWM_5:PWMUDB:control_3\,
            control_2 => \PWM_5:PWMUDB:control_2\,
            control_1 => \PWM_5:PWMUDB:control_1\,
            control_0 => \PWM_5:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_5,
            busclk => ClockBlock_BUS_CLK);

    \PWM_5:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_5:PWMUDB:status_3\,
            status_2 => \PWM_5:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_5:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_5);

    \PWM_5:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_5:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_5:PWMUDB:runmode_enable\,
            ce0_comb => \PWM_5:PWMUDB:cmp1_eq\,
            cl0_comb => \PWM_5:PWMUDB:cmp1_less\,
            z0_comb => \PWM_5:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_5:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_5,
            busclk => ClockBlock_BUS_CLK);

    \PWM_11:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_11:PWMUDB:control_7\,
            control_6 => \PWM_11:PWMUDB:control_6\,
            control_5 => \PWM_11:PWMUDB:control_5\,
            control_4 => \PWM_11:PWMUDB:control_4\,
            control_3 => \PWM_11:PWMUDB:control_3\,
            control_2 => \PWM_11:PWMUDB:control_2\,
            control_1 => \PWM_11:PWMUDB:control_1\,
            control_0 => \PWM_11:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_11,
            busclk => ClockBlock_BUS_CLK);

    \PWM_11:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_11:PWMUDB:status_3\,
            status_2 => \PWM_11:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_11:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_11);

    \PWM_11:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_11:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_11:PWMUDB:runmode_enable\,
            ce0_comb => \PWM_11:PWMUDB:cmp1_eq\,
            cl0_comb => \PWM_11:PWMUDB:cmp1_less\,
            z0_comb => \PWM_11:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_11:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_11,
            busclk => ClockBlock_BUS_CLK);

    \PWM_10:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_10:PWMUDB:control_7\,
            control_6 => \PWM_10:PWMUDB:control_6\,
            control_5 => \PWM_10:PWMUDB:control_5\,
            control_4 => \PWM_10:PWMUDB:control_4\,
            control_3 => \PWM_10:PWMUDB:control_3\,
            control_2 => \PWM_10:PWMUDB:control_2\,
            control_1 => \PWM_10:PWMUDB:control_1\,
            control_0 => \PWM_10:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_10,
            busclk => ClockBlock_BUS_CLK);

    \PWM_10:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_10:PWMUDB:status_3\,
            status_2 => \PWM_10:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_10:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_10);

    \PWM_10:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_10:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_10:PWMUDB:runmode_enable\,
            ce0_comb => \PWM_10:PWMUDB:cmp1_eq\,
            cl0_comb => \PWM_10:PWMUDB:cmp1_less\,
            z0_comb => \PWM_10:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_10:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_10,
            busclk => ClockBlock_BUS_CLK);

    \PWM_7:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_7:PWMUDB:control_7\,
            control_6 => \PWM_7:PWMUDB:control_6\,
            control_5 => \PWM_7:PWMUDB:control_5\,
            control_4 => \PWM_7:PWMUDB:control_4\,
            control_3 => \PWM_7:PWMUDB:control_3\,
            control_2 => \PWM_7:PWMUDB:control_2\,
            control_1 => \PWM_7:PWMUDB:control_1\,
            control_0 => \PWM_7:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_7,
            busclk => ClockBlock_BUS_CLK);

    \PWM_7:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_7:PWMUDB:status_3\,
            status_2 => \PWM_7:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_7:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_7);

    \PWM_7:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_7:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_7:PWMUDB:runmode_enable\,
            ce0_comb => \PWM_7:PWMUDB:cmp1_eq\,
            cl0_comb => \PWM_7:PWMUDB:cmp1_less\,
            z0_comb => \PWM_7:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_7:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_7,
            busclk => ClockBlock_BUS_CLK);

    \PWM_9:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_9:PWMUDB:control_7\,
            control_6 => \PWM_9:PWMUDB:control_6\,
            control_5 => \PWM_9:PWMUDB:control_5\,
            control_4 => \PWM_9:PWMUDB:control_4\,
            control_3 => \PWM_9:PWMUDB:control_3\,
            control_2 => \PWM_9:PWMUDB:control_2\,
            control_1 => \PWM_9:PWMUDB:control_1\,
            control_0 => \PWM_9:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_9,
            busclk => ClockBlock_BUS_CLK);

    \PWM_9:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_9:PWMUDB:status_3\,
            status_2 => \PWM_9:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_9:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_9);

    \PWM_9:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_9:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_9:PWMUDB:runmode_enable\,
            cl0_comb => \PWM_9:PWMUDB:cmp1_less\,
            z0_comb => \PWM_9:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_9:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_9,
            busclk => ClockBlock_BUS_CLK);

    \PWM_8:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_8:PWMUDB:control_7\,
            control_6 => \PWM_8:PWMUDB:control_6\,
            control_5 => \PWM_8:PWMUDB:control_5\,
            control_4 => \PWM_8:PWMUDB:control_4\,
            control_3 => \PWM_8:PWMUDB:control_3\,
            control_2 => \PWM_8:PWMUDB:control_2\,
            control_1 => \PWM_8:PWMUDB:control_1\,
            control_0 => \PWM_8:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_8,
            busclk => ClockBlock_BUS_CLK);

    \PWM_8:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_8:PWMUDB:status_3\,
            status_2 => \PWM_8:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_8:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_8);

    \PWM_8:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_8:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_8:PWMUDB:runmode_enable\,
            cl0_comb => \PWM_8:PWMUDB:cmp1_less\,
            z0_comb => \PWM_8:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_8:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_8,
            busclk => ClockBlock_BUS_CLK);

    \PWM_6:PWMUDB:genblk1:ctrlreg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 0,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \PWM_6:PWMUDB:control_7\,
            control_6 => \PWM_6:PWMUDB:control_6\,
            control_5 => \PWM_6:PWMUDB:control_5\,
            control_4 => \PWM_6:PWMUDB:control_4\,
            control_3 => \PWM_6:PWMUDB:control_3\,
            control_2 => \PWM_6:PWMUDB:control_2\,
            control_1 => \PWM_6:PWMUDB:control_1\,
            control_0 => \PWM_6:PWMUDB:control_0\,
            clk_en => ADC_OUT_BUS_6,
            busclk => ClockBlock_BUS_CLK);

    \PWM_6:PWMUDB:genblk8:stsreg\:statusicell
        GENERIC MAP(
            cy_force_order => 1,
            cy_int_mask => "1111111",
            cy_md_select => "0100111",
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => \PWM_6:PWMUDB:status_3\,
            status_2 => \PWM_6:PWMUDB:status_2\,
            status_1 => open,
            status_0 => \PWM_6:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_6);

    \PWM_6:PWMUDB:sP8:pwmdp:u0\:datapathcell
        GENERIC MAP(
            a0_init => "00000000",
            a1_init => "00000000",
            ce0_sync => 1,
            ce1_sync => 1,
            cl0_sync => 1,
            cl1_sync => 1,
            cmsb_sync => 1,
            co_msb_sync => 1,
            cy_dpconfig => "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000",
            d0_init => "00000000",
            d1_init => "00000000",
            f0_blk_sync => 1,
            f0_bus_sync => 1,
            f1_blk_sync => 1,
            f1_bus_sync => 1,
            ff0_sync => 1,
            ff1_sync => 1,
            ov_msb_sync => 1,
            so_sync => 1,
            z0_sync => 1,
            z1_sync => 1,
            uses_p_in => '0',
            uses_p_out => '0',
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            clock => ADC_CLK,
            cs_addr_2 => \PWM_6:PWMUDB:tc_i\,
            cs_addr_1 => \PWM_6:PWMUDB:runmode_enable\,
            ce0_comb => \PWM_6:PWMUDB:cmp1_eq\,
            cl0_comb => \PWM_6:PWMUDB:cmp1_less\,
            z0_comb => \PWM_6:PWMUDB:tc_i\,
            f1_blk_stat_comb => \PWM_6:PWMUDB:status_3\,
            clk_en => ADC_OUT_BUS_6,
            busclk => ClockBlock_BUS_CLK);

    \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "00001111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 1,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => \ADC_1_OUT_MSB:control_7\,
            control_6 => \ADC_1_OUT_MSB:control_6\,
            control_5 => \ADC_1_OUT_MSB:control_5\,
            control_4 => \ADC_1_OUT_MSB:control_4\,
            control_3 => ADC_OUT_BUS_11,
            control_2 => ADC_OUT_BUS_10,
            control_1 => ADC_OUT_BUS_9,
            control_0 => ADC_OUT_BUS_8,
            busclk => ClockBlock_BUS_CLK);

    \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell
        GENERIC MAP(
            cy_ctrl_mode_0 => "11111111",
            cy_ctrl_mode_1 => "00000000",
            cy_ext_reset => 1,
            cy_force_order => 1,
            cy_init_value => "00000000",
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            clock => ADC_CLK,
            control_7 => ADC_OUT_BUS_7,
            control_6 => ADC_OUT_BUS_6,
            control_5 => ADC_OUT_BUS_5,
            control_4 => ADC_OUT_BUS_4,
            control_3 => ADC_OUT_BUS_3,
            control_2 => tmp__cy_tff_3_clk,
            control_1 => tmp__cy_tff_2_clk,
            control_0 => ADC_OUT_BUS_0,
            busclk => ClockBlock_BUS_CLK);

    \DAC_IN_MSB:sts:sts_reg\:statuscell
        GENERIC MAP(
            cy_force_order => 1,
            cy_md_select => "00000000",
            clken_mode => 1)
        PORT MAP(
            clock => open,
            status_7 => open,
            status_6 => open,
            status_5 => open,
            status_4 => open,
            status_3 => MUX_BUS_11,
            status_2 => MUX_BUS_10,
            status_1 => MUX_BUS_9,
            status_0 => MUX_BUS_8);

    \DAC_IN_LSB:sts:sts_reg\:statuscell
        GENERIC MAP(
            cy_force_order => 1,
            cy_md_select => "00000000",
            clken_mode => 1)
        PORT MAP(
            clock => open,
            status_7 => MUX_BUS_7,
            status_6 => MUX_BUS_6,
            status_5 => MUX_BUS_5,
            status_4 => MUX_BUS_4,
            status_3 => MUX_BUS_3,
            status_2 => MUX_BUS_2,
            status_1 => MUX_BUS_1,
            status_0 => MUX_BUS_0);

    Net_6027:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_3) + (!main_1 * !main_2 * !main_3) + (!main_1 * !main_3 * !main_5 * !main_6 * !main_7 * main_8 * !main_9 * !main_10) + (main_1 * !main_2 * main_3) + (main_1 * main_2 * !main_3) + (main_1 * !main_4) + (!main_3 * !main_4)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_6027,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => Net_6027,
            main_1 => \SPI_DAC:BSPIM:state_2\,
            main_2 => \SPI_DAC:BSPIM:state_1\,
            main_3 => \SPI_DAC:BSPIM:state_0\,
            main_4 => \SPI_DAC:BSPIM:mosi_from_dp\,
            main_5 => \SPI_DAC:BSPIM:count_4\,
            main_6 => \SPI_DAC:BSPIM:count_3\,
            main_7 => \SPI_DAC:BSPIM:count_2\,
            main_8 => \SPI_DAC:BSPIM:count_1\,
            main_9 => \SPI_DAC:BSPIM:count_0\,
            main_10 => \SPI_DAC:BSPIM:ld_ident\);

    \SPI_DAC:BSPIM:state_2\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2) + (!main_0 * main_1 * !main_2 * !main_3 * !main_4 * !main_5 * main_6 * !main_7 * !main_9) + (!main_0 * main_2 * !main_3 * !main_4 * main_5 * !main_6 * main_7 * !main_8)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:state_2\,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => \SPI_DAC:BSPIM:count_4\,
            main_4 => \SPI_DAC:BSPIM:count_3\,
            main_5 => \SPI_DAC:BSPIM:count_2\,
            main_6 => \SPI_DAC:BSPIM:count_1\,
            main_7 => \SPI_DAC:BSPIM:count_0\,
            main_8 => \SPI_DAC:BSPIM:tx_status_1\,
            main_9 => \SPI_DAC:BSPIM:ld_ident\);

    \SPI_DAC:BSPIM:state_1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2) + (!main_0 * main_2 * !main_3 * !main_4 * main_5 * !main_6 * main_7 * !main_8) + (main_0 * !main_2) + (main_1 * !main_2 * !main_3 * !main_4 * !main_5 * main_6 * !main_7 * !main_9)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:state_1\,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => \SPI_DAC:BSPIM:count_4\,
            main_4 => \SPI_DAC:BSPIM:count_3\,
            main_5 => \SPI_DAC:BSPIM:count_2\,
            main_6 => \SPI_DAC:BSPIM:count_1\,
            main_7 => \SPI_DAC:BSPIM:count_0\,
            main_8 => \SPI_DAC:BSPIM:tx_status_1\,
            main_9 => \SPI_DAC:BSPIM:ld_ident\);

    \SPI_DAC:BSPIM:state_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (main_0 * !main_1) + (!main_1 * !main_2 * !main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:state_0\,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => \SPI_DAC:BSPIM:tx_status_1\);

    Net_6025:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * main_2) + (!main_0 * main_1 * !main_3) + (main_0 * !main_1 * !main_2 * !main_3) + (main_1 * main_2 * !main_3)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_6025,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => Net_6025);

    \SPI_DAC:BSPIM:load_cond\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_3 * !main_4 * !main_5 * !main_6 * !main_7 * main_8) + (main_0 * !main_1 * !main_2 * !main_8) + (main_1 * !main_3 * !main_4 * !main_5 * !main_6 * !main_7 * main_8) + (main_2 * !main_3 * !main_4 * !main_5 * !main_6 * !main_7 * main_8)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:load_cond\,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => \SPI_DAC:BSPIM:count_4\,
            main_4 => \SPI_DAC:BSPIM:count_3\,
            main_5 => \SPI_DAC:BSPIM:count_2\,
            main_6 => \SPI_DAC:BSPIM:count_1\,
            main_7 => \SPI_DAC:BSPIM:count_0\,
            main_8 => \SPI_DAC:BSPIM:load_cond\);

    \SPI_DAC:BSPIM:ld_ident\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_8) + (main_0 * main_1 * !main_2 * main_8) + (main_1 * !main_2 * !main_3 * !main_4 * !main_5 * main_6 * !main_7 * main_8)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:ld_ident\,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => \SPI_DAC:BSPIM:count_4\,
            main_4 => \SPI_DAC:BSPIM:count_3\,
            main_5 => \SPI_DAC:BSPIM:count_2\,
            main_6 => \SPI_DAC:BSPIM:count_1\,
            main_7 => \SPI_DAC:BSPIM:count_0\,
            main_8 => \SPI_DAC:BSPIM:ld_ident\);

    \SPI_DAC:BSPIM:cnt_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1 * !main_2 * main_3) + (!main_0 * main_1 * main_2 * !main_3) + (main_0 * !main_1 * main_2 * main_3) + (main_0 * main_1 * !main_2 * main_3)",
            regmode => 2,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \SPI_DAC:BSPIM:cnt_enable\,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => \SPI_DAC:BSPIM:cnt_enable\);

    Net_6026:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1 * main_2) + (main_1 * main_2 * main_3)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => Net_6026,
            clock_0 => \SPI_DAC:Net_276\,
            main_0 => \SPI_DAC:BSPIM:state_2\,
            main_1 => \SPI_DAC:BSPIM:state_1\,
            main_2 => \SPI_DAC:BSPIM:state_0\,
            main_3 => Net_6026);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:ch_addr_5\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:ch_addr_4\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:ch_addr_3\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:ch_addr_2\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:ch_addr_1\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:ch_addr_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * !main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * !main_2 * main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * !main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1 * main_2 * main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * !main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * !main_2 * main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * !main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * !main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * !main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * !main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * !main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * main_4 * !main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * main_4 * !main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * main_4 * main_5 * !main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1 * main_2 * main_3 * main_4 * main_5 * main_6)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\,
            main_1 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\,
            main_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\,
            main_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\,
            main_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\,
            main_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\,
            main_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\);

    Net_12630:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 3)
        PORT MAP(
            q => Net_12630,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\,
            main_1 => \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\);

    \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_2) + (main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_mode => 1)
        PORT MAP(
            q => \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\,
            clock_0 => ClockBlock_BUS_CLK,
            main_0 => \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\,
            main_1 => \ADC_SAR_Seq:Net_3935\,
            main_2 => Net_12630);

    \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 3)
        PORT MAP(
            q => \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\,
            clock_0 => ADC_CLK,
            main_0 => \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\);

    \PWM_4:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_4:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_4,
            clock_0 => ADC_CLK,
            main_0 => \PWM_4:PWMUDB:control_7\);

    \PWM_4:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_4:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_4,
            clock_0 => ADC_CLK,
            main_0 => \PWM_4:PWMUDB:cmp1_eq\,
            main_1 => \PWM_4:PWMUDB:cmp1_less\);

    \PWM_4:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (!main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_4:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_4,
            clock_0 => ADC_CLK,
            main_0 => \PWM_4:PWMUDB:prevCompare1\,
            main_1 => \PWM_4:PWMUDB:cmp1_eq\,
            main_2 => \PWM_4:PWMUDB:cmp1_less\);

    ADC_DIV_Q_4:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1) + (main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_4,
            clk_en => ADC_OUT_BUS_4,
            clock_0 => ADC_CLK,
            main_0 => \PWM_4:PWMUDB:runmode_enable\,
            main_1 => \PWM_4:PWMUDB:cmp1_eq\,
            main_2 => \PWM_4:PWMUDB:cmp1_less\);

    \PWM_5:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_5:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_5,
            clock_0 => ADC_CLK,
            main_0 => \PWM_5:PWMUDB:control_7\);

    \PWM_5:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_5:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_5,
            clock_0 => ADC_CLK,
            main_0 => \PWM_5:PWMUDB:cmp1_eq\,
            main_1 => \PWM_5:PWMUDB:cmp1_less\);

    \PWM_5:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (!main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_5:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_5,
            clock_0 => ADC_CLK,
            main_0 => \PWM_5:PWMUDB:prevCompare1\,
            main_1 => \PWM_5:PWMUDB:cmp1_eq\,
            main_2 => \PWM_5:PWMUDB:cmp1_less\);

    ADC_DIV_Q_5:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1) + (main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_5,
            clk_en => ADC_OUT_BUS_5,
            clock_0 => ADC_CLK,
            main_0 => \PWM_5:PWMUDB:runmode_enable\,
            main_1 => \PWM_5:PWMUDB:cmp1_eq\,
            main_2 => \PWM_5:PWMUDB:cmp1_less\);

    ADC_DIV_Q_3:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 2,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_3,
            clk_en => ADC_OUT_BUS_3,
            clock_0 => ADC_CLK);

    cy_tff_3:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 2,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => cy_tff_3,
            clk_en => tmp__cy_tff_3_clk,
            clock_0 => ADC_CLK);

    cy_tff_2:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 2,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => cy_tff_2,
            clk_en => tmp__cy_tff_2_clk,
            clock_0 => ADC_CLK);

    ADC_DIV_Q_0:macrocell
        GENERIC MAP(
            eqn_main => "1'b0",
            regmode => 2,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_0,
            clk_en => ADC_OUT_BUS_0,
            clock_0 => ADC_CLK);

    \PWM_11:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_11:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_11,
            clock_0 => ADC_CLK,
            main_0 => \PWM_11:PWMUDB:control_7\);

    \PWM_11:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_11:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_11,
            clock_0 => ADC_CLK,
            main_0 => \PWM_11:PWMUDB:cmp1_eq\,
            main_1 => \PWM_11:PWMUDB:cmp1_less\);

    \PWM_11:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (!main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_11:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_11,
            clock_0 => ADC_CLK,
            main_0 => \PWM_11:PWMUDB:prevCompare1\,
            main_1 => \PWM_11:PWMUDB:cmp1_eq\,
            main_2 => \PWM_11:PWMUDB:cmp1_less\);

    ADC_DIV_Q_11:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1) + (main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_11,
            clk_en => ADC_OUT_BUS_11,
            clock_0 => ADC_CLK,
            main_0 => \PWM_11:PWMUDB:runmode_enable\,
            main_1 => \PWM_11:PWMUDB:cmp1_eq\,
            main_2 => \PWM_11:PWMUDB:cmp1_less\);

    \PWM_10:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_10:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_10,
            clock_0 => ADC_CLK,
            main_0 => \PWM_10:PWMUDB:control_7\);

    \PWM_10:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_10:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_10,
            clock_0 => ADC_CLK,
            main_0 => \PWM_10:PWMUDB:cmp1_eq\,
            main_1 => \PWM_10:PWMUDB:cmp1_less\);

    \PWM_10:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (!main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_10:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_10,
            clock_0 => ADC_CLK,
            main_0 => \PWM_10:PWMUDB:prevCompare1\,
            main_1 => \PWM_10:PWMUDB:cmp1_eq\,
            main_2 => \PWM_10:PWMUDB:cmp1_less\);

    ADC_DIV_Q_10:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1) + (main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_10,
            clk_en => ADC_OUT_BUS_10,
            clock_0 => ADC_CLK,
            main_0 => \PWM_10:PWMUDB:runmode_enable\,
            main_1 => \PWM_10:PWMUDB:cmp1_eq\,
            main_2 => \PWM_10:PWMUDB:cmp1_less\);

    \PWM_7:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_7:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_7,
            clock_0 => ADC_CLK,
            main_0 => \PWM_7:PWMUDB:control_7\);

    \PWM_7:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_7:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_7,
            clock_0 => ADC_CLK,
            main_0 => \PWM_7:PWMUDB:cmp1_eq\,
            main_1 => \PWM_7:PWMUDB:cmp1_less\);

    \PWM_7:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (!main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_7:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_7,
            clock_0 => ADC_CLK,
            main_0 => \PWM_7:PWMUDB:prevCompare1\,
            main_1 => \PWM_7:PWMUDB:cmp1_eq\,
            main_2 => \PWM_7:PWMUDB:cmp1_less\);

    ADC_DIV_Q_7:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1) + (main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_7,
            clk_en => ADC_OUT_BUS_7,
            clock_0 => ADC_CLK,
            main_0 => \PWM_7:PWMUDB:runmode_enable\,
            main_1 => \PWM_7:PWMUDB:cmp1_eq\,
            main_2 => \PWM_7:PWMUDB:cmp1_less\);

    \PWM_9:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_9:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_9,
            clock_0 => ADC_CLK,
            main_0 => \PWM_9:PWMUDB:control_7\);

    \PWM_9:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_9:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_9,
            clock_0 => ADC_CLK,
            main_0 => \PWM_9:PWMUDB:cmp1_less\);

    \PWM_9:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_9:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_9,
            clock_0 => ADC_CLK,
            main_0 => \PWM_9:PWMUDB:prevCompare1\,
            main_1 => \PWM_9:PWMUDB:cmp1_less\);

    ADC_DIV_Q_9:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_9,
            clk_en => ADC_OUT_BUS_9,
            clock_0 => ADC_CLK,
            main_0 => \PWM_9:PWMUDB:runmode_enable\,
            main_1 => \PWM_9:PWMUDB:cmp1_less\);

    \PWM_8:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_8:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_8,
            clock_0 => ADC_CLK,
            main_0 => \PWM_8:PWMUDB:control_7\);

    Dedicated_Output_1:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => Dedicated_Output_1__PA,
            in_clock => open,
            in_clock_en => open,
            in_reset => open,
            out_clock => open,
            out_clock_en => open,
            out_reset => open);

    \PWM_8:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_8:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_8,
            clock_0 => ADC_CLK,
            main_0 => \PWM_8:PWMUDB:cmp1_less\);

    \PWM_8:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_8:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_8,
            clock_0 => ADC_CLK,
            main_0 => \PWM_8:PWMUDB:prevCompare1\,
            main_1 => \PWM_8:PWMUDB:cmp1_less\);

    ADC_DIV_Q_8:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_8,
            clk_en => ADC_OUT_BUS_8,
            clock_0 => ADC_CLK,
            main_0 => \PWM_8:PWMUDB:runmode_enable\,
            main_1 => \PWM_8:PWMUDB:cmp1_less\);

    \PWM_6:PWMUDB:runmode_enable\:macrocell
        GENERIC MAP(
            eqn_main => "(main_0)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_6:PWMUDB:runmode_enable\,
            clk_en => ADC_OUT_BUS_6,
            clock_0 => ADC_CLK,
            main_0 => \PWM_6:PWMUDB:control_7\);

    Dedicated_Output:iocell
        GENERIC MAP(
            in_sync_mode => 0,
            out_sync_mode => 0,
            oe_sync_mode => 0,
            io_capabilities => "0000000000000000000000000000000000000000000000000000000000000010")
        PORT MAP(
            pa_out => Dedicated_Output__PA,
            in_clock => open,
            in_clock_en => open,
            in_reset => open,
            out_clock => open,
            out_clock_en => open,
            out_reset => open);

    \PWM_6:PWMUDB:prevCompare1\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * !main_1)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_6:PWMUDB:prevCompare1\,
            clk_en => ADC_OUT_BUS_6,
            clock_0 => ADC_CLK,
            main_0 => \PWM_6:PWMUDB:cmp1_eq\,
            main_1 => \PWM_6:PWMUDB:cmp1_less\);

    \PWM_6:PWMUDB:status_0\:macrocell
        GENERIC MAP(
            eqn_main => "(!main_0 * main_1) + (!main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => \PWM_6:PWMUDB:status_0\,
            clk_en => ADC_OUT_BUS_6,
            clock_0 => ADC_CLK,
            main_0 => \PWM_6:PWMUDB:prevCompare1\,
            main_1 => \PWM_6:PWMUDB:cmp1_eq\,
            main_2 => \PWM_6:PWMUDB:cmp1_less\);

    ADC_DIV_Q_6:macrocell
        GENERIC MAP(
            eqn_main => "(main_0 * main_1) + (main_0 * main_2)",
            regmode => 1,
            clk_inv => '0',
            clken_inv => '0',
            clken_mode => 2)
        PORT MAP(
            q => ADC_DIV_Q_6,
            clk_en => ADC_OUT_BUS_6,
            clock_0 => ADC_CLK,
            main_0 => \PWM_6:PWMUDB:runmode_enable\,
            main_1 => \PWM_6:PWMUDB:cmp1_eq\,
            main_2 => \PWM_6:PWMUDB:cmp1_less\);

END __DEFAULT__;
