Loading plugins phase: Elapsed time ==> 0s.282ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -d CY8C5868AXI-LP035 -s C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_0 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_0\PSoC5\ADC_SAR_SEQ_v2_0.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.685ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.132ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  ADC_DAC.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 ADC_DAC.v -verilog
======================================================================

======================================================================
Compiling:  ADC_DAC.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 ADC_DAC.v -verilog
======================================================================

======================================================================
Compiling:  ADC_DAC.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 -verilog ADC_DAC.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Sat Apr 15 13:41:09 2017


======================================================================
Compiling:  ADC_DAC.v
Program  :   vpp
Options  :    -yv2 -q10 ADC_DAC.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Sat Apr 15 13:41:09 2017

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_SPI_Master_v2_50\B_SPI_Master_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_tff_v1_0\cy_tff_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'ADC_DAC.ctl'.
ADC_DAC.v (line 1124, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 947, col 46):  Note: Substituting module 'sub_vi_vv' for '-'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v (line 977, col 46):  Note: Substituting module 'add_vi_vv' for '+'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  ADC_DAC.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 -verilog ADC_DAC.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Sat Apr 15 13:41:09 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\codegentemp\ADC_DAC.ctl'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\codegentemp\ADC_DAC.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_SPI_Master_v2_50\B_SPI_Master_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_tff_v1_0\cy_tff_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  ADC_DAC.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -dcpsoc3 -verilog ADC_DAC.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Sat Apr 15 13:41:12 2017

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\codegentemp\ADC_DAC.ctl'.
Linking 'C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\codegentemp\ADC_DAC.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_60\cy_vref_v1_60.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_SPI_Master_v2_50\B_SPI_Master_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\mux_v1_10\mux_v1_10.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cycomponentlibrary\CyComponentLibrary.cylib\B_PWM_v3_30\B_PWM_v3_30.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\cy_tff_v1_0\cy_tff_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\psoc\content\cyprimitives\CyPrimitives.cylib\CyStatusReg_v1_90\CyStatusReg_v1_90.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\ADC_SAR_1:Net_221\
	\ADC_SAR_1:Net_381\
	\SPI_DAC:BSPIM:mosi_after_ld\
	\SPI_DAC:BSPIM:so_send\
	\SPI_DAC:BSPIM:mosi_fin\
	\SPI_DAC:BSPIM:mosi_cpha_0\
	\SPI_DAC:BSPIM:mosi_cpha_1\
	\SPI_DAC:BSPIM:pre_mosi\
	\SPI_DAC:BSPIM:dpcounter_zero\
	\SPI_DAC:BSPIM:control_7\
	\SPI_DAC:BSPIM:control_6\
	\SPI_DAC:BSPIM:control_5\
	\SPI_DAC:BSPIM:control_4\
	\SPI_DAC:BSPIM:control_3\
	\SPI_DAC:BSPIM:control_2\
	\SPI_DAC:BSPIM:control_1\
	\SPI_DAC:BSPIM:control_0\
	\SPI_DAC:Net_294\
	Net_6023
	\ADC_SAR_Seq:SAR:Net_221\
	\ADC_SAR_Seq:SAR:Net_381\
	\ADC_SAR_Seq:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq:soc_out\
	\ADC_SAR_Seq:Net_3905\
	\ADC_SAR_Seq:Net_3867\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq:MODULE_1:lt\
	\ADC_SAR_Seq:MODULE_1:gt\
	\ADC_SAR_Seq:MODULE_1:gte\
	\ADC_SAR_Seq:MODULE_1:lte\
	\ADC_SAR_Seq:MODULE_1:neq\
	Net_21783
	Net_21780
	\PWM_ADC_CK:Net_114\
	\DIV_MASK_MSB:control_bus_7\
	\DIV_MASK_MSB:control_bus_6\
	\DIV_MASK_MSB:control_bus_5\
	\DIV_MASK_MSB:control_bus_4\
	\PWM_4:PWMUDB:km_run\
	\PWM_4:PWMUDB:ctrl_cmpmode2_2\
	\PWM_4:PWMUDB:ctrl_cmpmode2_1\
	\PWM_4:PWMUDB:ctrl_cmpmode2_0\
	\PWM_4:PWMUDB:ctrl_cmpmode1_2\
	\PWM_4:PWMUDB:ctrl_cmpmode1_1\
	\PWM_4:PWMUDB:ctrl_cmpmode1_0\
	\PWM_4:PWMUDB:capt_rising\
	\PWM_4:PWMUDB:capt_falling\
	\PWM_4:PWMUDB:trig_rise\
	\PWM_4:PWMUDB:trig_fall\
	\PWM_4:PWMUDB:sc_kill\
	\PWM_4:PWMUDB:min_kill\
	\PWM_4:PWMUDB:km_tc\
	\PWM_4:PWMUDB:db_tc\
	\PWM_4:PWMUDB:dith_sel\
	\PWM_4:PWMUDB:compare2\
	\PWM_4:Net_101\
	Net_28892
	Net_28893
	\PWM_4:PWMUDB:MODULE_2:b_31\
	\PWM_4:PWMUDB:MODULE_2:b_30\
	\PWM_4:PWMUDB:MODULE_2:b_29\
	\PWM_4:PWMUDB:MODULE_2:b_28\
	\PWM_4:PWMUDB:MODULE_2:b_27\
	\PWM_4:PWMUDB:MODULE_2:b_26\
	\PWM_4:PWMUDB:MODULE_2:b_25\
	\PWM_4:PWMUDB:MODULE_2:b_24\
	\PWM_4:PWMUDB:MODULE_2:b_23\
	\PWM_4:PWMUDB:MODULE_2:b_22\
	\PWM_4:PWMUDB:MODULE_2:b_21\
	\PWM_4:PWMUDB:MODULE_2:b_20\
	\PWM_4:PWMUDB:MODULE_2:b_19\
	\PWM_4:PWMUDB:MODULE_2:b_18\
	\PWM_4:PWMUDB:MODULE_2:b_17\
	\PWM_4:PWMUDB:MODULE_2:b_16\
	\PWM_4:PWMUDB:MODULE_2:b_15\
	\PWM_4:PWMUDB:MODULE_2:b_14\
	\PWM_4:PWMUDB:MODULE_2:b_13\
	\PWM_4:PWMUDB:MODULE_2:b_12\
	\PWM_4:PWMUDB:MODULE_2:b_11\
	\PWM_4:PWMUDB:MODULE_2:b_10\
	\PWM_4:PWMUDB:MODULE_2:b_9\
	\PWM_4:PWMUDB:MODULE_2:b_8\
	\PWM_4:PWMUDB:MODULE_2:b_7\
	\PWM_4:PWMUDB:MODULE_2:b_6\
	\PWM_4:PWMUDB:MODULE_2:b_5\
	\PWM_4:PWMUDB:MODULE_2:b_4\
	\PWM_4:PWMUDB:MODULE_2:b_3\
	\PWM_4:PWMUDB:MODULE_2:b_2\
	\PWM_4:PWMUDB:MODULE_2:b_1\
	\PWM_4:PWMUDB:MODULE_2:b_0\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_31\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_30\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_29\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_28\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_27\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_26\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_25\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:a_24\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_31\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_30\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_29\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_28\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_27\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_26\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_25\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_24\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_23\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_22\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_21\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_20\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_19\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_18\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_17\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_16\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_15\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_14\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_13\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_12\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_11\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_10\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_9\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_8\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_7\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_6\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_5\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_4\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_3\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_2\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_1\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:b_0\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_31\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_30\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_29\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_28\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_27\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_26\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_25\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_24\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_23\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_22\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_21\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_20\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_19\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_18\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_17\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_16\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_15\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_14\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_13\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_12\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_11\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_10\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_9\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_8\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_7\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_6\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_5\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_4\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_3\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:s_2\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28894
	Net_28891
	\PWM_4:Net_113\
	\PWM_4:Net_107\
	\PWM_4:Net_114\
	\PWM_5:PWMUDB:km_run\
	\PWM_5:PWMUDB:ctrl_cmpmode2_2\
	\PWM_5:PWMUDB:ctrl_cmpmode2_1\
	\PWM_5:PWMUDB:ctrl_cmpmode2_0\
	\PWM_5:PWMUDB:ctrl_cmpmode1_2\
	\PWM_5:PWMUDB:ctrl_cmpmode1_1\
	\PWM_5:PWMUDB:ctrl_cmpmode1_0\
	\PWM_5:PWMUDB:capt_rising\
	\PWM_5:PWMUDB:capt_falling\
	\PWM_5:PWMUDB:trig_rise\
	\PWM_5:PWMUDB:trig_fall\
	\PWM_5:PWMUDB:sc_kill\
	\PWM_5:PWMUDB:min_kill\
	\PWM_5:PWMUDB:km_tc\
	\PWM_5:PWMUDB:db_tc\
	\PWM_5:PWMUDB:dith_sel\
	\PWM_5:PWMUDB:compare2\
	\PWM_5:Net_101\
	Net_28903
	Net_28904
	\PWM_5:PWMUDB:MODULE_3:b_31\
	\PWM_5:PWMUDB:MODULE_3:b_30\
	\PWM_5:PWMUDB:MODULE_3:b_29\
	\PWM_5:PWMUDB:MODULE_3:b_28\
	\PWM_5:PWMUDB:MODULE_3:b_27\
	\PWM_5:PWMUDB:MODULE_3:b_26\
	\PWM_5:PWMUDB:MODULE_3:b_25\
	\PWM_5:PWMUDB:MODULE_3:b_24\
	\PWM_5:PWMUDB:MODULE_3:b_23\
	\PWM_5:PWMUDB:MODULE_3:b_22\
	\PWM_5:PWMUDB:MODULE_3:b_21\
	\PWM_5:PWMUDB:MODULE_3:b_20\
	\PWM_5:PWMUDB:MODULE_3:b_19\
	\PWM_5:PWMUDB:MODULE_3:b_18\
	\PWM_5:PWMUDB:MODULE_3:b_17\
	\PWM_5:PWMUDB:MODULE_3:b_16\
	\PWM_5:PWMUDB:MODULE_3:b_15\
	\PWM_5:PWMUDB:MODULE_3:b_14\
	\PWM_5:PWMUDB:MODULE_3:b_13\
	\PWM_5:PWMUDB:MODULE_3:b_12\
	\PWM_5:PWMUDB:MODULE_3:b_11\
	\PWM_5:PWMUDB:MODULE_3:b_10\
	\PWM_5:PWMUDB:MODULE_3:b_9\
	\PWM_5:PWMUDB:MODULE_3:b_8\
	\PWM_5:PWMUDB:MODULE_3:b_7\
	\PWM_5:PWMUDB:MODULE_3:b_6\
	\PWM_5:PWMUDB:MODULE_3:b_5\
	\PWM_5:PWMUDB:MODULE_3:b_4\
	\PWM_5:PWMUDB:MODULE_3:b_3\
	\PWM_5:PWMUDB:MODULE_3:b_2\
	\PWM_5:PWMUDB:MODULE_3:b_1\
	\PWM_5:PWMUDB:MODULE_3:b_0\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_31\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_30\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_29\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_28\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_27\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_26\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_25\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:a_24\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_31\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_30\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_29\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_28\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_27\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_26\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_25\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_24\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_23\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_22\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_21\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_20\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_19\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_18\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_17\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_16\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_15\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_14\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_13\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_12\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_11\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_10\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_9\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_8\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_7\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_6\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_5\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_4\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_3\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_2\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_1\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:b_0\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_31\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_30\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_29\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_28\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_27\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_26\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_25\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_24\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_23\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_22\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_21\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_20\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_19\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_18\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_17\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_16\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_15\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_14\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_13\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_12\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_11\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_10\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_9\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_8\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_7\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_6\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_5\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_4\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_3\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:s_2\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28905
	Net_28902
	\PWM_5:Net_113\
	\PWM_5:Net_107\
	\PWM_5:Net_114\
	\PWM_11:PWMUDB:km_run\
	\PWM_11:PWMUDB:ctrl_cmpmode2_2\
	\PWM_11:PWMUDB:ctrl_cmpmode2_1\
	\PWM_11:PWMUDB:ctrl_cmpmode2_0\
	\PWM_11:PWMUDB:ctrl_cmpmode1_2\
	\PWM_11:PWMUDB:ctrl_cmpmode1_1\
	\PWM_11:PWMUDB:ctrl_cmpmode1_0\
	\PWM_11:PWMUDB:capt_rising\
	\PWM_11:PWMUDB:capt_falling\
	\PWM_11:PWMUDB:trig_rise\
	\PWM_11:PWMUDB:trig_fall\
	\PWM_11:PWMUDB:sc_kill\
	\PWM_11:PWMUDB:min_kill\
	\PWM_11:PWMUDB:km_tc\
	\PWM_11:PWMUDB:db_tc\
	\PWM_11:PWMUDB:dith_sel\
	\PWM_11:PWMUDB:compare2\
	\PWM_11:Net_101\
	Net_28914
	Net_28915
	\PWM_11:PWMUDB:MODULE_4:b_31\
	\PWM_11:PWMUDB:MODULE_4:b_30\
	\PWM_11:PWMUDB:MODULE_4:b_29\
	\PWM_11:PWMUDB:MODULE_4:b_28\
	\PWM_11:PWMUDB:MODULE_4:b_27\
	\PWM_11:PWMUDB:MODULE_4:b_26\
	\PWM_11:PWMUDB:MODULE_4:b_25\
	\PWM_11:PWMUDB:MODULE_4:b_24\
	\PWM_11:PWMUDB:MODULE_4:b_23\
	\PWM_11:PWMUDB:MODULE_4:b_22\
	\PWM_11:PWMUDB:MODULE_4:b_21\
	\PWM_11:PWMUDB:MODULE_4:b_20\
	\PWM_11:PWMUDB:MODULE_4:b_19\
	\PWM_11:PWMUDB:MODULE_4:b_18\
	\PWM_11:PWMUDB:MODULE_4:b_17\
	\PWM_11:PWMUDB:MODULE_4:b_16\
	\PWM_11:PWMUDB:MODULE_4:b_15\
	\PWM_11:PWMUDB:MODULE_4:b_14\
	\PWM_11:PWMUDB:MODULE_4:b_13\
	\PWM_11:PWMUDB:MODULE_4:b_12\
	\PWM_11:PWMUDB:MODULE_4:b_11\
	\PWM_11:PWMUDB:MODULE_4:b_10\
	\PWM_11:PWMUDB:MODULE_4:b_9\
	\PWM_11:PWMUDB:MODULE_4:b_8\
	\PWM_11:PWMUDB:MODULE_4:b_7\
	\PWM_11:PWMUDB:MODULE_4:b_6\
	\PWM_11:PWMUDB:MODULE_4:b_5\
	\PWM_11:PWMUDB:MODULE_4:b_4\
	\PWM_11:PWMUDB:MODULE_4:b_3\
	\PWM_11:PWMUDB:MODULE_4:b_2\
	\PWM_11:PWMUDB:MODULE_4:b_1\
	\PWM_11:PWMUDB:MODULE_4:b_0\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_31\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_30\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_29\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_28\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_27\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_26\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_25\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:a_24\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_31\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_30\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_29\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_28\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_27\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_26\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_25\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_24\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_23\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_22\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_21\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_20\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_19\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_18\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_17\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_16\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_15\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_14\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_13\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_12\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_11\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_10\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_9\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_8\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_7\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_6\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_5\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_4\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_3\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_2\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_1\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:b_0\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_31\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_30\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_29\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_28\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_27\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_26\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_25\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_24\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_23\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_22\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_21\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_20\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_19\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_18\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_17\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_16\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_15\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_14\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_13\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_12\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_11\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_10\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_9\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_8\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_7\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_6\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_5\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_4\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_3\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:s_2\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28916
	Net_28913
	\PWM_11:Net_113\
	\PWM_11:Net_107\
	\PWM_11:Net_114\
	\PWM_10:PWMUDB:km_run\
	\PWM_10:PWMUDB:ctrl_cmpmode2_2\
	\PWM_10:PWMUDB:ctrl_cmpmode2_1\
	\PWM_10:PWMUDB:ctrl_cmpmode2_0\
	\PWM_10:PWMUDB:ctrl_cmpmode1_2\
	\PWM_10:PWMUDB:ctrl_cmpmode1_1\
	\PWM_10:PWMUDB:ctrl_cmpmode1_0\
	\PWM_10:PWMUDB:capt_rising\
	\PWM_10:PWMUDB:capt_falling\
	\PWM_10:PWMUDB:trig_rise\
	\PWM_10:PWMUDB:trig_fall\
	\PWM_10:PWMUDB:sc_kill\
	\PWM_10:PWMUDB:min_kill\
	\PWM_10:PWMUDB:km_tc\
	\PWM_10:PWMUDB:db_tc\
	\PWM_10:PWMUDB:dith_sel\
	\PWM_10:PWMUDB:compare2\
	\PWM_10:Net_101\
	Net_28925
	Net_28926
	\PWM_10:PWMUDB:MODULE_5:b_31\
	\PWM_10:PWMUDB:MODULE_5:b_30\
	\PWM_10:PWMUDB:MODULE_5:b_29\
	\PWM_10:PWMUDB:MODULE_5:b_28\
	\PWM_10:PWMUDB:MODULE_5:b_27\
	\PWM_10:PWMUDB:MODULE_5:b_26\
	\PWM_10:PWMUDB:MODULE_5:b_25\
	\PWM_10:PWMUDB:MODULE_5:b_24\
	\PWM_10:PWMUDB:MODULE_5:b_23\
	\PWM_10:PWMUDB:MODULE_5:b_22\
	\PWM_10:PWMUDB:MODULE_5:b_21\
	\PWM_10:PWMUDB:MODULE_5:b_20\
	\PWM_10:PWMUDB:MODULE_5:b_19\
	\PWM_10:PWMUDB:MODULE_5:b_18\
	\PWM_10:PWMUDB:MODULE_5:b_17\
	\PWM_10:PWMUDB:MODULE_5:b_16\
	\PWM_10:PWMUDB:MODULE_5:b_15\
	\PWM_10:PWMUDB:MODULE_5:b_14\
	\PWM_10:PWMUDB:MODULE_5:b_13\
	\PWM_10:PWMUDB:MODULE_5:b_12\
	\PWM_10:PWMUDB:MODULE_5:b_11\
	\PWM_10:PWMUDB:MODULE_5:b_10\
	\PWM_10:PWMUDB:MODULE_5:b_9\
	\PWM_10:PWMUDB:MODULE_5:b_8\
	\PWM_10:PWMUDB:MODULE_5:b_7\
	\PWM_10:PWMUDB:MODULE_5:b_6\
	\PWM_10:PWMUDB:MODULE_5:b_5\
	\PWM_10:PWMUDB:MODULE_5:b_4\
	\PWM_10:PWMUDB:MODULE_5:b_3\
	\PWM_10:PWMUDB:MODULE_5:b_2\
	\PWM_10:PWMUDB:MODULE_5:b_1\
	\PWM_10:PWMUDB:MODULE_5:b_0\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_31\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_30\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_29\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_28\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_27\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_26\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_25\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:a_24\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_31\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_30\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_29\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_28\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_27\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_26\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_25\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_24\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_23\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_22\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_21\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_20\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_19\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_18\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_17\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_16\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_15\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_14\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_13\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_12\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_11\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_10\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_9\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_8\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_7\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_6\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_5\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_4\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_3\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_2\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_1\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:b_0\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_31\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_30\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_29\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_28\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_27\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_26\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_25\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_24\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_23\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_22\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_21\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_20\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_19\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_18\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_17\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_16\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_15\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_14\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_13\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_12\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_11\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_10\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_9\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_8\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_7\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_6\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_5\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_4\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_3\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:s_2\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28927
	Net_28924
	\PWM_10:Net_113\
	\PWM_10:Net_107\
	\PWM_10:Net_114\
	\PWM_7:PWMUDB:km_run\
	\PWM_7:PWMUDB:ctrl_cmpmode2_2\
	\PWM_7:PWMUDB:ctrl_cmpmode2_1\
	\PWM_7:PWMUDB:ctrl_cmpmode2_0\
	\PWM_7:PWMUDB:ctrl_cmpmode1_2\
	\PWM_7:PWMUDB:ctrl_cmpmode1_1\
	\PWM_7:PWMUDB:ctrl_cmpmode1_0\
	\PWM_7:PWMUDB:capt_rising\
	\PWM_7:PWMUDB:capt_falling\
	\PWM_7:PWMUDB:trig_rise\
	\PWM_7:PWMUDB:trig_fall\
	\PWM_7:PWMUDB:sc_kill\
	\PWM_7:PWMUDB:min_kill\
	\PWM_7:PWMUDB:km_tc\
	\PWM_7:PWMUDB:db_tc\
	\PWM_7:PWMUDB:dith_sel\
	\PWM_7:PWMUDB:compare2\
	\PWM_7:Net_101\
	Net_28936
	Net_28937
	\PWM_7:PWMUDB:MODULE_6:b_31\
	\PWM_7:PWMUDB:MODULE_6:b_30\
	\PWM_7:PWMUDB:MODULE_6:b_29\
	\PWM_7:PWMUDB:MODULE_6:b_28\
	\PWM_7:PWMUDB:MODULE_6:b_27\
	\PWM_7:PWMUDB:MODULE_6:b_26\
	\PWM_7:PWMUDB:MODULE_6:b_25\
	\PWM_7:PWMUDB:MODULE_6:b_24\
	\PWM_7:PWMUDB:MODULE_6:b_23\
	\PWM_7:PWMUDB:MODULE_6:b_22\
	\PWM_7:PWMUDB:MODULE_6:b_21\
	\PWM_7:PWMUDB:MODULE_6:b_20\
	\PWM_7:PWMUDB:MODULE_6:b_19\
	\PWM_7:PWMUDB:MODULE_6:b_18\
	\PWM_7:PWMUDB:MODULE_6:b_17\
	\PWM_7:PWMUDB:MODULE_6:b_16\
	\PWM_7:PWMUDB:MODULE_6:b_15\
	\PWM_7:PWMUDB:MODULE_6:b_14\
	\PWM_7:PWMUDB:MODULE_6:b_13\
	\PWM_7:PWMUDB:MODULE_6:b_12\
	\PWM_7:PWMUDB:MODULE_6:b_11\
	\PWM_7:PWMUDB:MODULE_6:b_10\
	\PWM_7:PWMUDB:MODULE_6:b_9\
	\PWM_7:PWMUDB:MODULE_6:b_8\
	\PWM_7:PWMUDB:MODULE_6:b_7\
	\PWM_7:PWMUDB:MODULE_6:b_6\
	\PWM_7:PWMUDB:MODULE_6:b_5\
	\PWM_7:PWMUDB:MODULE_6:b_4\
	\PWM_7:PWMUDB:MODULE_6:b_3\
	\PWM_7:PWMUDB:MODULE_6:b_2\
	\PWM_7:PWMUDB:MODULE_6:b_1\
	\PWM_7:PWMUDB:MODULE_6:b_0\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_31\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_30\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_29\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_28\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_27\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_26\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_25\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:a_24\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_31\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_30\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_29\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_28\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_27\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_26\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_25\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_24\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_23\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_22\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_21\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_20\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_19\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_18\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_17\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_16\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_15\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_14\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_13\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_12\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_11\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_10\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_9\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_8\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_7\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_6\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_5\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_4\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_3\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_2\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_1\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:b_0\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_31\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_30\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_29\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_28\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_27\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_26\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_25\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_24\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_23\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_22\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_21\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_20\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_19\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_18\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_17\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_16\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_15\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_14\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_13\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_12\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_11\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_10\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_9\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_8\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_7\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_6\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_5\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_4\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_3\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:s_2\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28938
	Net_28935
	\PWM_7:Net_113\
	\PWM_7:Net_107\
	\PWM_7:Net_114\
	\PWM_9:PWMUDB:km_run\
	\PWM_9:PWMUDB:ctrl_cmpmode2_2\
	\PWM_9:PWMUDB:ctrl_cmpmode2_1\
	\PWM_9:PWMUDB:ctrl_cmpmode2_0\
	\PWM_9:PWMUDB:ctrl_cmpmode1_2\
	\PWM_9:PWMUDB:ctrl_cmpmode1_1\
	\PWM_9:PWMUDB:ctrl_cmpmode1_0\
	\PWM_9:PWMUDB:capt_rising\
	\PWM_9:PWMUDB:capt_falling\
	\PWM_9:PWMUDB:trig_rise\
	\PWM_9:PWMUDB:trig_fall\
	\PWM_9:PWMUDB:sc_kill\
	\PWM_9:PWMUDB:min_kill\
	\PWM_9:PWMUDB:km_tc\
	\PWM_9:PWMUDB:db_tc\
	\PWM_9:PWMUDB:dith_sel\
	\PWM_9:PWMUDB:compare2\
	\PWM_9:Net_101\
	Net_28947
	Net_28948
	\PWM_9:PWMUDB:MODULE_7:b_31\
	\PWM_9:PWMUDB:MODULE_7:b_30\
	\PWM_9:PWMUDB:MODULE_7:b_29\
	\PWM_9:PWMUDB:MODULE_7:b_28\
	\PWM_9:PWMUDB:MODULE_7:b_27\
	\PWM_9:PWMUDB:MODULE_7:b_26\
	\PWM_9:PWMUDB:MODULE_7:b_25\
	\PWM_9:PWMUDB:MODULE_7:b_24\
	\PWM_9:PWMUDB:MODULE_7:b_23\
	\PWM_9:PWMUDB:MODULE_7:b_22\
	\PWM_9:PWMUDB:MODULE_7:b_21\
	\PWM_9:PWMUDB:MODULE_7:b_20\
	\PWM_9:PWMUDB:MODULE_7:b_19\
	\PWM_9:PWMUDB:MODULE_7:b_18\
	\PWM_9:PWMUDB:MODULE_7:b_17\
	\PWM_9:PWMUDB:MODULE_7:b_16\
	\PWM_9:PWMUDB:MODULE_7:b_15\
	\PWM_9:PWMUDB:MODULE_7:b_14\
	\PWM_9:PWMUDB:MODULE_7:b_13\
	\PWM_9:PWMUDB:MODULE_7:b_12\
	\PWM_9:PWMUDB:MODULE_7:b_11\
	\PWM_9:PWMUDB:MODULE_7:b_10\
	\PWM_9:PWMUDB:MODULE_7:b_9\
	\PWM_9:PWMUDB:MODULE_7:b_8\
	\PWM_9:PWMUDB:MODULE_7:b_7\
	\PWM_9:PWMUDB:MODULE_7:b_6\
	\PWM_9:PWMUDB:MODULE_7:b_5\
	\PWM_9:PWMUDB:MODULE_7:b_4\
	\PWM_9:PWMUDB:MODULE_7:b_3\
	\PWM_9:PWMUDB:MODULE_7:b_2\
	\PWM_9:PWMUDB:MODULE_7:b_1\
	\PWM_9:PWMUDB:MODULE_7:b_0\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_31\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_30\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_29\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_28\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_27\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_26\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_25\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:a_24\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_31\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_30\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_29\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_28\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_27\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_26\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_25\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_24\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_23\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_22\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_21\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_20\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_19\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_18\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_17\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_16\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_15\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_14\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_13\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_12\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_11\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_10\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_9\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_8\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_7\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_6\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_5\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_4\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_3\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_2\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_1\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:b_0\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_31\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_30\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_29\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_28\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_27\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_26\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_25\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_24\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_23\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_22\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_21\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_20\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_19\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_18\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_17\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_16\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_15\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_14\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_13\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_12\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_11\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_10\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_9\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_8\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_7\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_6\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_5\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_4\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_3\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:s_2\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28949
	Net_28946
	\PWM_9:Net_113\
	\PWM_9:Net_107\
	\PWM_9:Net_114\
	\PWM_8:PWMUDB:km_run\
	\PWM_8:PWMUDB:ctrl_cmpmode2_2\
	\PWM_8:PWMUDB:ctrl_cmpmode2_1\
	\PWM_8:PWMUDB:ctrl_cmpmode2_0\
	\PWM_8:PWMUDB:ctrl_cmpmode1_2\
	\PWM_8:PWMUDB:ctrl_cmpmode1_1\
	\PWM_8:PWMUDB:ctrl_cmpmode1_0\
	\PWM_8:PWMUDB:capt_rising\
	\PWM_8:PWMUDB:capt_falling\
	\PWM_8:PWMUDB:trig_rise\
	\PWM_8:PWMUDB:trig_fall\
	\PWM_8:PWMUDB:sc_kill\
	\PWM_8:PWMUDB:min_kill\
	\PWM_8:PWMUDB:km_tc\
	\PWM_8:PWMUDB:db_tc\
	\PWM_8:PWMUDB:dith_sel\
	\PWM_8:PWMUDB:compare2\
	\PWM_8:Net_101\
	Net_28958
	Net_28959
	\PWM_8:PWMUDB:MODULE_8:b_31\
	\PWM_8:PWMUDB:MODULE_8:b_30\
	\PWM_8:PWMUDB:MODULE_8:b_29\
	\PWM_8:PWMUDB:MODULE_8:b_28\
	\PWM_8:PWMUDB:MODULE_8:b_27\
	\PWM_8:PWMUDB:MODULE_8:b_26\
	\PWM_8:PWMUDB:MODULE_8:b_25\
	\PWM_8:PWMUDB:MODULE_8:b_24\
	\PWM_8:PWMUDB:MODULE_8:b_23\
	\PWM_8:PWMUDB:MODULE_8:b_22\
	\PWM_8:PWMUDB:MODULE_8:b_21\
	\PWM_8:PWMUDB:MODULE_8:b_20\
	\PWM_8:PWMUDB:MODULE_8:b_19\
	\PWM_8:PWMUDB:MODULE_8:b_18\
	\PWM_8:PWMUDB:MODULE_8:b_17\
	\PWM_8:PWMUDB:MODULE_8:b_16\
	\PWM_8:PWMUDB:MODULE_8:b_15\
	\PWM_8:PWMUDB:MODULE_8:b_14\
	\PWM_8:PWMUDB:MODULE_8:b_13\
	\PWM_8:PWMUDB:MODULE_8:b_12\
	\PWM_8:PWMUDB:MODULE_8:b_11\
	\PWM_8:PWMUDB:MODULE_8:b_10\
	\PWM_8:PWMUDB:MODULE_8:b_9\
	\PWM_8:PWMUDB:MODULE_8:b_8\
	\PWM_8:PWMUDB:MODULE_8:b_7\
	\PWM_8:PWMUDB:MODULE_8:b_6\
	\PWM_8:PWMUDB:MODULE_8:b_5\
	\PWM_8:PWMUDB:MODULE_8:b_4\
	\PWM_8:PWMUDB:MODULE_8:b_3\
	\PWM_8:PWMUDB:MODULE_8:b_2\
	\PWM_8:PWMUDB:MODULE_8:b_1\
	\PWM_8:PWMUDB:MODULE_8:b_0\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_31\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_30\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_29\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_28\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_27\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_26\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_25\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:a_24\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_31\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_30\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_29\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_28\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_27\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_26\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_25\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_24\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_23\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_22\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_21\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_20\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_19\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_18\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_17\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_16\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_15\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_14\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_13\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_12\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_11\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_10\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_9\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_8\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_7\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_6\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_5\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_4\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_3\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_2\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_1\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:b_0\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_31\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_30\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_29\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_28\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_27\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_26\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_25\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_24\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_23\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_22\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_21\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_20\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_19\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_18\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_17\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_16\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_15\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_14\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_13\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_12\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_11\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_10\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_9\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_8\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_7\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_6\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_5\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_4\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_3\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:s_2\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28960
	Net_28957
	\PWM_8:Net_113\
	\PWM_8:Net_107\
	\PWM_8:Net_114\
	\PWM_6:PWMUDB:km_run\
	\PWM_6:PWMUDB:ctrl_cmpmode2_2\
	\PWM_6:PWMUDB:ctrl_cmpmode2_1\
	\PWM_6:PWMUDB:ctrl_cmpmode2_0\
	\PWM_6:PWMUDB:ctrl_cmpmode1_2\
	\PWM_6:PWMUDB:ctrl_cmpmode1_1\
	\PWM_6:PWMUDB:ctrl_cmpmode1_0\
	\PWM_6:PWMUDB:capt_rising\
	\PWM_6:PWMUDB:capt_falling\
	\PWM_6:PWMUDB:trig_rise\
	\PWM_6:PWMUDB:trig_fall\
	\PWM_6:PWMUDB:sc_kill\
	\PWM_6:PWMUDB:min_kill\
	\PWM_6:PWMUDB:km_tc\
	\PWM_6:PWMUDB:db_tc\
	\PWM_6:PWMUDB:dith_sel\
	\PWM_6:PWMUDB:compare2\
	\PWM_6:Net_101\
	Net_28969
	Net_28970
	\PWM_6:PWMUDB:MODULE_9:b_31\
	\PWM_6:PWMUDB:MODULE_9:b_30\
	\PWM_6:PWMUDB:MODULE_9:b_29\
	\PWM_6:PWMUDB:MODULE_9:b_28\
	\PWM_6:PWMUDB:MODULE_9:b_27\
	\PWM_6:PWMUDB:MODULE_9:b_26\
	\PWM_6:PWMUDB:MODULE_9:b_25\
	\PWM_6:PWMUDB:MODULE_9:b_24\
	\PWM_6:PWMUDB:MODULE_9:b_23\
	\PWM_6:PWMUDB:MODULE_9:b_22\
	\PWM_6:PWMUDB:MODULE_9:b_21\
	\PWM_6:PWMUDB:MODULE_9:b_20\
	\PWM_6:PWMUDB:MODULE_9:b_19\
	\PWM_6:PWMUDB:MODULE_9:b_18\
	\PWM_6:PWMUDB:MODULE_9:b_17\
	\PWM_6:PWMUDB:MODULE_9:b_16\
	\PWM_6:PWMUDB:MODULE_9:b_15\
	\PWM_6:PWMUDB:MODULE_9:b_14\
	\PWM_6:PWMUDB:MODULE_9:b_13\
	\PWM_6:PWMUDB:MODULE_9:b_12\
	\PWM_6:PWMUDB:MODULE_9:b_11\
	\PWM_6:PWMUDB:MODULE_9:b_10\
	\PWM_6:PWMUDB:MODULE_9:b_9\
	\PWM_6:PWMUDB:MODULE_9:b_8\
	\PWM_6:PWMUDB:MODULE_9:b_7\
	\PWM_6:PWMUDB:MODULE_9:b_6\
	\PWM_6:PWMUDB:MODULE_9:b_5\
	\PWM_6:PWMUDB:MODULE_9:b_4\
	\PWM_6:PWMUDB:MODULE_9:b_3\
	\PWM_6:PWMUDB:MODULE_9:b_2\
	\PWM_6:PWMUDB:MODULE_9:b_1\
	\PWM_6:PWMUDB:MODULE_9:b_0\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_31\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_30\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_29\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_28\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_27\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_26\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_25\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:a_24\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_31\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_30\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_29\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_28\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_27\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_26\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_25\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_24\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_23\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_22\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_21\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_20\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_19\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_18\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_17\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_16\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_15\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_14\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_13\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_12\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_11\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_10\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_9\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_8\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_7\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_6\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_5\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_4\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_3\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_2\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_1\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:b_0\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_31\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_30\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_29\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_28\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_27\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_26\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_25\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_24\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_23\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_22\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_21\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_20\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_19\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_18\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_17\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_16\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_15\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_14\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_13\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_12\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_11\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_10\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_9\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_8\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_7\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_6\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_5\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_4\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_3\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:s_2\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_31\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_30\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_29\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_28\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_27\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_26\
	\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_25\
	Net_28971
	Net_28968
	\PWM_6:Net_113\
	\PWM_6:Net_107\
	\PWM_6:Net_114\
	\ADC_1_OUT_MSB:control_bus_7\
	\ADC_1_OUT_MSB:control_bus_6\
	\ADC_1_OUT_MSB:control_bus_5\
	\ADC_1_OUT_MSB:control_bus_4\

    Synthesized names
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_31\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_30\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_29\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_28\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_27\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_26\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_25\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_24\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_23\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_22\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_21\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_20\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_19\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_18\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_17\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_16\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_15\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_14\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_13\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_12\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_11\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_10\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_9\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_8\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_7\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_6\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_5\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_4\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_3\
	\PWM_4:PWMUDB:add_vi_vv_MODGEN_2_2\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_31\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_30\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_29\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_28\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_27\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_26\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_25\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_24\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_23\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_22\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_21\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_20\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_19\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_18\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_17\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_16\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_15\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_14\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_13\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_12\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_11\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_10\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_9\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_8\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_7\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_6\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_5\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_4\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_3\
	\PWM_5:PWMUDB:add_vi_vv_MODGEN_3_2\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_31\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_30\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_29\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_28\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_27\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_26\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_25\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_24\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_23\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_22\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_21\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_20\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_19\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_18\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_17\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_16\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_15\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_14\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_13\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_12\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_11\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_10\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_9\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_8\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_7\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_6\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_5\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_4\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_3\
	\PWM_11:PWMUDB:add_vi_vv_MODGEN_4_2\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_31\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_30\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_29\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_28\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_27\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_26\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_25\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_24\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_23\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_22\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_21\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_20\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_19\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_18\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_17\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_16\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_15\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_14\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_13\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_12\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_11\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_10\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_9\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_8\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_7\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_6\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_5\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_4\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_3\
	\PWM_10:PWMUDB:add_vi_vv_MODGEN_5_2\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_31\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_30\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_29\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_28\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_27\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_26\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_25\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_24\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_23\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_22\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_21\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_20\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_19\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_18\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_17\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_16\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_15\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_14\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_13\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_12\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_11\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_10\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_9\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_8\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_7\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_6\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_5\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_4\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_3\
	\PWM_7:PWMUDB:add_vi_vv_MODGEN_6_2\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_31\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_30\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_29\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_28\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_27\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_26\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_25\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_24\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_23\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_22\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_21\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_20\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_19\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_18\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_17\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_16\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_15\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_14\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_13\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_12\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_11\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_10\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_9\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_8\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_7\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_6\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_5\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_4\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_3\
	\PWM_9:PWMUDB:add_vi_vv_MODGEN_7_2\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_31\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_30\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_29\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_28\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_27\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_26\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_25\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_24\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_23\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_22\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_21\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_20\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_19\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_18\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_17\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_16\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_15\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_14\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_13\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_12\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_11\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_10\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_9\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_8\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_7\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_6\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_5\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_4\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_3\
	\PWM_8:PWMUDB:add_vi_vv_MODGEN_8_2\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_31\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_30\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_29\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_28\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_27\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_26\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_25\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_24\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_23\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_22\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_21\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_20\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_19\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_18\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_17\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_16\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_15\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_14\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_13\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_12\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_11\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_10\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_9\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_8\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_7\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_6\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_5\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_4\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_3\
	\PWM_6:PWMUDB:add_vi_vv_MODGEN_9_2\

Deleted 1124 User equations/components.
Deleted 240 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_5\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_4\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_3\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_2\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_1\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \LCD_Char_1:tmpOE__LCDPort_net_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing one to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \Filter:Net_1\ to zero
Aliasing \Filter:Net_4\ to zero
Aliasing \Filter:Net_5\ to zero
Aliasing \ADC_SAR_1:vp_ctl_0\ to zero
Aliasing \ADC_SAR_1:vp_ctl_2\ to zero
Aliasing \ADC_SAR_1:vn_ctl_1\ to zero
Aliasing \ADC_SAR_1:vn_ctl_3\ to zero
Aliasing \ADC_SAR_1:vp_ctl_1\ to zero
Aliasing \ADC_SAR_1:vp_ctl_3\ to zero
Aliasing \ADC_SAR_1:vn_ctl_0\ to zero
Aliasing \ADC_SAR_1:vn_ctl_2\ to zero
Aliasing tmpOE__AUDIO_IN_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__DIV_MUX_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__MASK_OFF_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__MOSI_OUT_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__SAMPLE_RATE_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__VREF_BUFF_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \SPI_DAC:BSPIM:pol_supprt\ to zero
Aliasing \SPI_DAC:BSPIM:tx_status_3\ to \SPI_DAC:BSPIM:load_rx_data\
Aliasing \SPI_DAC:BSPIM:tx_status_6\ to zero
Aliasing \SPI_DAC:BSPIM:tx_status_5\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_3\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_2\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_1\ to zero
Aliasing \SPI_DAC:BSPIM:rx_status_0\ to zero
Aliasing \SPI_DAC:Net_289\ to zero
Aliasing tmpOE__MISO_IN_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__SCLK_OUT_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing tmpOE__SS_OUT_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \ADC_SAR_Seq:clock\ to \ADC_SAR_1:Net_188\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_0\ to zero
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_2\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_1\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_3\ to zero
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_1\ to zero
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_3\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_0\ to zero
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_2\ to zero
Aliasing \ADC_SAR_Seq:SAR:soc\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_7\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_6\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_5\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_4\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_3\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_2\ to zero
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_1\ to zero
Aliasing Net_12630 to \ADC_SAR_Seq:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_ADC_CK:Net_113\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing Net_17104 to zero
Aliasing Net_17103 to zero
Aliasing tmpOE__PWM_1_CONTROL_net_0 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \DIV_MASK_MSB:clk\ to \ADC_SAR_1:Net_188\
Aliasing \DIV_MASK_MSB:rst\ to zero
Aliasing \DIV_MASK_LSB:clk\ to \ADC_SAR_1:Net_188\
Aliasing \DIV_MASK_LSB:rst\ to zero
Aliasing Net_12820 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing Net_23583 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing Net_23582 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing Net_23581 to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing ACK to zero
Aliasing \PWM_4:PWMUDB:hwCapture\ to zero
Aliasing \PWM_4:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_4:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_4:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_4:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_4:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_4:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_4:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_4:PWMUDB:status_6\ to zero
Aliasing \PWM_4:PWMUDB:status_4\ to zero
Aliasing \PWM_4:PWMUDB:cmp2\ to zero
Aliasing \PWM_4:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_4:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_4:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_4:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_4:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_4:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_23\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_22\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_21\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_20\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_19\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_18\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_17\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_16\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_15\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_14\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_13\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_12\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_11\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_10\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_9\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_8\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_7\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_6\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_5\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_4\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_3\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:a_2\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_5:PWMUDB:hwCapture\ to zero
Aliasing \PWM_5:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_5:PWMUDB:runmode_enable\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_5:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_5:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_5:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_5:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_5:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_5:PWMUDB:status_6\ to zero
Aliasing \PWM_5:PWMUDB:status_4\ to zero
Aliasing \PWM_5:PWMUDB:cmp2\ to zero
Aliasing \PWM_5:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_5:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_5:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_5:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_5:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_5:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_23\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_22\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_21\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_20\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_19\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_18\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_17\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_16\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_15\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_14\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_13\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_12\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_11\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_10\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_9\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_8\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_7\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_6\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_5\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_4\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_3\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:a_2\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_11:PWMUDB:hwCapture\ to zero
Aliasing \PWM_11:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_11:PWMUDB:runmode_enable\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_11:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_11:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_11:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_11:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_11:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_11:PWMUDB:status_6\ to zero
Aliasing \PWM_11:PWMUDB:status_4\ to zero
Aliasing \PWM_11:PWMUDB:cmp2\ to zero
Aliasing \PWM_11:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_11:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_11:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_11:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_11:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_11:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_23\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_22\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_21\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_20\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_19\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_18\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_17\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_16\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_15\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_14\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_13\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_12\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_11\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_10\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_9\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_8\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_7\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_6\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_5\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_4\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_3\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:a_2\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_10:PWMUDB:hwCapture\ to zero
Aliasing \PWM_10:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_10:PWMUDB:runmode_enable\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_10:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_10:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_10:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_10:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_10:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_10:PWMUDB:status_6\ to zero
Aliasing \PWM_10:PWMUDB:status_4\ to zero
Aliasing \PWM_10:PWMUDB:cmp2\ to zero
Aliasing \PWM_10:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_10:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_10:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_10:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_10:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_10:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_23\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_22\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_21\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_20\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_19\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_18\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_17\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_16\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_15\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_14\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_13\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_12\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_11\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_10\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_9\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_8\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_7\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_6\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_5\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_4\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_3\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:a_2\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_7:PWMUDB:hwCapture\ to zero
Aliasing \PWM_7:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_7:PWMUDB:runmode_enable\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_7:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_7:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_7:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_7:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_7:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_7:PWMUDB:status_6\ to zero
Aliasing \PWM_7:PWMUDB:status_4\ to zero
Aliasing \PWM_7:PWMUDB:cmp2\ to zero
Aliasing \PWM_7:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_7:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_7:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_7:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_7:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_7:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_23\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_22\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_21\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_20\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_19\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_18\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_17\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_16\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_15\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_14\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_13\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_12\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_11\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_10\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_9\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_8\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_7\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_6\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_5\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_4\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_3\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:a_2\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_9:PWMUDB:hwCapture\ to zero
Aliasing \PWM_9:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_9:PWMUDB:runmode_enable\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_9:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_9:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_9:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_9:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_9:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_9:PWMUDB:status_6\ to zero
Aliasing \PWM_9:PWMUDB:status_4\ to zero
Aliasing \PWM_9:PWMUDB:cmp2\ to zero
Aliasing \PWM_9:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_9:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_9:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_9:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_9:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_9:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_23\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_22\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_21\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_20\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_19\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_18\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_17\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_16\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_15\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_14\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_13\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_12\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_11\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_10\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_9\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_8\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_7\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_6\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_5\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_4\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_3\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:a_2\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_8:PWMUDB:hwCapture\ to zero
Aliasing \PWM_8:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_8:PWMUDB:runmode_enable\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_8:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_8:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_8:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_8:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_8:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_8:PWMUDB:status_6\ to zero
Aliasing \PWM_8:PWMUDB:status_4\ to zero
Aliasing \PWM_8:PWMUDB:cmp2\ to zero
Aliasing \PWM_8:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_8:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_8:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_8:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_8:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_8:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_23\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_22\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_21\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_20\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_19\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_18\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_17\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_16\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_15\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_14\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_13\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_12\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_11\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_10\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_9\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_8\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_7\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_6\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_5\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_4\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_3\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:a_2\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_6:PWMUDB:hwCapture\ to zero
Aliasing \PWM_6:PWMUDB:trig_out\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_6:PWMUDB:runmode_enable\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:runmode_enable\\S\ to zero
Aliasing \PWM_6:PWMUDB:ltch_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:ltch_kill_reg\\S\ to zero
Aliasing \PWM_6:PWMUDB:min_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:min_kill_reg\\S\ to zero
Aliasing \PWM_6:PWMUDB:final_kill\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_6:PWMUDB:dith_count_1\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:dith_count_1\\S\ to zero
Aliasing \PWM_6:PWMUDB:dith_count_0\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:dith_count_0\\S\ to zero
Aliasing \PWM_6:PWMUDB:status_6\ to zero
Aliasing \PWM_6:PWMUDB:status_4\ to zero
Aliasing \PWM_6:PWMUDB:cmp2\ to zero
Aliasing \PWM_6:PWMUDB:cmp1_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:cmp1_status_reg\\S\ to zero
Aliasing \PWM_6:PWMUDB:cmp2_status_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:cmp2_status_reg\\S\ to zero
Aliasing \PWM_6:PWMUDB:final_kill_reg\\R\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:final_kill_reg\\S\ to zero
Aliasing \PWM_6:PWMUDB:cs_addr_0\ to \PWM_4:PWMUDB:runmode_enable\\R\
Aliasing \PWM_6:PWMUDB:pwm1_i\ to zero
Aliasing \PWM_6:PWMUDB:pwm2_i\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_23\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_22\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_21\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_20\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_19\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_18\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_17\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_16\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_15\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_14\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_13\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_12\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_11\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_10\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_9\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_8\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_7\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_6\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_5\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_4\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_3\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:a_2\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_0\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \ADC_1_OUT_MSB:clk\ to \ADC_SAR_1:Net_188\
Aliasing \ADC_1_OUT_MSB:rst\ to zero
Aliasing \ADC_1_OUT_LSB:clk\ to \ADC_SAR_1:Net_188\
Aliasing \ADC_1_OUT_LSB:rst\ to zero
Aliasing \DAC_IN_MSB:status_7\ to zero
Aliasing \DAC_IN_MSB:status_6\ to zero
Aliasing \DAC_IN_MSB:status_5\ to zero
Aliasing \DAC_IN_MSB:status_4\ to zero
Aliasing \SPI_DAC:BSPIM:so_send_reg\\D\ to zero
Aliasing \SPI_DAC:BSPIM:mosi_pre_reg\\D\ to zero
Aliasing \SPI_DAC:BSPIM:dpcounter_one_reg\\D\ to \SPI_DAC:BSPIM:load_rx_data\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq:MODIN1_5\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq:MODIN1_4\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq:MODIN1_3\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq:MODIN1_2\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq:MODIN1_1\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq:MODIN1_0\
Aliasing \PWM_4:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_4:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_4:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_4:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_4:PWMUDB:prevCompare1\\D\ to \PWM_4:PWMUDB:pwm_temp\
Aliasing \PWM_4:PWMUDB:tc_i_reg\\D\ to \PWM_4:PWMUDB:status_2\
Aliasing \PWM_5:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_5:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_5:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_5:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_5:PWMUDB:prevCompare1\\D\ to \PWM_5:PWMUDB:pwm_temp\
Aliasing \PWM_5:PWMUDB:tc_i_reg\\D\ to \PWM_5:PWMUDB:status_2\
Aliasing \PWM_11:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_11:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_11:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_11:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_11:PWMUDB:prevCompare1\\D\ to \PWM_11:PWMUDB:pwm_temp\
Aliasing \PWM_11:PWMUDB:tc_i_reg\\D\ to \PWM_11:PWMUDB:status_2\
Aliasing \PWM_10:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_10:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_10:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_10:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_10:PWMUDB:prevCompare1\\D\ to \PWM_10:PWMUDB:pwm_temp\
Aliasing \PWM_10:PWMUDB:tc_i_reg\\D\ to \PWM_10:PWMUDB:status_2\
Aliasing \PWM_7:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_7:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_7:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_7:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_7:PWMUDB:prevCompare1\\D\ to \PWM_7:PWMUDB:pwm_temp\
Aliasing \PWM_7:PWMUDB:tc_i_reg\\D\ to \PWM_7:PWMUDB:status_2\
Aliasing \PWM_9:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_9:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_9:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_9:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_9:PWMUDB:prevCompare1\\D\ to \PWM_9:PWMUDB:pwm_temp\
Aliasing \PWM_9:PWMUDB:tc_i_reg\\D\ to \PWM_9:PWMUDB:status_2\
Aliasing \PWM_8:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_8:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_8:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_8:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_8:PWMUDB:prevCompare1\\D\ to \PWM_8:PWMUDB:pwm_temp\
Aliasing \PWM_8:PWMUDB:tc_i_reg\\D\ to \PWM_8:PWMUDB:status_2\
Aliasing \PWM_6:PWMUDB:min_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_6:PWMUDB:prevCapture\\D\ to zero
Aliasing \PWM_6:PWMUDB:trig_last\\D\ to zero
Aliasing \PWM_6:PWMUDB:ltch_kill_reg\\D\ to \LCD_Char_1:tmpOE__LCDPort_net_6\
Aliasing \PWM_6:PWMUDB:prevCompare1\\D\ to \PWM_6:PWMUDB:pwm_temp\
Aliasing \PWM_6:PWMUDB:tc_i_reg\\D\ to \PWM_6:PWMUDB:status_2\
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_5\[2] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_4\[3] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_3\[4] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_2\[5] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_1\[6] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \LCD_Char_1:tmpOE__LCDPort_net_0\[7] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Rhs of wire one[24] = \LCD_Char_1:tmpOE__LCDPort_net_6\[1]
Removing Lhs of wire \Filter:Net_1\[26] = zero[8]
Removing Lhs of wire \Filter:Net_4\[28] = zero[8]
Removing Lhs of wire \Filter:Net_5\[29] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_0\[40] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_2\[41] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_1\[42] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_3\[43] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_1\[44] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vp_ctl_3\[45] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_0\[46] = zero[8]
Removing Lhs of wire \ADC_SAR_1:vn_ctl_2\[47] = zero[8]
Removing Lhs of wire \ADC_SAR_1:Net_188\[48] = ADC_CLK[49]
Removing Rhs of wire PWM_CK[55] = \PWM_ADC_CK:Net_57\[653]
Removing Lhs of wire tmpOE__AUDIO_IN_net_0[85] = one[24]
Removing Lhs of wire tmpOE__DIV_MUX_CONTROL_net_0[92] = one[24]
Removing Lhs of wire tmpOE__MASK_OFF_CONTROL_net_0[99] = one[24]
Removing Lhs of wire tmpOE__MOSI_OUT_net_0[106] = one[24]
Removing Rhs of wire Net_6027[107] = \SPI_DAC:BSPIM:mosi_reg\[144]
Removing Lhs of wire tmpOE__SAMPLE_RATE_CONTROL_net_0[113] = one[24]
Removing Lhs of wire tmpOE__VREF_BUFF_net_0[123] = one[24]
Removing Rhs of wire \SPI_DAC:Net_276\[131] = \SPI_DAC:Net_288\[132]
Removing Rhs of wire \SPI_DAC:BSPIM:load_rx_data\[136] = \SPI_DAC:BSPIM:dpcounter_one\[137]
Removing Lhs of wire \SPI_DAC:BSPIM:pol_supprt\[138] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:miso_to_dp\[139] = \SPI_DAC:Net_244\[140]
Removing Lhs of wire \SPI_DAC:Net_244\[140] = Net_6028[281]
Removing Rhs of wire \SPI_DAC:BSPIM:mosi_from_dp\[150] = \SPI_DAC:BSPIM:mosi_from_dpL\[264]
Removing Rhs of wire \SPI_DAC:BSPIM:tx_status_1\[166] = \SPI_DAC:BSPIM:dpMOSI_fifo_empty\[167]
Removing Rhs of wire \SPI_DAC:BSPIM:tx_status_2\[168] = \SPI_DAC:BSPIM:dpMOSI_fifo_not_full\[169]
Removing Lhs of wire \SPI_DAC:BSPIM:tx_status_3\[170] = \SPI_DAC:BSPIM:load_rx_data\[136]
Removing Rhs of wire \SPI_DAC:BSPIM:rx_status_4\[172] = \SPI_DAC:BSPIM:dpMISO_fifo_full\[173]
Removing Rhs of wire \SPI_DAC:BSPIM:rx_status_5\[174] = \SPI_DAC:BSPIM:dpMISO_fifo_not_empty\[175]
Removing Lhs of wire \SPI_DAC:BSPIM:tx_status_6\[177] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:tx_status_5\[178] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_3\[179] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_2\[180] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_1\[181] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:rx_status_0\[182] = zero[8]
Removing Lhs of wire \SPI_DAC:Net_273\[192] = zero[8]
Removing Lhs of wire \SPI_DAC:Net_289\[282] = zero[8]
Removing Lhs of wire tmpOE__MISO_IN_net_0[284] = one[24]
Removing Lhs of wire tmpOE__SCLK_OUT_net_0[290] = one[24]
Removing Lhs of wire tmpOE__SS_OUT_net_0[296] = one[24]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\[304] = one[24]
Removing Lhs of wire \ADC_SAR_Seq:cmp_vv_vv_MODGEN_1\[306] = \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[637]
Removing Lhs of wire \ADC_SAR_Seq:clock\[307] = ADC_CLK[49]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_5\[309] = \ADC_SAR_Seq:bSAR_SEQ:count_5\[505]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_4\[311] = \ADC_SAR_Seq:bSAR_SEQ:count_4\[506]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_3\[313] = \ADC_SAR_Seq:bSAR_SEQ:count_3\[507]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_2\[315] = \ADC_SAR_Seq:bSAR_SEQ:count_2\[508]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_1\[317] = \ADC_SAR_Seq:bSAR_SEQ:count_1\[509]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_0\[319] = \ADC_SAR_Seq:bSAR_SEQ:count_0\[510]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_0\[450] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_2\[451] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_1\[452] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_3\[453] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_1\[454] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_3\[455] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_0\[456] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_2\[457] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:SAR:Net_188\[458] = ADC_CLK[49]
Removing Lhs of wire \ADC_SAR_Seq:SAR:soc\[464] = zero[8]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:enable\[495] = \ADC_SAR_Seq:bSAR_SEQ:control_0\[496]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:load_period\[497] = \ADC_SAR_Seq:bSAR_SEQ:control_1\[498]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_7\[511] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_6\[512] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_5\[513] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_4\[514] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_3\[515] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_2\[516] = zero[8]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_1\[517] = zero[8]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_0\[518] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\[519]
Removing Rhs of wire Net_12630[526] = \ADC_SAR_Seq:bSAR_SEQ:status_0\[518]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_5\[548] = \ADC_SAR_Seq:MODIN1_5\[549]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_5\[549] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_4\[550] = \ADC_SAR_Seq:MODIN1_4\[551]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_4\[551] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_3\[552] = \ADC_SAR_Seq:MODIN1_3\[553]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_3\[553] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_2\[554] = \ADC_SAR_Seq:MODIN1_2\[555]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_2\[555] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_1\[556] = \ADC_SAR_Seq:MODIN1_1\[557]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_1\[557] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_0\[558] = \ADC_SAR_Seq:MODIN1_0\[559]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_0\[559] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_5\[560] = \ADC_SAR_Seq:MODIN2_5\[561]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_5\[561] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[308]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_4\[562] = \ADC_SAR_Seq:MODIN2_4\[563]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_4\[563] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[310]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_3\[564] = \ADC_SAR_Seq:MODIN2_3\[565]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_3\[565] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[312]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_2\[566] = \ADC_SAR_Seq:MODIN2_2\[567]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_2\[567] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[314]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_1\[568] = \ADC_SAR_Seq:MODIN2_1\[569]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_1\[569] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[316]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_0\[570] = \ADC_SAR_Seq:MODIN2_0\[571]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_0\[571] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[318]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_5\[572] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_4\[573] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_3\[574] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_2\[575] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_1\[576] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_0\[577] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_5\[578] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[308]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_4\[579] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[310]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_3\[580] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[312]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_2\[581] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[314]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_1\[582] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[316]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_0\[583] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[318]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_5\[584] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_4\[585] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_3\[586] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_2\[587] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_1\[588] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_0\[589] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_5\[590] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[308]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_4\[591] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[310]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_3\[592] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[312]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_2\[593] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[314]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_1\[594] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[316]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_0\[595] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[318]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\[602] = one[24]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_0\[603] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\[601]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eqi_0\[609] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\[608]
Removing Rhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[637] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_1\[610]
Removing Lhs of wire \PWM_ADC_CK:Net_107\[649] = zero[8]
Removing Lhs of wire \PWM_ADC_CK:Net_113\[650] = one[24]
Removing Lhs of wire Net_17104[651] = zero[8]
Removing Lhs of wire Net_17103[657] = zero[8]
Removing Lhs of wire tmpOE__PWM_1_CONTROL_net_0[661] = one[24]
Removing Rhs of wire DIV_MASK_BUS_0[667] = \DIV_MASK_LSB:control_out_0\[714]
Removing Rhs of wire DIV_MASK_BUS_0[667] = \DIV_MASK_LSB:control_0\[723]
Removing Rhs of wire ADC_OUT_BUS_0[668] = \ADC_1_OUT_LSB:control_out_0\[3459]
Removing Rhs of wire ADC_OUT_BUS_0[668] = \ADC_1_OUT_LSB:control_0\[3468]
Removing Rhs of wire ADC_DIV_Q_0[669] = cy_tff_1[1438]
Removing Rhs of wire MUX_BUS_0[670] = \MUXMSB_11:tmp__MUXMSB_11_reg\[666]
Removing Lhs of wire \DIV_MASK_MSB:clk\[671] = ADC_CLK[49]
Removing Lhs of wire \DIV_MASK_MSB:rst\[672] = zero[8]
Removing Rhs of wire DIV_MASK_BUS_11[681] = \DIV_MASK_MSB:control_out_3\[682]
Removing Rhs of wire DIV_MASK_BUS_11[681] = \DIV_MASK_MSB:control_3\[694]
Removing Rhs of wire DIV_MASK_BUS_10[683] = \DIV_MASK_MSB:control_out_2\[684]
Removing Rhs of wire DIV_MASK_BUS_10[683] = \DIV_MASK_MSB:control_2\[695]
Removing Rhs of wire DIV_MASK_BUS_9[685] = \DIV_MASK_MSB:control_out_1\[686]
Removing Rhs of wire DIV_MASK_BUS_9[685] = \DIV_MASK_MSB:control_1\[696]
Removing Rhs of wire DIV_MASK_BUS_8[687] = \DIV_MASK_MSB:control_out_0\[688]
Removing Rhs of wire DIV_MASK_BUS_8[687] = \DIV_MASK_MSB:control_0\[697]
Removing Lhs of wire \DIV_MASK_LSB:clk\[698] = ADC_CLK[49]
Removing Lhs of wire \DIV_MASK_LSB:rst\[699] = zero[8]
Removing Rhs of wire DIV_MASK_BUS_7[700] = \DIV_MASK_LSB:control_out_7\[701]
Removing Rhs of wire DIV_MASK_BUS_7[700] = \DIV_MASK_LSB:control_7\[716]
Removing Rhs of wire DIV_MASK_BUS_6[702] = \DIV_MASK_LSB:control_out_6\[703]
Removing Rhs of wire DIV_MASK_BUS_6[702] = \DIV_MASK_LSB:control_6\[717]
Removing Rhs of wire DIV_MASK_BUS_5[704] = \DIV_MASK_LSB:control_out_5\[705]
Removing Rhs of wire DIV_MASK_BUS_5[704] = \DIV_MASK_LSB:control_5\[718]
Removing Rhs of wire DIV_MASK_BUS_4[706] = \DIV_MASK_LSB:control_out_4\[707]
Removing Rhs of wire DIV_MASK_BUS_4[706] = \DIV_MASK_LSB:control_4\[719]
Removing Rhs of wire DIV_MASK_BUS_3[708] = \DIV_MASK_LSB:control_out_3\[709]
Removing Rhs of wire DIV_MASK_BUS_3[708] = \DIV_MASK_LSB:control_3\[720]
Removing Rhs of wire DIV_MASK_BUS_2[710] = \DIV_MASK_LSB:control_out_2\[711]
Removing Rhs of wire DIV_MASK_BUS_2[710] = \DIV_MASK_LSB:control_2\[721]
Removing Rhs of wire DIV_MASK_BUS_1[712] = \DIV_MASK_LSB:control_out_1\[713]
Removing Rhs of wire DIV_MASK_BUS_1[712] = \DIV_MASK_LSB:control_1\[722]
Removing Rhs of wire ADC_OUT_BUS_11[725] = \ADC_1_OUT_MSB:control_out_3\[3437]
Removing Rhs of wire ADC_OUT_BUS_11[725] = \ADC_1_OUT_MSB:control_3\[3446]
Removing Rhs of wire ADC_DIV_Q_11[726] = \PWM_11:Net_96\[1562]
Removing Rhs of wire ADC_DIV_Q_11[726] = \PWM_11:PWMUDB:pwm_i_reg\[1554]
Removing Rhs of wire MUX_BUS_11[727] = \MUXMSB_10:tmp__MUXMSB_10_reg\[724]
Removing Rhs of wire ADC_OUT_BUS_10[729] = \ADC_1_OUT_MSB:control_out_2\[3438]
Removing Rhs of wire ADC_OUT_BUS_10[729] = \ADC_1_OUT_MSB:control_2\[3447]
Removing Rhs of wire ADC_DIV_Q_10[730] = \PWM_10:Net_96\[1893]
Removing Rhs of wire ADC_DIV_Q_10[730] = \PWM_10:PWMUDB:pwm_i_reg\[1885]
Removing Rhs of wire MUX_BUS_10[731] = \MUXMSB_9:tmp__MUXMSB_9_reg\[728]
Removing Rhs of wire ADC_OUT_BUS_9[733] = \ADC_1_OUT_MSB:control_out_1\[3439]
Removing Rhs of wire ADC_OUT_BUS_9[733] = \ADC_1_OUT_MSB:control_1\[3448]
Removing Rhs of wire ADC_DIV_Q_9[734] = \PWM_9:Net_96\[2555]
Removing Rhs of wire ADC_DIV_Q_9[734] = \PWM_9:PWMUDB:pwm_i_reg\[2547]
Removing Rhs of wire MUX_BUS_9[735] = \MUXMSB_8:tmp__MUXMSB_8_reg\[732]
Removing Rhs of wire ADC_OUT_BUS_8[737] = \ADC_1_OUT_MSB:control_out_0\[3440]
Removing Rhs of wire ADC_OUT_BUS_8[737] = \ADC_1_OUT_MSB:control_0\[3449]
Removing Rhs of wire ADC_DIV_Q_8[738] = \PWM_8:Net_96\[2886]
Removing Rhs of wire ADC_DIV_Q_8[738] = \PWM_8:PWMUDB:pwm_i_reg\[2878]
Removing Rhs of wire MUX_BUS_8[739] = \MUXMSB_7:tmp__MUXMSB_7_reg\[736]
Removing Rhs of wire ADC_OUT_BUS_7[741] = \ADC_1_OUT_LSB:control_out_7\[3452]
Removing Rhs of wire ADC_OUT_BUS_7[741] = \ADC_1_OUT_LSB:control_7\[3461]
Removing Rhs of wire ADC_DIV_Q_7[742] = \PWM_7:Net_96\[2224]
Removing Rhs of wire ADC_DIV_Q_7[742] = \PWM_7:PWMUDB:pwm_i_reg\[2216]
Removing Rhs of wire MUX_BUS_7[743] = \MUXMSB_6:tmp__MUXMSB_6_reg\[740]
Removing Rhs of wire ADC_OUT_BUS_5[745] = \ADC_1_OUT_LSB:control_out_5\[3454]
Removing Rhs of wire ADC_OUT_BUS_5[745] = \ADC_1_OUT_LSB:control_5\[3463]
Removing Rhs of wire ADC_DIV_Q_5[746] = \PWM_5:Net_96\[1219]
Removing Rhs of wire ADC_DIV_Q_5[746] = \PWM_5:PWMUDB:pwm_i_reg\[1211]
Removing Rhs of wire MUX_BUS_5[747] = \MUXMSB_5:tmp__MUXMSB_5_reg\[744]
Removing Rhs of wire ADC_OUT_BUS_3[749] = \ADC_1_OUT_LSB:control_out_3\[3456]
Removing Rhs of wire ADC_OUT_BUS_3[749] = \ADC_1_OUT_LSB:control_3\[3465]
Removing Rhs of wire ADC_DIV_Q_3[750] = cy_tff_4[1428]
Removing Rhs of wire MUX_BUS_3[751] = \MUXMSB_4:tmp__MUXMSB_4_reg\[748]
Removing Rhs of wire ADC_OUT_BUS_6[753] = \ADC_1_OUT_LSB:control_out_6\[3453]
Removing Rhs of wire ADC_OUT_BUS_6[753] = \ADC_1_OUT_LSB:control_6\[3462]
Removing Rhs of wire ADC_DIV_Q_6[754] = \PWM_6:Net_96\[3217]
Removing Rhs of wire ADC_DIV_Q_6[754] = \PWM_6:PWMUDB:pwm_i_reg\[3209]
Removing Rhs of wire MUX_BUS_6[755] = \MUXMSB_3:tmp__MUXMSB_3_reg\[752]
Removing Rhs of wire ADC_OUT_BUS_4[757] = \ADC_1_OUT_LSB:control_out_4\[3455]
Removing Rhs of wire ADC_OUT_BUS_4[757] = \ADC_1_OUT_LSB:control_4\[3464]
Removing Rhs of wire ADC_DIV_Q_4[758] = \PWM_4:Net_96\[888]
Removing Rhs of wire ADC_DIV_Q_4[758] = \PWM_4:PWMUDB:pwm_i_reg\[880]
Removing Rhs of wire MUX_BUS_4[759] = \MUXMSB_2:tmp__MUXMSB_2_reg\[756]
Removing Lhs of wire Net_12820[760] = one[24]
Removing Lhs of wire Net_23583[761] = one[24]
Removing Lhs of wire Net_23582[762] = one[24]
Removing Lhs of wire Net_23581[763] = one[24]
Removing Lhs of wire ACK[764] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:ctrl_enable\[778] = \PWM_4:PWMUDB:control_7\[770]
Removing Lhs of wire \PWM_4:PWMUDB:hwCapture\[788] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:hwEnable\[789] = \PWM_4:PWMUDB:control_7\[770]
Removing Lhs of wire \PWM_4:PWMUDB:trig_out\[793] = one[24]
Removing Lhs of wire \PWM_4:PWMUDB:runmode_enable\\R\[795] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:runmode_enable\\S\[796] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:final_enable\[797] = \PWM_4:PWMUDB:runmode_enable\[794]
Removing Lhs of wire \PWM_4:PWMUDB:ltch_kill_reg\\R\[801] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:ltch_kill_reg\\S\[802] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:min_kill_reg\\R\[803] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:min_kill_reg\\S\[804] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:final_kill\[807] = one[24]
Removing Lhs of wire \PWM_4:PWMUDB:add_vi_vv_MODGEN_2_1\[811] = \PWM_4:PWMUDB:MODULE_2:g2:a0:s_1\[1050]
Removing Lhs of wire \PWM_4:PWMUDB:add_vi_vv_MODGEN_2_0\[813] = \PWM_4:PWMUDB:MODULE_2:g2:a0:s_0\[1051]
Removing Lhs of wire \PWM_4:PWMUDB:dith_count_1\\R\[814] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:dith_count_1\\S\[815] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:dith_count_0\\R\[816] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:dith_count_0\\S\[817] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:status_6\[820] = zero[8]
Removing Rhs of wire \PWM_4:PWMUDB:status_5\[821] = \PWM_4:PWMUDB:final_kill_reg\[835]
Removing Lhs of wire \PWM_4:PWMUDB:status_4\[822] = zero[8]
Removing Rhs of wire \PWM_4:PWMUDB:status_3\[823] = \PWM_4:PWMUDB:fifo_full\[842]
Removing Rhs of wire \PWM_4:PWMUDB:status_1\[825] = \PWM_4:PWMUDB:cmp2_status_reg\[834]
Removing Rhs of wire \PWM_4:PWMUDB:status_0\[826] = \PWM_4:PWMUDB:cmp1_status_reg\[833]
Removing Lhs of wire \PWM_4:PWMUDB:cmp2_status\[831] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:cmp2\[832] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:cmp1_status_reg\\R\[836] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:cmp1_status_reg\\S\[837] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:cmp2_status_reg\\R\[838] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:cmp2_status_reg\\S\[839] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:final_kill_reg\\R\[840] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:final_kill_reg\\S\[841] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:cs_addr_2\[843] = \PWM_4:PWMUDB:tc_i\[799]
Removing Lhs of wire \PWM_4:PWMUDB:cs_addr_1\[844] = \PWM_4:PWMUDB:runmode_enable\[794]
Removing Lhs of wire \PWM_4:PWMUDB:cs_addr_0\[845] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:pwm1_i\[883] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:pwm2_i\[885] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:pwm_temp\[891] = \PWM_4:PWMUDB:cmp1\[829]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_23\[932] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_22\[933] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_21\[934] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_20\[935] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_19\[936] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_18\[937] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_17\[938] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_16\[939] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_15\[940] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_14\[941] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_13\[942] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_12\[943] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_11\[944] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_10\[945] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_9\[946] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_8\[947] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_7\[948] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_6\[949] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_5\[950] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_4\[951] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_3\[952] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_2\[953] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_1\[954] = \PWM_4:PWMUDB:MODIN3_1\[955]
Removing Lhs of wire \PWM_4:PWMUDB:MODIN3_1\[955] = \PWM_4:PWMUDB:dith_count_1\[810]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:a_0\[956] = \PWM_4:PWMUDB:MODIN3_0\[957]
Removing Lhs of wire \PWM_4:PWMUDB:MODIN3_0\[957] = \PWM_4:PWMUDB:dith_count_0\[812]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[1089] = one[24]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[1090] = one[24]
Removing Lhs of wire \PWM_5:PWMUDB:ctrl_enable\[1109] = \PWM_5:PWMUDB:control_7\[1101]
Removing Lhs of wire \PWM_5:PWMUDB:hwCapture\[1119] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:hwEnable\[1120] = \PWM_5:PWMUDB:control_7\[1101]
Removing Lhs of wire \PWM_5:PWMUDB:trig_out\[1124] = one[24]
Removing Lhs of wire \PWM_5:PWMUDB:runmode_enable\\R\[1126] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:runmode_enable\\S\[1127] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:final_enable\[1128] = \PWM_5:PWMUDB:runmode_enable\[1125]
Removing Lhs of wire \PWM_5:PWMUDB:ltch_kill_reg\\R\[1132] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:ltch_kill_reg\\S\[1133] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:min_kill_reg\\R\[1134] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:min_kill_reg\\S\[1135] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:final_kill\[1138] = one[24]
Removing Lhs of wire \PWM_5:PWMUDB:add_vi_vv_MODGEN_3_1\[1142] = \PWM_5:PWMUDB:MODULE_3:g2:a0:s_1\[1381]
Removing Lhs of wire \PWM_5:PWMUDB:add_vi_vv_MODGEN_3_0\[1144] = \PWM_5:PWMUDB:MODULE_3:g2:a0:s_0\[1382]
Removing Lhs of wire \PWM_5:PWMUDB:dith_count_1\\R\[1145] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:dith_count_1\\S\[1146] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:dith_count_0\\R\[1147] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:dith_count_0\\S\[1148] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:status_6\[1151] = zero[8]
Removing Rhs of wire \PWM_5:PWMUDB:status_5\[1152] = \PWM_5:PWMUDB:final_kill_reg\[1166]
Removing Lhs of wire \PWM_5:PWMUDB:status_4\[1153] = zero[8]
Removing Rhs of wire \PWM_5:PWMUDB:status_3\[1154] = \PWM_5:PWMUDB:fifo_full\[1173]
Removing Rhs of wire \PWM_5:PWMUDB:status_1\[1156] = \PWM_5:PWMUDB:cmp2_status_reg\[1165]
Removing Rhs of wire \PWM_5:PWMUDB:status_0\[1157] = \PWM_5:PWMUDB:cmp1_status_reg\[1164]
Removing Lhs of wire \PWM_5:PWMUDB:cmp2_status\[1162] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:cmp2\[1163] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:cmp1_status_reg\\R\[1167] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:cmp1_status_reg\\S\[1168] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:cmp2_status_reg\\R\[1169] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:cmp2_status_reg\\S\[1170] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:final_kill_reg\\R\[1171] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:final_kill_reg\\S\[1172] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:cs_addr_2\[1174] = \PWM_5:PWMUDB:tc_i\[1130]
Removing Lhs of wire \PWM_5:PWMUDB:cs_addr_1\[1175] = \PWM_5:PWMUDB:runmode_enable\[1125]
Removing Lhs of wire \PWM_5:PWMUDB:cs_addr_0\[1176] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:pwm1_i\[1214] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:pwm2_i\[1216] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:pwm_temp\[1222] = \PWM_5:PWMUDB:cmp1\[1160]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_23\[1263] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_22\[1264] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_21\[1265] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_20\[1266] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_19\[1267] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_18\[1268] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_17\[1269] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_16\[1270] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_15\[1271] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_14\[1272] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_13\[1273] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_12\[1274] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_11\[1275] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_10\[1276] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_9\[1277] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_8\[1278] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_7\[1279] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_6\[1280] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_5\[1281] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_4\[1282] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_3\[1283] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_2\[1284] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_1\[1285] = \PWM_5:PWMUDB:MODIN4_1\[1286]
Removing Lhs of wire \PWM_5:PWMUDB:MODIN4_1\[1286] = \PWM_5:PWMUDB:dith_count_1\[1141]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:a_0\[1287] = \PWM_5:PWMUDB:MODIN4_0\[1288]
Removing Lhs of wire \PWM_5:PWMUDB:MODIN4_0\[1288] = \PWM_5:PWMUDB:dith_count_0\[1143]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_0\[1420] = one[24]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_0\[1421] = one[24]
Removing Lhs of wire tmp__cy_tff_4_clk[1427] = ADC_OUT_BUS_3[749]
Removing Rhs of wire tmp__cy_tff_3_clk[1429] = ADC_OUT_BUS_2[1430]
Removing Rhs of wire tmp__cy_tff_3_clk[1429] = \ADC_1_OUT_LSB:control_out_2\[3457]
Removing Rhs of wire tmp__cy_tff_3_clk[1429] = \ADC_1_OUT_LSB:control_2\[3466]
Removing Lhs of wire ADC_DIV_Q_2[1432] = cy_tff_3[1431]
Removing Rhs of wire tmp__cy_tff_2_clk[1433] = ADC_OUT_BUS_1[1434]
Removing Rhs of wire tmp__cy_tff_2_clk[1433] = \ADC_1_OUT_LSB:control_out_1\[3458]
Removing Rhs of wire tmp__cy_tff_2_clk[1433] = \ADC_1_OUT_LSB:control_1\[3467]
Removing Lhs of wire ADC_DIV_Q_1[1436] = cy_tff_2[1435]
Removing Lhs of wire tmp__cy_tff_1_clk[1437] = ADC_OUT_BUS_0[668]
Removing Lhs of wire \PWM_11:PWMUDB:ctrl_enable\[1452] = \PWM_11:PWMUDB:control_7\[1444]
Removing Lhs of wire \PWM_11:PWMUDB:hwCapture\[1462] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:hwEnable\[1463] = \PWM_11:PWMUDB:control_7\[1444]
Removing Lhs of wire \PWM_11:PWMUDB:trig_out\[1467] = one[24]
Removing Lhs of wire \PWM_11:PWMUDB:runmode_enable\\R\[1469] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:runmode_enable\\S\[1470] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:final_enable\[1471] = \PWM_11:PWMUDB:runmode_enable\[1468]
Removing Lhs of wire \PWM_11:PWMUDB:ltch_kill_reg\\R\[1475] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:ltch_kill_reg\\S\[1476] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:min_kill_reg\\R\[1477] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:min_kill_reg\\S\[1478] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:final_kill\[1481] = one[24]
Removing Lhs of wire \PWM_11:PWMUDB:add_vi_vv_MODGEN_4_1\[1485] = \PWM_11:PWMUDB:MODULE_4:g2:a0:s_1\[1724]
Removing Lhs of wire \PWM_11:PWMUDB:add_vi_vv_MODGEN_4_0\[1487] = \PWM_11:PWMUDB:MODULE_4:g2:a0:s_0\[1725]
Removing Lhs of wire \PWM_11:PWMUDB:dith_count_1\\R\[1488] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:dith_count_1\\S\[1489] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:dith_count_0\\R\[1490] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:dith_count_0\\S\[1491] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:status_6\[1494] = zero[8]
Removing Rhs of wire \PWM_11:PWMUDB:status_5\[1495] = \PWM_11:PWMUDB:final_kill_reg\[1509]
Removing Lhs of wire \PWM_11:PWMUDB:status_4\[1496] = zero[8]
Removing Rhs of wire \PWM_11:PWMUDB:status_3\[1497] = \PWM_11:PWMUDB:fifo_full\[1516]
Removing Rhs of wire \PWM_11:PWMUDB:status_1\[1499] = \PWM_11:PWMUDB:cmp2_status_reg\[1508]
Removing Rhs of wire \PWM_11:PWMUDB:status_0\[1500] = \PWM_11:PWMUDB:cmp1_status_reg\[1507]
Removing Lhs of wire \PWM_11:PWMUDB:cmp2_status\[1505] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:cmp2\[1506] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:cmp1_status_reg\\R\[1510] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:cmp1_status_reg\\S\[1511] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:cmp2_status_reg\\R\[1512] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:cmp2_status_reg\\S\[1513] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:final_kill_reg\\R\[1514] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:final_kill_reg\\S\[1515] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:cs_addr_2\[1517] = \PWM_11:PWMUDB:tc_i\[1473]
Removing Lhs of wire \PWM_11:PWMUDB:cs_addr_1\[1518] = \PWM_11:PWMUDB:runmode_enable\[1468]
Removing Lhs of wire \PWM_11:PWMUDB:cs_addr_0\[1519] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:pwm1_i\[1557] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:pwm2_i\[1559] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:pwm_temp\[1565] = \PWM_11:PWMUDB:cmp1\[1503]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_23\[1606] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_22\[1607] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_21\[1608] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_20\[1609] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_19\[1610] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_18\[1611] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_17\[1612] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_16\[1613] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_15\[1614] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_14\[1615] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_13\[1616] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_12\[1617] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_11\[1618] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_10\[1619] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_9\[1620] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_8\[1621] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_7\[1622] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_6\[1623] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_5\[1624] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_4\[1625] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_3\[1626] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_2\[1627] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_1\[1628] = \PWM_11:PWMUDB:MODIN5_1\[1629]
Removing Lhs of wire \PWM_11:PWMUDB:MODIN5_1\[1629] = \PWM_11:PWMUDB:dith_count_1\[1484]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:a_0\[1630] = \PWM_11:PWMUDB:MODIN5_0\[1631]
Removing Lhs of wire \PWM_11:PWMUDB:MODIN5_0\[1631] = \PWM_11:PWMUDB:dith_count_0\[1486]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_0\[1763] = one[24]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_0\[1764] = one[24]
Removing Lhs of wire \PWM_10:PWMUDB:ctrl_enable\[1783] = \PWM_10:PWMUDB:control_7\[1775]
Removing Lhs of wire \PWM_10:PWMUDB:hwCapture\[1793] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:hwEnable\[1794] = \PWM_10:PWMUDB:control_7\[1775]
Removing Lhs of wire \PWM_10:PWMUDB:trig_out\[1798] = one[24]
Removing Lhs of wire \PWM_10:PWMUDB:runmode_enable\\R\[1800] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:runmode_enable\\S\[1801] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:final_enable\[1802] = \PWM_10:PWMUDB:runmode_enable\[1799]
Removing Lhs of wire \PWM_10:PWMUDB:ltch_kill_reg\\R\[1806] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:ltch_kill_reg\\S\[1807] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:min_kill_reg\\R\[1808] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:min_kill_reg\\S\[1809] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:final_kill\[1812] = one[24]
Removing Lhs of wire \PWM_10:PWMUDB:add_vi_vv_MODGEN_5_1\[1816] = \PWM_10:PWMUDB:MODULE_5:g2:a0:s_1\[2055]
Removing Lhs of wire \PWM_10:PWMUDB:add_vi_vv_MODGEN_5_0\[1818] = \PWM_10:PWMUDB:MODULE_5:g2:a0:s_0\[2056]
Removing Lhs of wire \PWM_10:PWMUDB:dith_count_1\\R\[1819] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:dith_count_1\\S\[1820] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:dith_count_0\\R\[1821] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:dith_count_0\\S\[1822] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:status_6\[1825] = zero[8]
Removing Rhs of wire \PWM_10:PWMUDB:status_5\[1826] = \PWM_10:PWMUDB:final_kill_reg\[1840]
Removing Lhs of wire \PWM_10:PWMUDB:status_4\[1827] = zero[8]
Removing Rhs of wire \PWM_10:PWMUDB:status_3\[1828] = \PWM_10:PWMUDB:fifo_full\[1847]
Removing Rhs of wire \PWM_10:PWMUDB:status_1\[1830] = \PWM_10:PWMUDB:cmp2_status_reg\[1839]
Removing Rhs of wire \PWM_10:PWMUDB:status_0\[1831] = \PWM_10:PWMUDB:cmp1_status_reg\[1838]
Removing Lhs of wire \PWM_10:PWMUDB:cmp2_status\[1836] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:cmp2\[1837] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:cmp1_status_reg\\R\[1841] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:cmp1_status_reg\\S\[1842] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:cmp2_status_reg\\R\[1843] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:cmp2_status_reg\\S\[1844] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:final_kill_reg\\R\[1845] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:final_kill_reg\\S\[1846] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:cs_addr_2\[1848] = \PWM_10:PWMUDB:tc_i\[1804]
Removing Lhs of wire \PWM_10:PWMUDB:cs_addr_1\[1849] = \PWM_10:PWMUDB:runmode_enable\[1799]
Removing Lhs of wire \PWM_10:PWMUDB:cs_addr_0\[1850] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:pwm1_i\[1888] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:pwm2_i\[1890] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:pwm_temp\[1896] = \PWM_10:PWMUDB:cmp1\[1834]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_23\[1937] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_22\[1938] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_21\[1939] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_20\[1940] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_19\[1941] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_18\[1942] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_17\[1943] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_16\[1944] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_15\[1945] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_14\[1946] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_13\[1947] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_12\[1948] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_11\[1949] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_10\[1950] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_9\[1951] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_8\[1952] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_7\[1953] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_6\[1954] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_5\[1955] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_4\[1956] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_3\[1957] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_2\[1958] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_1\[1959] = \PWM_10:PWMUDB:MODIN6_1\[1960]
Removing Lhs of wire \PWM_10:PWMUDB:MODIN6_1\[1960] = \PWM_10:PWMUDB:dith_count_1\[1815]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:a_0\[1961] = \PWM_10:PWMUDB:MODIN6_0\[1962]
Removing Lhs of wire \PWM_10:PWMUDB:MODIN6_0\[1962] = \PWM_10:PWMUDB:dith_count_0\[1817]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_0\[2094] = one[24]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_0\[2095] = one[24]
Removing Lhs of wire \PWM_7:PWMUDB:ctrl_enable\[2114] = \PWM_7:PWMUDB:control_7\[2106]
Removing Lhs of wire \PWM_7:PWMUDB:hwCapture\[2124] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:hwEnable\[2125] = \PWM_7:PWMUDB:control_7\[2106]
Removing Lhs of wire \PWM_7:PWMUDB:trig_out\[2129] = one[24]
Removing Lhs of wire \PWM_7:PWMUDB:runmode_enable\\R\[2131] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:runmode_enable\\S\[2132] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:final_enable\[2133] = \PWM_7:PWMUDB:runmode_enable\[2130]
Removing Lhs of wire \PWM_7:PWMUDB:ltch_kill_reg\\R\[2137] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:ltch_kill_reg\\S\[2138] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:min_kill_reg\\R\[2139] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:min_kill_reg\\S\[2140] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:final_kill\[2143] = one[24]
Removing Lhs of wire \PWM_7:PWMUDB:add_vi_vv_MODGEN_6_1\[2147] = \PWM_7:PWMUDB:MODULE_6:g2:a0:s_1\[2386]
Removing Lhs of wire \PWM_7:PWMUDB:add_vi_vv_MODGEN_6_0\[2149] = \PWM_7:PWMUDB:MODULE_6:g2:a0:s_0\[2387]
Removing Lhs of wire \PWM_7:PWMUDB:dith_count_1\\R\[2150] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:dith_count_1\\S\[2151] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:dith_count_0\\R\[2152] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:dith_count_0\\S\[2153] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:status_6\[2156] = zero[8]
Removing Rhs of wire \PWM_7:PWMUDB:status_5\[2157] = \PWM_7:PWMUDB:final_kill_reg\[2171]
Removing Lhs of wire \PWM_7:PWMUDB:status_4\[2158] = zero[8]
Removing Rhs of wire \PWM_7:PWMUDB:status_3\[2159] = \PWM_7:PWMUDB:fifo_full\[2178]
Removing Rhs of wire \PWM_7:PWMUDB:status_1\[2161] = \PWM_7:PWMUDB:cmp2_status_reg\[2170]
Removing Rhs of wire \PWM_7:PWMUDB:status_0\[2162] = \PWM_7:PWMUDB:cmp1_status_reg\[2169]
Removing Lhs of wire \PWM_7:PWMUDB:cmp2_status\[2167] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:cmp2\[2168] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:cmp1_status_reg\\R\[2172] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:cmp1_status_reg\\S\[2173] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:cmp2_status_reg\\R\[2174] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:cmp2_status_reg\\S\[2175] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:final_kill_reg\\R\[2176] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:final_kill_reg\\S\[2177] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:cs_addr_2\[2179] = \PWM_7:PWMUDB:tc_i\[2135]
Removing Lhs of wire \PWM_7:PWMUDB:cs_addr_1\[2180] = \PWM_7:PWMUDB:runmode_enable\[2130]
Removing Lhs of wire \PWM_7:PWMUDB:cs_addr_0\[2181] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:pwm1_i\[2219] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:pwm2_i\[2221] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:pwm_temp\[2227] = \PWM_7:PWMUDB:cmp1\[2165]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_23\[2268] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_22\[2269] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_21\[2270] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_20\[2271] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_19\[2272] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_18\[2273] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_17\[2274] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_16\[2275] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_15\[2276] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_14\[2277] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_13\[2278] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_12\[2279] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_11\[2280] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_10\[2281] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_9\[2282] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_8\[2283] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_7\[2284] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_6\[2285] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_5\[2286] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_4\[2287] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_3\[2288] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_2\[2289] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_1\[2290] = \PWM_7:PWMUDB:MODIN7_1\[2291]
Removing Lhs of wire \PWM_7:PWMUDB:MODIN7_1\[2291] = \PWM_7:PWMUDB:dith_count_1\[2146]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:a_0\[2292] = \PWM_7:PWMUDB:MODIN7_0\[2293]
Removing Lhs of wire \PWM_7:PWMUDB:MODIN7_0\[2293] = \PWM_7:PWMUDB:dith_count_0\[2148]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_0\[2425] = one[24]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_0\[2426] = one[24]
Removing Lhs of wire \PWM_9:PWMUDB:ctrl_enable\[2445] = \PWM_9:PWMUDB:control_7\[2437]
Removing Lhs of wire \PWM_9:PWMUDB:hwCapture\[2455] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:hwEnable\[2456] = \PWM_9:PWMUDB:control_7\[2437]
Removing Lhs of wire \PWM_9:PWMUDB:trig_out\[2460] = one[24]
Removing Lhs of wire \PWM_9:PWMUDB:runmode_enable\\R\[2462] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:runmode_enable\\S\[2463] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:final_enable\[2464] = \PWM_9:PWMUDB:runmode_enable\[2461]
Removing Lhs of wire \PWM_9:PWMUDB:ltch_kill_reg\\R\[2468] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:ltch_kill_reg\\S\[2469] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:min_kill_reg\\R\[2470] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:min_kill_reg\\S\[2471] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:final_kill\[2474] = one[24]
Removing Lhs of wire \PWM_9:PWMUDB:add_vi_vv_MODGEN_7_1\[2478] = \PWM_9:PWMUDB:MODULE_7:g2:a0:s_1\[2717]
Removing Lhs of wire \PWM_9:PWMUDB:add_vi_vv_MODGEN_7_0\[2480] = \PWM_9:PWMUDB:MODULE_7:g2:a0:s_0\[2718]
Removing Lhs of wire \PWM_9:PWMUDB:dith_count_1\\R\[2481] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:dith_count_1\\S\[2482] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:dith_count_0\\R\[2483] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:dith_count_0\\S\[2484] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:status_6\[2487] = zero[8]
Removing Rhs of wire \PWM_9:PWMUDB:status_5\[2488] = \PWM_9:PWMUDB:final_kill_reg\[2502]
Removing Lhs of wire \PWM_9:PWMUDB:status_4\[2489] = zero[8]
Removing Rhs of wire \PWM_9:PWMUDB:status_3\[2490] = \PWM_9:PWMUDB:fifo_full\[2509]
Removing Rhs of wire \PWM_9:PWMUDB:status_1\[2492] = \PWM_9:PWMUDB:cmp2_status_reg\[2501]
Removing Rhs of wire \PWM_9:PWMUDB:status_0\[2493] = \PWM_9:PWMUDB:cmp1_status_reg\[2500]
Removing Lhs of wire \PWM_9:PWMUDB:cmp2_status\[2498] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:cmp2\[2499] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:cmp1_status_reg\\R\[2503] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:cmp1_status_reg\\S\[2504] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:cmp2_status_reg\\R\[2505] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:cmp2_status_reg\\S\[2506] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:final_kill_reg\\R\[2507] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:final_kill_reg\\S\[2508] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:cs_addr_2\[2510] = \PWM_9:PWMUDB:tc_i\[2466]
Removing Lhs of wire \PWM_9:PWMUDB:cs_addr_1\[2511] = \PWM_9:PWMUDB:runmode_enable\[2461]
Removing Lhs of wire \PWM_9:PWMUDB:cs_addr_0\[2512] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:pwm1_i\[2550] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:pwm2_i\[2552] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:pwm_temp\[2558] = \PWM_9:PWMUDB:cmp1\[2496]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_23\[2599] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_22\[2600] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_21\[2601] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_20\[2602] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_19\[2603] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_18\[2604] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_17\[2605] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_16\[2606] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_15\[2607] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_14\[2608] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_13\[2609] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_12\[2610] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_11\[2611] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_10\[2612] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_9\[2613] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_8\[2614] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_7\[2615] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_6\[2616] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_5\[2617] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_4\[2618] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_3\[2619] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_2\[2620] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_1\[2621] = \PWM_9:PWMUDB:MODIN8_1\[2622]
Removing Lhs of wire \PWM_9:PWMUDB:MODIN8_1\[2622] = \PWM_9:PWMUDB:dith_count_1\[2477]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:a_0\[2623] = \PWM_9:PWMUDB:MODIN8_0\[2624]
Removing Lhs of wire \PWM_9:PWMUDB:MODIN8_0\[2624] = \PWM_9:PWMUDB:dith_count_0\[2479]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_0\[2756] = one[24]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\[2757] = one[24]
Removing Lhs of wire \PWM_8:PWMUDB:ctrl_enable\[2776] = \PWM_8:PWMUDB:control_7\[2768]
Removing Lhs of wire \PWM_8:PWMUDB:hwCapture\[2786] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:hwEnable\[2787] = \PWM_8:PWMUDB:control_7\[2768]
Removing Lhs of wire \PWM_8:PWMUDB:trig_out\[2791] = one[24]
Removing Lhs of wire \PWM_8:PWMUDB:runmode_enable\\R\[2793] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:runmode_enable\\S\[2794] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:final_enable\[2795] = \PWM_8:PWMUDB:runmode_enable\[2792]
Removing Lhs of wire \PWM_8:PWMUDB:ltch_kill_reg\\R\[2799] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:ltch_kill_reg\\S\[2800] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:min_kill_reg\\R\[2801] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:min_kill_reg\\S\[2802] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:final_kill\[2805] = one[24]
Removing Lhs of wire \PWM_8:PWMUDB:add_vi_vv_MODGEN_8_1\[2809] = \PWM_8:PWMUDB:MODULE_8:g2:a0:s_1\[3048]
Removing Lhs of wire \PWM_8:PWMUDB:add_vi_vv_MODGEN_8_0\[2811] = \PWM_8:PWMUDB:MODULE_8:g2:a0:s_0\[3049]
Removing Lhs of wire \PWM_8:PWMUDB:dith_count_1\\R\[2812] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:dith_count_1\\S\[2813] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:dith_count_0\\R\[2814] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:dith_count_0\\S\[2815] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:status_6\[2818] = zero[8]
Removing Rhs of wire \PWM_8:PWMUDB:status_5\[2819] = \PWM_8:PWMUDB:final_kill_reg\[2833]
Removing Lhs of wire \PWM_8:PWMUDB:status_4\[2820] = zero[8]
Removing Rhs of wire \PWM_8:PWMUDB:status_3\[2821] = \PWM_8:PWMUDB:fifo_full\[2840]
Removing Rhs of wire \PWM_8:PWMUDB:status_1\[2823] = \PWM_8:PWMUDB:cmp2_status_reg\[2832]
Removing Rhs of wire \PWM_8:PWMUDB:status_0\[2824] = \PWM_8:PWMUDB:cmp1_status_reg\[2831]
Removing Lhs of wire \PWM_8:PWMUDB:cmp2_status\[2829] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:cmp2\[2830] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:cmp1_status_reg\\R\[2834] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:cmp1_status_reg\\S\[2835] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:cmp2_status_reg\\R\[2836] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:cmp2_status_reg\\S\[2837] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:final_kill_reg\\R\[2838] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:final_kill_reg\\S\[2839] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:cs_addr_2\[2841] = \PWM_8:PWMUDB:tc_i\[2797]
Removing Lhs of wire \PWM_8:PWMUDB:cs_addr_1\[2842] = \PWM_8:PWMUDB:runmode_enable\[2792]
Removing Lhs of wire \PWM_8:PWMUDB:cs_addr_0\[2843] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:pwm1_i\[2881] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:pwm2_i\[2883] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:pwm_temp\[2889] = \PWM_8:PWMUDB:cmp1\[2827]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_23\[2930] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_22\[2931] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_21\[2932] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_20\[2933] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_19\[2934] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_18\[2935] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_17\[2936] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_16\[2937] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_15\[2938] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_14\[2939] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_13\[2940] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_12\[2941] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_11\[2942] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_10\[2943] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_9\[2944] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_8\[2945] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_7\[2946] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_6\[2947] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_5\[2948] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_4\[2949] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_3\[2950] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_2\[2951] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_1\[2952] = \PWM_8:PWMUDB:MODIN9_1\[2953]
Removing Lhs of wire \PWM_8:PWMUDB:MODIN9_1\[2953] = \PWM_8:PWMUDB:dith_count_1\[2808]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:a_0\[2954] = \PWM_8:PWMUDB:MODIN9_0\[2955]
Removing Lhs of wire \PWM_8:PWMUDB:MODIN9_0\[2955] = \PWM_8:PWMUDB:dith_count_0\[2810]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_0\[3087] = one[24]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_0\[3088] = one[24]
Removing Lhs of wire \PWM_6:PWMUDB:ctrl_enable\[3107] = \PWM_6:PWMUDB:control_7\[3099]
Removing Lhs of wire \PWM_6:PWMUDB:hwCapture\[3117] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:hwEnable\[3118] = \PWM_6:PWMUDB:control_7\[3099]
Removing Lhs of wire \PWM_6:PWMUDB:trig_out\[3122] = one[24]
Removing Lhs of wire \PWM_6:PWMUDB:runmode_enable\\R\[3124] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:runmode_enable\\S\[3125] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:final_enable\[3126] = \PWM_6:PWMUDB:runmode_enable\[3123]
Removing Lhs of wire \PWM_6:PWMUDB:ltch_kill_reg\\R\[3130] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:ltch_kill_reg\\S\[3131] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:min_kill_reg\\R\[3132] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:min_kill_reg\\S\[3133] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:final_kill\[3136] = one[24]
Removing Lhs of wire \PWM_6:PWMUDB:add_vi_vv_MODGEN_9_1\[3140] = \PWM_6:PWMUDB:MODULE_9:g2:a0:s_1\[3379]
Removing Lhs of wire \PWM_6:PWMUDB:add_vi_vv_MODGEN_9_0\[3142] = \PWM_6:PWMUDB:MODULE_9:g2:a0:s_0\[3380]
Removing Lhs of wire \PWM_6:PWMUDB:dith_count_1\\R\[3143] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:dith_count_1\\S\[3144] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:dith_count_0\\R\[3145] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:dith_count_0\\S\[3146] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:status_6\[3149] = zero[8]
Removing Rhs of wire \PWM_6:PWMUDB:status_5\[3150] = \PWM_6:PWMUDB:final_kill_reg\[3164]
Removing Lhs of wire \PWM_6:PWMUDB:status_4\[3151] = zero[8]
Removing Rhs of wire \PWM_6:PWMUDB:status_3\[3152] = \PWM_6:PWMUDB:fifo_full\[3171]
Removing Rhs of wire \PWM_6:PWMUDB:status_1\[3154] = \PWM_6:PWMUDB:cmp2_status_reg\[3163]
Removing Rhs of wire \PWM_6:PWMUDB:status_0\[3155] = \PWM_6:PWMUDB:cmp1_status_reg\[3162]
Removing Lhs of wire \PWM_6:PWMUDB:cmp2_status\[3160] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:cmp2\[3161] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:cmp1_status_reg\\R\[3165] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:cmp1_status_reg\\S\[3166] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:cmp2_status_reg\\R\[3167] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:cmp2_status_reg\\S\[3168] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:final_kill_reg\\R\[3169] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:final_kill_reg\\S\[3170] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:cs_addr_2\[3172] = \PWM_6:PWMUDB:tc_i\[3128]
Removing Lhs of wire \PWM_6:PWMUDB:cs_addr_1\[3173] = \PWM_6:PWMUDB:runmode_enable\[3123]
Removing Lhs of wire \PWM_6:PWMUDB:cs_addr_0\[3174] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:pwm1_i\[3212] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:pwm2_i\[3214] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:pwm_temp\[3220] = \PWM_6:PWMUDB:cmp1\[3158]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_23\[3261] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_22\[3262] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_21\[3263] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_20\[3264] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_19\[3265] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_18\[3266] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_17\[3267] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_16\[3268] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_15\[3269] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_14\[3270] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_13\[3271] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_12\[3272] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_11\[3273] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_10\[3274] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_9\[3275] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_8\[3276] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_7\[3277] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_6\[3278] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_5\[3279] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_4\[3280] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_3\[3281] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_2\[3282] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_1\[3283] = \PWM_6:PWMUDB:MODIN10_1\[3284]
Removing Lhs of wire \PWM_6:PWMUDB:MODIN10_1\[3284] = \PWM_6:PWMUDB:dith_count_1\[3139]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:a_0\[3285] = \PWM_6:PWMUDB:MODIN10_0\[3286]
Removing Lhs of wire \PWM_6:PWMUDB:MODIN10_0\[3286] = \PWM_6:PWMUDB:dith_count_0\[3141]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_0\[3418] = one[24]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_0\[3419] = one[24]
Removing Rhs of wire MUX_BUS_2[3426] = \MUXMSB_1:tmp__MUXMSB_1_reg\[3425]
Removing Lhs of wire \ADC_1_OUT_MSB:clk\[3427] = ADC_CLK[49]
Removing Lhs of wire \ADC_1_OUT_MSB:rst\[3428] = zero[8]
Removing Lhs of wire \ADC_1_OUT_LSB:clk\[3450] = ADC_CLK[49]
Removing Lhs of wire \ADC_1_OUT_LSB:rst\[3451] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_7\[3469] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_6\[3470] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_5\[3471] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_4\[3472] = zero[8]
Removing Lhs of wire \DAC_IN_MSB:status_3\[3473] = MUX_BUS_11[727]
Removing Lhs of wire \DAC_IN_MSB:status_2\[3474] = MUX_BUS_10[731]
Removing Lhs of wire \DAC_IN_MSB:status_1\[3475] = MUX_BUS_9[735]
Removing Lhs of wire \DAC_IN_MSB:status_0\[3476] = MUX_BUS_8[739]
Removing Lhs of wire \DAC_IN_LSB:status_7\[3478] = MUX_BUS_7[743]
Removing Lhs of wire \DAC_IN_LSB:status_6\[3479] = MUX_BUS_6[755]
Removing Lhs of wire \DAC_IN_LSB:status_5\[3480] = MUX_BUS_5[747]
Removing Lhs of wire \DAC_IN_LSB:status_4\[3481] = MUX_BUS_4[759]
Removing Lhs of wire \DAC_IN_LSB:status_3\[3482] = MUX_BUS_3[751]
Removing Lhs of wire \DAC_IN_LSB:status_2\[3483] = MUX_BUS_2[3426]
Removing Lhs of wire \DAC_IN_LSB:status_1\[3484] = MUX_BUS_1[3485]
Removing Rhs of wire MUX_BUS_1[3485] = \MUXMSB_12:tmp__MUXMSB_12_reg\[3488]
Removing Lhs of wire \DAC_IN_LSB:status_0\[3486] = MUX_BUS_0[670]
Removing Lhs of wire \SPI_DAC:BSPIM:so_send_reg\\D\[3489] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:mosi_pre_reg\\D\[3495] = zero[8]
Removing Lhs of wire \SPI_DAC:BSPIM:dpcounter_one_reg\\D\[3497] = \SPI_DAC:BSPIM:load_rx_data\[136]
Removing Lhs of wire \SPI_DAC:BSPIM:mosi_from_dp_reg\\D\[3498] = \SPI_DAC:BSPIM:mosi_from_dp\[150]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\[3502] = \ADC_SAR_Seq:ch_addr_5\[309]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\[3503] = \ADC_SAR_Seq:ch_addr_4\[311]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\[3504] = \ADC_SAR_Seq:ch_addr_3\[313]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\[3505] = \ADC_SAR_Seq:ch_addr_2\[315]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\[3506] = \ADC_SAR_Seq:ch_addr_1\[317]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\[3507] = \ADC_SAR_Seq:ch_addr_0\[319]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\\D\[3572] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect\[525]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\\D\[3574] = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\[522]
Removing Lhs of wire \PWM_4:PWMUDB:min_kill_reg\\D\[3575] = one[24]
Removing Lhs of wire \PWM_4:PWMUDB:prevCapture\\D\[3576] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:trig_last\\D\[3577] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:ltch_kill_reg\\D\[3580] = one[24]
Removing Lhs of wire \PWM_4:PWMUDB:prevCompare1\\D\[3583] = \PWM_4:PWMUDB:cmp1\[829]
Removing Lhs of wire \PWM_4:PWMUDB:cmp1_status_reg\\D\[3584] = \PWM_4:PWMUDB:cmp1_status\[830]
Removing Lhs of wire \PWM_4:PWMUDB:cmp2_status_reg\\D\[3585] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:pwm_i_reg\\D\[3587] = \PWM_4:PWMUDB:pwm_i\[881]
Removing Lhs of wire \PWM_4:PWMUDB:pwm1_i_reg\\D\[3588] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:pwm2_i_reg\\D\[3589] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:tc_i_reg\\D\[3590] = \PWM_4:PWMUDB:status_2\[824]
Removing Lhs of wire \PWM_5:PWMUDB:min_kill_reg\\D\[3591] = one[24]
Removing Lhs of wire \PWM_5:PWMUDB:prevCapture\\D\[3592] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:trig_last\\D\[3593] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:ltch_kill_reg\\D\[3596] = one[24]
Removing Lhs of wire \PWM_5:PWMUDB:prevCompare1\\D\[3599] = \PWM_5:PWMUDB:cmp1\[1160]
Removing Lhs of wire \PWM_5:PWMUDB:cmp1_status_reg\\D\[3600] = \PWM_5:PWMUDB:cmp1_status\[1161]
Removing Lhs of wire \PWM_5:PWMUDB:cmp2_status_reg\\D\[3601] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:pwm_i_reg\\D\[3603] = \PWM_5:PWMUDB:pwm_i\[1212]
Removing Lhs of wire \PWM_5:PWMUDB:pwm1_i_reg\\D\[3604] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:pwm2_i_reg\\D\[3605] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:tc_i_reg\\D\[3606] = \PWM_5:PWMUDB:status_2\[1155]
Removing Lhs of wire \PWM_11:PWMUDB:min_kill_reg\\D\[3611] = one[24]
Removing Lhs of wire \PWM_11:PWMUDB:prevCapture\\D\[3612] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:trig_last\\D\[3613] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:ltch_kill_reg\\D\[3616] = one[24]
Removing Lhs of wire \PWM_11:PWMUDB:prevCompare1\\D\[3619] = \PWM_11:PWMUDB:cmp1\[1503]
Removing Lhs of wire \PWM_11:PWMUDB:cmp1_status_reg\\D\[3620] = \PWM_11:PWMUDB:cmp1_status\[1504]
Removing Lhs of wire \PWM_11:PWMUDB:cmp2_status_reg\\D\[3621] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:pwm_i_reg\\D\[3623] = \PWM_11:PWMUDB:pwm_i\[1555]
Removing Lhs of wire \PWM_11:PWMUDB:pwm1_i_reg\\D\[3624] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:pwm2_i_reg\\D\[3625] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:tc_i_reg\\D\[3626] = \PWM_11:PWMUDB:status_2\[1498]
Removing Lhs of wire \PWM_10:PWMUDB:min_kill_reg\\D\[3627] = one[24]
Removing Lhs of wire \PWM_10:PWMUDB:prevCapture\\D\[3628] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:trig_last\\D\[3629] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:ltch_kill_reg\\D\[3632] = one[24]
Removing Lhs of wire \PWM_10:PWMUDB:prevCompare1\\D\[3635] = \PWM_10:PWMUDB:cmp1\[1834]
Removing Lhs of wire \PWM_10:PWMUDB:cmp1_status_reg\\D\[3636] = \PWM_10:PWMUDB:cmp1_status\[1835]
Removing Lhs of wire \PWM_10:PWMUDB:cmp2_status_reg\\D\[3637] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:pwm_i_reg\\D\[3639] = \PWM_10:PWMUDB:pwm_i\[1886]
Removing Lhs of wire \PWM_10:PWMUDB:pwm1_i_reg\\D\[3640] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:pwm2_i_reg\\D\[3641] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:tc_i_reg\\D\[3642] = \PWM_10:PWMUDB:status_2\[1829]
Removing Lhs of wire \PWM_7:PWMUDB:min_kill_reg\\D\[3643] = one[24]
Removing Lhs of wire \PWM_7:PWMUDB:prevCapture\\D\[3644] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:trig_last\\D\[3645] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:ltch_kill_reg\\D\[3648] = one[24]
Removing Lhs of wire \PWM_7:PWMUDB:prevCompare1\\D\[3651] = \PWM_7:PWMUDB:cmp1\[2165]
Removing Lhs of wire \PWM_7:PWMUDB:cmp1_status_reg\\D\[3652] = \PWM_7:PWMUDB:cmp1_status\[2166]
Removing Lhs of wire \PWM_7:PWMUDB:cmp2_status_reg\\D\[3653] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:pwm_i_reg\\D\[3655] = \PWM_7:PWMUDB:pwm_i\[2217]
Removing Lhs of wire \PWM_7:PWMUDB:pwm1_i_reg\\D\[3656] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:pwm2_i_reg\\D\[3657] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:tc_i_reg\\D\[3658] = \PWM_7:PWMUDB:status_2\[2160]
Removing Lhs of wire \PWM_9:PWMUDB:min_kill_reg\\D\[3659] = one[24]
Removing Lhs of wire \PWM_9:PWMUDB:prevCapture\\D\[3660] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:trig_last\\D\[3661] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:ltch_kill_reg\\D\[3664] = one[24]
Removing Lhs of wire \PWM_9:PWMUDB:prevCompare1\\D\[3667] = \PWM_9:PWMUDB:cmp1\[2496]
Removing Lhs of wire \PWM_9:PWMUDB:cmp1_status_reg\\D\[3668] = \PWM_9:PWMUDB:cmp1_status\[2497]
Removing Lhs of wire \PWM_9:PWMUDB:cmp2_status_reg\\D\[3669] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:pwm_i_reg\\D\[3671] = \PWM_9:PWMUDB:pwm_i\[2548]
Removing Lhs of wire \PWM_9:PWMUDB:pwm1_i_reg\\D\[3672] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:pwm2_i_reg\\D\[3673] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:tc_i_reg\\D\[3674] = \PWM_9:PWMUDB:status_2\[2491]
Removing Lhs of wire \PWM_8:PWMUDB:min_kill_reg\\D\[3675] = one[24]
Removing Lhs of wire \PWM_8:PWMUDB:prevCapture\\D\[3676] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:trig_last\\D\[3677] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:ltch_kill_reg\\D\[3680] = one[24]
Removing Lhs of wire \PWM_8:PWMUDB:prevCompare1\\D\[3683] = \PWM_8:PWMUDB:cmp1\[2827]
Removing Lhs of wire \PWM_8:PWMUDB:cmp1_status_reg\\D\[3684] = \PWM_8:PWMUDB:cmp1_status\[2828]
Removing Lhs of wire \PWM_8:PWMUDB:cmp2_status_reg\\D\[3685] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:pwm_i_reg\\D\[3687] = \PWM_8:PWMUDB:pwm_i\[2879]
Removing Lhs of wire \PWM_8:PWMUDB:pwm1_i_reg\\D\[3688] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:pwm2_i_reg\\D\[3689] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:tc_i_reg\\D\[3690] = \PWM_8:PWMUDB:status_2\[2822]
Removing Lhs of wire \PWM_6:PWMUDB:min_kill_reg\\D\[3691] = one[24]
Removing Lhs of wire \PWM_6:PWMUDB:prevCapture\\D\[3692] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:trig_last\\D\[3693] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:ltch_kill_reg\\D\[3696] = one[24]
Removing Lhs of wire \PWM_6:PWMUDB:prevCompare1\\D\[3699] = \PWM_6:PWMUDB:cmp1\[3158]
Removing Lhs of wire \PWM_6:PWMUDB:cmp1_status_reg\\D\[3700] = \PWM_6:PWMUDB:cmp1_status\[3159]
Removing Lhs of wire \PWM_6:PWMUDB:cmp2_status_reg\\D\[3701] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:pwm_i_reg\\D\[3703] = \PWM_6:PWMUDB:pwm_i\[3210]
Removing Lhs of wire \PWM_6:PWMUDB:pwm1_i_reg\\D\[3704] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:pwm2_i_reg\\D\[3705] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:tc_i_reg\\D\[3706] = \PWM_6:PWMUDB:status_2\[3153]

------------------------------------------------------
Aliased 0 equations, 877 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'one' (cost = 0):
one <=  ('1') ;

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for '\SPI_DAC:BSPIM:load_rx_data\' (cost = 1):
\SPI_DAC:BSPIM:load_rx_data\ <= ((not \SPI_DAC:BSPIM:count_4\ and not \SPI_DAC:BSPIM:count_3\ and not \SPI_DAC:BSPIM:count_2\ and not \SPI_DAC:BSPIM:count_1\ and \SPI_DAC:BSPIM:count_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:compare1\' (cost = 2):
\PWM_4:PWMUDB:compare1\ <= (\PWM_4:PWMUDB:cmp1_less\
	OR \PWM_4:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_4:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:s_0\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:s_0\ <= (not \PWM_4:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_4:PWMUDB:dith_count_1\ and \PWM_4:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:compare1\' (cost = 2):
\PWM_5:PWMUDB:compare1\ <= (\PWM_5:PWMUDB:cmp1_less\
	OR \PWM_5:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_5:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:s_0\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:s_0\ <= (not \PWM_5:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_5:PWMUDB:dith_count_1\ and \PWM_5:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:compare1\' (cost = 2):
\PWM_11:PWMUDB:compare1\ <= (\PWM_11:PWMUDB:cmp1_less\
	OR \PWM_11:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_11:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:s_0\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:s_0\ <= (not \PWM_11:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_11:PWMUDB:dith_count_1\ and \PWM_11:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:compare1\' (cost = 2):
\PWM_10:PWMUDB:compare1\ <= (\PWM_10:PWMUDB:cmp1_less\
	OR \PWM_10:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_10:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:s_0\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:s_0\ <= (not \PWM_10:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_10:PWMUDB:dith_count_1\ and \PWM_10:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:compare1\' (cost = 2):
\PWM_7:PWMUDB:compare1\ <= (\PWM_7:PWMUDB:cmp1_less\
	OR \PWM_7:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_7:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:s_0\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:s_0\ <= (not \PWM_7:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_7:PWMUDB:dith_count_1\ and \PWM_7:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:compare1\' (cost = 0):
\PWM_9:PWMUDB:compare1\ <= (not \PWM_9:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_9:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:s_0\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:s_0\ <= (not \PWM_9:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_9:PWMUDB:dith_count_1\ and \PWM_9:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:compare1\' (cost = 0):
\PWM_8:PWMUDB:compare1\ <= (not \PWM_8:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_8:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:s_0\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:s_0\ <= (not \PWM_8:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_8:PWMUDB:dith_count_1\ and \PWM_8:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:compare1\' (cost = 2):
\PWM_6:PWMUDB:compare1\ <= (\PWM_6:PWMUDB:cmp1_less\
	OR \PWM_6:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\PWM_6:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:s_0\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:s_0\ <= (not \PWM_6:PWMUDB:dith_count_0\);

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_17\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_17\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_9\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_9\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_2\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_2\ <= ((\PWM_6:PWMUDB:dith_count_1\ and \PWM_6:PWMUDB:dith_count_0\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:cmp1\' (cost = 4):
\PWM_4:PWMUDB:cmp1\ <= (\PWM_4:PWMUDB:cmp1_less\
	OR \PWM_4:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:s_1\' (cost = 2):
\PWM_4:PWMUDB:MODULE_2:g2:a0:s_1\ <= ((not \PWM_4:PWMUDB:dith_count_0\ and \PWM_4:PWMUDB:dith_count_1\)
	OR (not \PWM_4:PWMUDB:dith_count_1\ and \PWM_4:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:cmp1\' (cost = 4):
\PWM_5:PWMUDB:cmp1\ <= (\PWM_5:PWMUDB:cmp1_less\
	OR \PWM_5:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:s_1\' (cost = 2):
\PWM_5:PWMUDB:MODULE_3:g2:a0:s_1\ <= ((not \PWM_5:PWMUDB:dith_count_0\ and \PWM_5:PWMUDB:dith_count_1\)
	OR (not \PWM_5:PWMUDB:dith_count_1\ and \PWM_5:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:cmp1\' (cost = 4):
\PWM_11:PWMUDB:cmp1\ <= (\PWM_11:PWMUDB:cmp1_less\
	OR \PWM_11:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:s_1\' (cost = 2):
\PWM_11:PWMUDB:MODULE_4:g2:a0:s_1\ <= ((not \PWM_11:PWMUDB:dith_count_0\ and \PWM_11:PWMUDB:dith_count_1\)
	OR (not \PWM_11:PWMUDB:dith_count_1\ and \PWM_11:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:cmp1\' (cost = 4):
\PWM_10:PWMUDB:cmp1\ <= (\PWM_10:PWMUDB:cmp1_less\
	OR \PWM_10:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:s_1\' (cost = 2):
\PWM_10:PWMUDB:MODULE_5:g2:a0:s_1\ <= ((not \PWM_10:PWMUDB:dith_count_0\ and \PWM_10:PWMUDB:dith_count_1\)
	OR (not \PWM_10:PWMUDB:dith_count_1\ and \PWM_10:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:cmp1\' (cost = 4):
\PWM_7:PWMUDB:cmp1\ <= (\PWM_7:PWMUDB:cmp1_less\
	OR \PWM_7:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:s_1\' (cost = 2):
\PWM_7:PWMUDB:MODULE_6:g2:a0:s_1\ <= ((not \PWM_7:PWMUDB:dith_count_0\ and \PWM_7:PWMUDB:dith_count_1\)
	OR (not \PWM_7:PWMUDB:dith_count_1\ and \PWM_7:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:cmp1\' (cost = 0):
\PWM_9:PWMUDB:cmp1\ <= (not \PWM_9:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:s_1\' (cost = 2):
\PWM_9:PWMUDB:MODULE_7:g2:a0:s_1\ <= ((not \PWM_9:PWMUDB:dith_count_0\ and \PWM_9:PWMUDB:dith_count_1\)
	OR (not \PWM_9:PWMUDB:dith_count_1\ and \PWM_9:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:cmp1\' (cost = 0):
\PWM_8:PWMUDB:cmp1\ <= (not \PWM_8:PWMUDB:cmp1_less\);

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:s_1\' (cost = 2):
\PWM_8:PWMUDB:MODULE_8:g2:a0:s_1\ <= ((not \PWM_8:PWMUDB:dith_count_0\ and \PWM_8:PWMUDB:dith_count_1\)
	OR (not \PWM_8:PWMUDB:dith_count_1\ and \PWM_8:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:cmp1\' (cost = 4):
\PWM_6:PWMUDB:cmp1\ <= (\PWM_6:PWMUDB:cmp1_less\
	OR \PWM_6:PWMUDB:cmp1_eq\);

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:s_1\' (cost = 2):
\PWM_6:PWMUDB:MODULE_9:g2:a0:s_1\ <= ((not \PWM_6:PWMUDB:dith_count_0\ and \PWM_6:PWMUDB:dith_count_1\)
	OR (not \PWM_6:PWMUDB:dith_count_1\ and \PWM_6:PWMUDB:dith_count_0\));

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_18\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_18\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_10\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_10\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_3\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_3\ <=  ('0') ;


Substituting virtuals - pass 3:

Note:  Virtual signal \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_19\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_19\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_11\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_11\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_4\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_4\ <=  ('0') ;


Substituting virtuals - pass 4:

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_20\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_20\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_12\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_12\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_5\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_5\ <=  ('0') ;


Substituting virtuals - pass 5:

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_21\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_21\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_13\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_13\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_6\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_6\ <=  ('0') ;


Substituting virtuals - pass 6:

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_22\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_22\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_14\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_14\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_7\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_7\ <=  ('0') ;


Substituting virtuals - pass 7:

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_23\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_23\ <=  ('0') ;

Note:  Expanding virtual equation for '\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_15\' (cost = 0):
\PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_15\ <=  ('0') ;


Substituting virtuals - pass 8:


----------------------------------------------------------
Circuit simplification results:

	Expanded 223 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \PWM_4:PWMUDB:final_capture\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_5:PWMUDB:final_capture\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_11:PWMUDB:final_capture\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_10:PWMUDB:final_capture\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_7:PWMUDB:final_capture\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_9:PWMUDB:final_capture\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_8:PWMUDB:final_capture\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_6:PWMUDB:final_capture\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_24\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_16\ to zero
Aliasing \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_8\ to zero
Aliasing \PWM_4:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_5:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_11:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_10:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_7:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_9:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_8:PWMUDB:final_kill_reg\\D\ to zero
Aliasing \PWM_6:PWMUDB:final_kill_reg\\D\ to zero
Removing Lhs of wire \PWM_4:PWMUDB:final_capture\[847] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_24\[1060] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_16\[1070] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_8\[1080] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:final_capture\[1178] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_24\[1391] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_16\[1401] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:b_8\[1411] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:final_capture\[1521] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_24\[1734] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_16\[1744] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:b_8\[1754] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:final_capture\[1852] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_24\[2065] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_16\[2075] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:b_8\[2085] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:final_capture\[2183] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_24\[2396] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_16\[2406] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:b_8\[2416] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:final_capture\[2514] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_24\[2727] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_16\[2737] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_8\[2747] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:final_capture\[2845] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_24\[3058] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_16\[3068] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:b_8\[3078] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:final_capture\[3176] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_24\[3389] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_16\[3399] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:b_8\[3409] = zero[8]
Removing Lhs of wire \PWM_4:PWMUDB:runmode_enable\\D\[3578] = \PWM_4:PWMUDB:control_7\[770]
Removing Lhs of wire \PWM_4:PWMUDB:final_kill_reg\\D\[3586] = zero[8]
Removing Lhs of wire \PWM_5:PWMUDB:runmode_enable\\D\[3594] = \PWM_5:PWMUDB:control_7\[1101]
Removing Lhs of wire \PWM_5:PWMUDB:final_kill_reg\\D\[3602] = zero[8]
Removing Lhs of wire \PWM_11:PWMUDB:runmode_enable\\D\[3614] = \PWM_11:PWMUDB:control_7\[1444]
Removing Lhs of wire \PWM_11:PWMUDB:final_kill_reg\\D\[3622] = zero[8]
Removing Lhs of wire \PWM_10:PWMUDB:runmode_enable\\D\[3630] = \PWM_10:PWMUDB:control_7\[1775]
Removing Lhs of wire \PWM_10:PWMUDB:final_kill_reg\\D\[3638] = zero[8]
Removing Lhs of wire \PWM_7:PWMUDB:runmode_enable\\D\[3646] = \PWM_7:PWMUDB:control_7\[2106]
Removing Lhs of wire \PWM_7:PWMUDB:final_kill_reg\\D\[3654] = zero[8]
Removing Lhs of wire \PWM_9:PWMUDB:runmode_enable\\D\[3662] = \PWM_9:PWMUDB:control_7\[2437]
Removing Lhs of wire \PWM_9:PWMUDB:final_kill_reg\\D\[3670] = zero[8]
Removing Lhs of wire \PWM_8:PWMUDB:runmode_enable\\D\[3678] = \PWM_8:PWMUDB:control_7\[2768]
Removing Lhs of wire \PWM_8:PWMUDB:final_kill_reg\\D\[3686] = zero[8]
Removing Lhs of wire \PWM_6:PWMUDB:runmode_enable\\D\[3694] = \PWM_6:PWMUDB:control_7\[3099]
Removing Lhs of wire \PWM_6:PWMUDB:final_kill_reg\\D\[3702] = zero[8]

------------------------------------------------------
Aliased 0 equations, 48 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.0\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj" -dcpsoc3 ADC_DAC.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 4s.002ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.0.0.432, Family: PSoC3, Started at: Saturday, 15 April 2017 13:41:13
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\ben\Documents\PSoC Creator\New Pedal Thingz\PSOC_BIT_MANGLER\BIT-MANGLER\ADC_DAC.cydsn\ADC_DAC.cyprj -d CY8C5868AXI-LP035 ADC_DAC.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.057ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_2\
    Removed wire end \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_4:PWMUDB:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_5:PWMUDB:MODULE_3:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_11:PWMUDB:MODULE_4:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_10:PWMUDB:MODULE_5:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_7:PWMUDB:MODULE_6:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_9:PWMUDB:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_8:PWMUDB:MODULE_8:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Removed wire end \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_24\ kept zero
    Removed wire end \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_16\ kept zero
    Removed wire end \PWM_6:PWMUDB:MODULE_9:g2:a0:g1:z1:s0:g1:u0:c_8\ kept zero
    Converted constant MacroCell: \SPI_DAC:BSPIM:so_send_reg\ from registered to combinatorial
    Converted constant MacroCell: \SPI_DAC:BSPIM:mosi_pre_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_4:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_4:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_4:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_4:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_4:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_4:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_5:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_5:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_5:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_5:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_5:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_5:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_11:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_11:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_11:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_11:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_11:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_11:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_10:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_10:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_10:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_10:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_10:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_10:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_7:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_7:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_7:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_7:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_7:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_7:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_9:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_9:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_9:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_9:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_9:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_9:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_8:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_8:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_8:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_8:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_8:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_8:PWMUDB:pwm2_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_6:PWMUDB:prevCapture\ from registered to combinatorial
    Converted constant MacroCell: \PWM_6:PWMUDB:trig_last\ from registered to combinatorial
    Converted constant MacroCell: \PWM_6:PWMUDB:status_1\ from registered to combinatorial
    Converted constant MacroCell: \PWM_6:PWMUDB:status_5\ from registered to combinatorial
    Converted constant MacroCell: \PWM_6:PWMUDB:pwm1_i_reg\ from registered to combinatorial
    Converted constant MacroCell: \PWM_6:PWMUDB:pwm2_i_reg\ from registered to combinatorial
Assigning clock ADC_SAR_Seq_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'SPI_DAC_IntClock'. Fanout=1, Signal=\SPI_DAC:Net_276\
    Digital Clock 1: Automatic-assigning  clock 'ADC_REG_CLOCK'. Fanout=79, Signal=ADC_CLK
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \SPI_DAC:BSPIM:ClkEn\: with output requested to be synchronous
        ClockIn: SPI_DAC_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: SPI_DAC_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_REG_CLOCK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_REG_CLOCK was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: Constant 1
    UDB Clk/Enable \PWM_4:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_4 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_4
    UDB Clk/Enable \PWM_5:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_5 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_5
    UDB Clk/Enable \PWM_11:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_3 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_3
    UDB Clk/Enable \PWM_10:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_2 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_2
    UDB Clk/Enable \PWM_7:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_7 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_7
    UDB Clk/Enable \PWM_9:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_1 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_1
    UDB Clk/Enable \PWM_8:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_0 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_MSB:Sync:ctrl_reg\:controlcell.control_0
    UDB Clk/Enable \PWM_6:PWMUDB:clock_enable_block\: with output requested to be synchronous
        ClockIn: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_6 was determined to be a routed clock that is synchronous to ADC_REG_CLOCK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_REG_CLOCK, EnableOut: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_6
</CYPRESSTAG>
<CYPRESSTAG name="UDB Routed Clock Assignment">
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_3
        Effective Clock: ADC_REG_CLOCK
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_3
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_2
        Effective Clock: ADC_REG_CLOCK
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_2
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_1
        Effective Clock: ADC_REG_CLOCK
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_1
    Routed Clock: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_0
        Effective Clock: ADC_REG_CLOCK
        Enable Signal: \ADC_1_OUT_LSB:Sync:ctrl_reg\:controlcell.control_0
</CYPRESSTAG>
ADD: pft.M0040: information: The following 10 pin(s) will be assigned a location by the fitter: \LCD_Char_1:LCDPort(0)\, \LCD_Char_1:LCDPort(1)\, \LCD_Char_1:LCDPort(2)\, \LCD_Char_1:LCDPort(3)\, \LCD_Char_1:LCDPort(4)\, \LCD_Char_1:LCDPort(5)\, \LCD_Char_1:LCDPort(6)\, DIV_MUX_CONTROL(0), MISO_IN(0), PWM_1_CONTROL(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing unused cells resulting from optimization
Done removing unused cells.
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = \LCD_Char_1:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(0)\__PA ,
            pad => \LCD_Char_1:LCDPort(0)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(1)\__PA ,
            pad => \LCD_Char_1:LCDPort(1)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(2)\__PA ,
            pad => \LCD_Char_1:LCDPort(2)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(3)\__PA ,
            pad => \LCD_Char_1:LCDPort(3)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(4)\__PA ,
            pad => \LCD_Char_1:LCDPort(4)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(5)\__PA ,
            pad => \LCD_Char_1:LCDPort(5)_PAD\ );

    Pin : Name = \LCD_Char_1:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Char_1:LCDPort(6)\__PA ,
            pad => \LCD_Char_1:LCDPort(6)_PAD\ );

    Pin : Name = AUDIO_IN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => AUDIO_IN(0)__PA ,
            analog_term => Net_806 ,
            pad => AUDIO_IN(0)_PAD );
        Properties:
        {
        }

    Pin : Name = DIV_MUX_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => DIV_MUX_CONTROL(0)__PA ,
            analog_term => Net_12634 ,
            pad => DIV_MUX_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ );

    Pin : Name = MASK_OFF_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MASK_OFF_CONTROL(0)__PA ,
            analog_term => Net_12632 ,
            pad => MASK_OFF_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = MOSI_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MOSI_OUT(0)__PA ,
            input => Net_6027 ,
            pad => MOSI_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SAMPLE_RATE_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SAMPLE_RATE_CONTROL(0)__PA ,
            analog_term => Net_12631 ,
            pad => SAMPLE_RATE_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = VREF_BUFF(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => VREF_BUFF(0)__PA ,
            analog_term => Net_775 ,
            pad => VREF_BUFF(0)_PAD );
        Properties:
        {
        }

    Pin : Name = MISO_IN(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => MISO_IN(0)__PA ,
            fb => Net_6028 ,
            pad => MISO_IN(0)_PAD );

    Pin : Name = SCLK_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SCLK_OUT(0)__PA ,
            input => Net_6026 ,
            pad => SCLK_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = SS_OUT(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: INP_DIS_LO
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => SS_OUT(0)__PA ,
            input => Net_6025 ,
            pad => SS_OUT(0)_PAD );
        Properties:
        {
        }

    Pin : Name = PWM_1_CONTROL(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilitites: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => PWM_1_CONTROL(0)__PA ,
            analog_term => Net_21813 ,
            pad => PWM_1_CONTROL(0)_PAD ,
            input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:ch_addr_5\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:ch_addr_4\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:ch_addr_3\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:ch_addr_2\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:ch_addr_1\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:ch_addr_1\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq:ch_addr_0\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:load_rx_data\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\
        );
        Output = \SPI_DAC:BSPIM:load_rx_data\ (fanout=3)

    MacroCell: Name=\SPI_DAC:BSPIM:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_0\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:tx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_4\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:rx_status_6\, Mode=(Combinatorial)
        Total # of inputs        : 6
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:rx_status_4\
        );
        Output = \SPI_DAC:BSPIM:rx_status_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:ch_addr_5\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:ch_addr_4\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:ch_addr_3\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:ch_addr_2\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_12629 * !\ADC_SAR_Seq:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=MUX_BUS_0, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_0 * ADC_OUT_BUS_0
            + DIV_MASK_BUS_0 * ADC_DIV_Q_0
        );
        Output = MUX_BUS_0 (fanout=1)

    MacroCell: Name=MUX_BUS_11, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_11 * ADC_OUT_BUS_11
            + DIV_MASK_BUS_11 * ADC_DIV_Q_11
        );
        Output = MUX_BUS_11 (fanout=1)

    MacroCell: Name=MUX_BUS_10, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_10 * ADC_OUT_BUS_10
            + DIV_MASK_BUS_10 * ADC_DIV_Q_10
        );
        Output = MUX_BUS_10 (fanout=1)

    MacroCell: Name=MUX_BUS_9, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_9 * ADC_OUT_BUS_9
            + DIV_MASK_BUS_9 * ADC_DIV_Q_9
        );
        Output = MUX_BUS_9 (fanout=1)

    MacroCell: Name=MUX_BUS_8, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_8 * ADC_OUT_BUS_8
            + DIV_MASK_BUS_8 * ADC_DIV_Q_8
        );
        Output = MUX_BUS_8 (fanout=1)

    MacroCell: Name=MUX_BUS_7, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_7 * ADC_OUT_BUS_7
            + DIV_MASK_BUS_7 * ADC_DIV_Q_7
        );
        Output = MUX_BUS_7 (fanout=1)

    MacroCell: Name=MUX_BUS_5, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_5 * ADC_OUT_BUS_5
            + DIV_MASK_BUS_5 * ADC_DIV_Q_5
        );
        Output = MUX_BUS_5 (fanout=1)

    MacroCell: Name=MUX_BUS_3, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_3 * ADC_OUT_BUS_3
            + DIV_MASK_BUS_3 * ADC_DIV_Q_3
        );
        Output = MUX_BUS_3 (fanout=1)

    MacroCell: Name=MUX_BUS_6, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_6 * ADC_OUT_BUS_6
            + DIV_MASK_BUS_6 * ADC_DIV_Q_6
        );
        Output = MUX_BUS_6 (fanout=1)

    MacroCell: Name=MUX_BUS_4, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_4 * ADC_OUT_BUS_4
            + DIV_MASK_BUS_4 * ADC_DIV_Q_4
        );
        Output = MUX_BUS_4 (fanout=1)

    MacroCell: Name=\PWM_4:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_4:PWMUDB:runmode_enable\ * \PWM_4:PWMUDB:tc_i\
        );
        Output = \PWM_4:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_5:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_5:PWMUDB:runmode_enable\ * \PWM_5:PWMUDB:tc_i\
        );
        Output = \PWM_5:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_11:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_11:PWMUDB:runmode_enable\ * \PWM_11:PWMUDB:tc_i\
        );
        Output = \PWM_11:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_10:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_10:PWMUDB:runmode_enable\ * \PWM_10:PWMUDB:tc_i\
        );
        Output = \PWM_10:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_7:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_7:PWMUDB:runmode_enable\ * \PWM_7:PWMUDB:tc_i\
        );
        Output = \PWM_7:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_9:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_9:PWMUDB:runmode_enable\ * \PWM_9:PWMUDB:tc_i\
        );
        Output = \PWM_9:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_8:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_8:PWMUDB:runmode_enable\ * \PWM_8:PWMUDB:tc_i\
        );
        Output = \PWM_8:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=\PWM_6:PWMUDB:status_2\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_6:PWMUDB:runmode_enable\ * \PWM_6:PWMUDB:tc_i\
        );
        Output = \PWM_6:PWMUDB:status_2\ (fanout=1)

    MacroCell: Name=MUX_BUS_2, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_2 * tmp__cy_tff_3_clk
            + DIV_MASK_BUS_2 * cy_tff_3
        );
        Output = MUX_BUS_2 (fanout=1)

    MacroCell: Name=MUX_BUS_1, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_1 * tmp__cy_tff_2_clk
            + DIV_MASK_BUS_1 * cy_tff_2
        );
        Output = MUX_BUS_1 (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)

    MacroCell: Name=Net_6027, Mode=(D-Register)
        Total # of inputs        : 11
        Total # of product terms : 7
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 7 pterms
        !(
              !Net_6027 * !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:mosi_from_dp\
            + !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:mosi_from_dp\
        );
        Output = Net_6027 (fanout=2)

    MacroCell: Name=\SPI_DAC:BSPIM:state_2\, Mode=(D-Register)
        Total # of inputs        : 10
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              \SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              !\SPI_DAC:BSPIM:ld_ident\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_2\ (fanout=13)

    MacroCell: Name=\SPI_DAC:BSPIM:state_1\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:state_1\ (fanout=13)

    MacroCell: Name=\SPI_DAC:BSPIM:state_0\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\
            + !\SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_0\ (fanout=13)

    MacroCell: Name=Net_6025, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        !(
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * !Net_6025
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !Net_6025
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * !Net_6025
        );
        Output = Net_6025 (fanout=2)

    MacroCell: Name=\SPI_DAC:BSPIM:load_cond\, Mode=(T-Register)
        Total # of inputs        : 9
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
        );
        Output = \SPI_DAC:BSPIM:load_cond\ (fanout=1)

    MacroCell: Name=\SPI_DAC:BSPIM:ld_ident\, Mode=(T-Register)
        Total # of inputs        : 9
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:ld_ident\ (fanout=4)

    MacroCell: Name=\SPI_DAC:BSPIM:cnt_enable\, Mode=(T-Register)
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
        );
        Output = \SPI_DAC:BSPIM:cnt_enable\ (fanout=2)

    MacroCell: Name=Net_6026, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * Net_6026
        );
        Output = Net_6026 (fanout=2)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_5\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_4\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_3\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_2\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_1\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_12630, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\
        );
        Output = Net_12630 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_12630
            + \ADC_SAR_Seq:Net_3935\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ (fanout=1)

    MacroCell: Name=\PWM_4:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \PWM_4:PWMUDB:control_7\
        );
        Output = \PWM_4:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_4:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        !(
              !\PWM_4:PWMUDB:cmp1_eq\ * !\PWM_4:PWMUDB:cmp1_less\
        );
        Output = \PWM_4:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_4:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 2 pterms
        (
              !\PWM_4:PWMUDB:prevCompare1\ * \PWM_4:PWMUDB:cmp1_eq\
            + !\PWM_4:PWMUDB:prevCompare1\ * \PWM_4:PWMUDB:cmp1_less\
        );
        Output = \PWM_4:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_4, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 2 pterms
        (
              \PWM_4:PWMUDB:runmode_enable\ * \PWM_4:PWMUDB:cmp1_eq\
            + \PWM_4:PWMUDB:runmode_enable\ * \PWM_4:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_4 (fanout=1)

    MacroCell: Name=\PWM_5:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \PWM_5:PWMUDB:control_7\
        );
        Output = \PWM_5:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_5:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        !(
              !\PWM_5:PWMUDB:cmp1_eq\ * !\PWM_5:PWMUDB:cmp1_less\
        );
        Output = \PWM_5:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_5:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 2 pterms
        (
              !\PWM_5:PWMUDB:prevCompare1\ * \PWM_5:PWMUDB:cmp1_eq\
            + !\PWM_5:PWMUDB:prevCompare1\ * \PWM_5:PWMUDB:cmp1_less\
        );
        Output = \PWM_5:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_5, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 2 pterms
        (
              \PWM_5:PWMUDB:runmode_enable\ * \PWM_5:PWMUDB:cmp1_eq\
            + \PWM_5:PWMUDB:runmode_enable\ * \PWM_5:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_5 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_3, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_3)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_3 (fanout=1)

    MacroCell: Name=cy_tff_3, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(tmp__cy_tff_3_clk)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = cy_tff_3 (fanout=1)

    MacroCell: Name=cy_tff_2, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(tmp__cy_tff_2_clk)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = cy_tff_2 (fanout=1)

    MacroCell: Name=ADC_DIV_Q_0, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_0)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_0 (fanout=1)

    MacroCell: Name=\PWM_11:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \PWM_11:PWMUDB:control_7\
        );
        Output = \PWM_11:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_11:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        !(
              !\PWM_11:PWMUDB:cmp1_eq\ * !\PWM_11:PWMUDB:cmp1_less\
        );
        Output = \PWM_11:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_11:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 2 pterms
        (
              !\PWM_11:PWMUDB:prevCompare1\ * \PWM_11:PWMUDB:cmp1_eq\
            + !\PWM_11:PWMUDB:prevCompare1\ * \PWM_11:PWMUDB:cmp1_less\
        );
        Output = \PWM_11:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_11, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 2 pterms
        (
              \PWM_11:PWMUDB:runmode_enable\ * \PWM_11:PWMUDB:cmp1_eq\
            + \PWM_11:PWMUDB:runmode_enable\ * \PWM_11:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_11 (fanout=1)

    MacroCell: Name=\PWM_10:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \PWM_10:PWMUDB:control_7\
        );
        Output = \PWM_10:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_10:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        !(
              !\PWM_10:PWMUDB:cmp1_eq\ * !\PWM_10:PWMUDB:cmp1_less\
        );
        Output = \PWM_10:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_10:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 2 pterms
        (
              !\PWM_10:PWMUDB:prevCompare1\ * \PWM_10:PWMUDB:cmp1_eq\
            + !\PWM_10:PWMUDB:prevCompare1\ * \PWM_10:PWMUDB:cmp1_less\
        );
        Output = \PWM_10:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_10, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 2 pterms
        (
              \PWM_10:PWMUDB:runmode_enable\ * \PWM_10:PWMUDB:cmp1_eq\
            + \PWM_10:PWMUDB:runmode_enable\ * \PWM_10:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_10 (fanout=1)

    MacroCell: Name=\PWM_7:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \PWM_7:PWMUDB:control_7\
        );
        Output = \PWM_7:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_7:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        !(
              !\PWM_7:PWMUDB:cmp1_eq\ * !\PWM_7:PWMUDB:cmp1_less\
        );
        Output = \PWM_7:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_7:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 2 pterms
        (
              !\PWM_7:PWMUDB:prevCompare1\ * \PWM_7:PWMUDB:cmp1_eq\
            + !\PWM_7:PWMUDB:prevCompare1\ * \PWM_7:PWMUDB:cmp1_less\
        );
        Output = \PWM_7:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_7, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 2 pterms
        (
              \PWM_7:PWMUDB:runmode_enable\ * \PWM_7:PWMUDB:cmp1_eq\
            + \PWM_7:PWMUDB:runmode_enable\ * \PWM_7:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_7 (fanout=1)

    MacroCell: Name=\PWM_9:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \PWM_9:PWMUDB:control_7\
        );
        Output = \PWM_9:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_9:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              !\PWM_9:PWMUDB:cmp1_less\
        );
        Output = \PWM_9:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_9:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              !\PWM_9:PWMUDB:prevCompare1\ * !\PWM_9:PWMUDB:cmp1_less\
        );
        Output = \PWM_9:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_9, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \PWM_9:PWMUDB:runmode_enable\ * !\PWM_9:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_9 (fanout=1)

    MacroCell: Name=\PWM_8:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \PWM_8:PWMUDB:control_7\
        );
        Output = \PWM_8:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_8:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              !\PWM_8:PWMUDB:cmp1_less\
        );
        Output = \PWM_8:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_8:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              !\PWM_8:PWMUDB:prevCompare1\ * !\PWM_8:PWMUDB:cmp1_less\
        );
        Output = \PWM_8:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_8, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \PWM_8:PWMUDB:runmode_enable\ * !\PWM_8:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_8 (fanout=1)

    MacroCell: Name=\PWM_6:PWMUDB:runmode_enable\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \PWM_6:PWMUDB:control_7\
        );
        Output = \PWM_6:PWMUDB:runmode_enable\ (fanout=3)

    MacroCell: Name=\PWM_6:PWMUDB:prevCompare1\, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        !(
              !\PWM_6:PWMUDB:cmp1_eq\ * !\PWM_6:PWMUDB:cmp1_less\
        );
        Output = \PWM_6:PWMUDB:prevCompare1\ (fanout=1)

    MacroCell: Name=\PWM_6:PWMUDB:status_0\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 2 pterms
        (
              !\PWM_6:PWMUDB:prevCompare1\ * \PWM_6:PWMUDB:cmp1_eq\
            + !\PWM_6:PWMUDB:prevCompare1\ * \PWM_6:PWMUDB:cmp1_less\
        );
        Output = \PWM_6:PWMUDB:status_0\ (fanout=1)

    MacroCell: Name=ADC_DIV_Q_6, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 2 pterms
        (
              \PWM_6:PWMUDB:runmode_enable\ * \PWM_6:PWMUDB:cmp1_eq\
            + \PWM_6:PWMUDB:runmode_enable\ * \PWM_6:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_6 (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u0\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
            cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
            cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
            route_si => Net_6028 ,
            f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
            chain_out => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000000001000001000011100000000000000000100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Next in chain : \SPI_DAC:BSPIM:sR16:Dp:u1\

    datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u1\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
            cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
            cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
            route_si => Net_6028 ,
            f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
            so_comb => \SPI_DAC:BSPIM:mosi_from_dp\ ,
            f0_bus_stat_comb => \SPI_DAC:BSPIM:tx_status_2\ ,
            f0_blk_stat_comb => \SPI_DAC:BSPIM:tx_status_1\ ,
            f1_bus_stat_comb => \SPI_DAC:BSPIM:rx_status_5\ ,
            f1_blk_stat_comb => \SPI_DAC:BSPIM:rx_status_4\ ,
            chain_in => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000010001100001000111100000000000000000100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
        Previous in chain : \SPI_DAC:BSPIM:sR16:Dp:u0\

    datapathcell: Name =\PWM_4:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_4:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_4:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_4:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_4:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_4:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_4:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_4 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_4)

    datapathcell: Name =\PWM_5:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_5:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_5:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_5:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_5:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_5:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_5:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_5 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_5)

    datapathcell: Name =\PWM_11:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_11:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_11:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_11:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_11:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_11:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_11:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_11 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_11)

    datapathcell: Name =\PWM_10:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_10:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_10:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_10:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_10:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_10:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_10:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_10 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_10)

    datapathcell: Name =\PWM_7:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_7:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_7:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_7:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_7:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_7:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_7:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_7 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_7)

    datapathcell: Name =\PWM_9:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_9:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_9:PWMUDB:runmode_enable\ ,
            cl0_comb => \PWM_9:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_9:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_9:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_9 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_9)

    datapathcell: Name =\PWM_8:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_8:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_8:PWMUDB:runmode_enable\ ,
            cl0_comb => \PWM_8:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_8:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_8:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_8 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_8)

    datapathcell: Name =\PWM_6:PWMUDB:sP8:pwmdp:u0\
        PORT MAP (
            clock => ADC_CLK ,
            cs_addr_2 => \PWM_6:PWMUDB:tc_i\ ,
            cs_addr_1 => \PWM_6:PWMUDB:runmode_enable\ ,
            ce0_comb => \PWM_6:PWMUDB:cmp1_eq\ ,
            cl0_comb => \PWM_6:PWMUDB:cmp1_less\ ,
            z0_comb => \PWM_6:PWMUDB:tc_i\ ,
            f1_blk_stat_comb => \PWM_6:PWMUDB:status_3\ ,
            clk_en => ADC_OUT_BUS_6 );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_6)
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR_Seq:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => ADC_CLK ,
            status_0 => Net_12630 ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

    statuscell: Name =\DAC_IN_MSB:sts:sts_reg\
        PORT MAP (
            status_3 => MUX_BUS_11 ,
            status_2 => MUX_BUS_10 ,
            status_1 => MUX_BUS_9 ,
            status_0 => MUX_BUS_8 );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000000"
        }
        Clock Enable: True

    statuscell: Name =\DAC_IN_LSB:sts:sts_reg\
        PORT MAP (
            status_7 => MUX_BUS_7 ,
            status_6 => MUX_BUS_6 ,
            status_5 => MUX_BUS_5 ,
            status_4 => MUX_BUS_4 ,
            status_3 => MUX_BUS_3 ,
            status_2 => MUX_BUS_2 ,
            status_1 => MUX_BUS_1 ,
            status_0 => MUX_BUS_0 );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000000"
        }
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\SPI_DAC:BSPIM:TxStsReg\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            status_4 => \SPI_DAC:BSPIM:tx_status_4\ ,
            status_3 => \SPI_DAC:BSPIM:load_rx_data\ ,
            status_2 => \SPI_DAC:BSPIM:tx_status_2\ ,
            status_1 => \SPI_DAC:BSPIM:tx_status_1\ ,
            status_0 => \SPI_DAC:BSPIM:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0000000"
            cy_md_select = "0001001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\SPI_DAC:BSPIM:RxStsReg\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            status_6 => \SPI_DAC:BSPIM:rx_status_6\ ,
            status_5 => \SPI_DAC:BSPIM:rx_status_5\ ,
            status_4 => \SPI_DAC:BSPIM:rx_status_4\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "0000000"
            cy_md_select = "1000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\PWM_4:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_4:PWMUDB:status_3\ ,
            status_2 => \PWM_4:PWMUDB:status_2\ ,
            status_0 => \PWM_4:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_4 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_4)

    statusicell: Name =\PWM_5:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_5:PWMUDB:status_3\ ,
            status_2 => \PWM_5:PWMUDB:status_2\ ,
            status_0 => \PWM_5:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_5 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_5)

    statusicell: Name =\PWM_11:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_11:PWMUDB:status_3\ ,
            status_2 => \PWM_11:PWMUDB:status_2\ ,
            status_0 => \PWM_11:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_11 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_11)

    statusicell: Name =\PWM_10:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_10:PWMUDB:status_3\ ,
            status_2 => \PWM_10:PWMUDB:status_2\ ,
            status_0 => \PWM_10:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_10 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_10)

    statusicell: Name =\PWM_7:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_7:PWMUDB:status_3\ ,
            status_2 => \PWM_7:PWMUDB:status_2\ ,
            status_0 => \PWM_7:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_7 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_7)

    statusicell: Name =\PWM_9:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_9:PWMUDB:status_3\ ,
            status_2 => \PWM_9:PWMUDB:status_2\ ,
            status_0 => \PWM_9:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_9 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_9)

    statusicell: Name =\PWM_8:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_8:PWMUDB:status_3\ ,
            status_2 => \PWM_8:PWMUDB:status_2\ ,
            status_0 => \PWM_8:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_8 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_8)

    statusicell: Name =\PWM_6:PWMUDB:genblk8:stsreg\
        PORT MAP (
            clock => ADC_CLK ,
            status_3 => \PWM_6:PWMUDB:status_3\ ,
            status_2 => \PWM_6:PWMUDB:status_2\ ,
            status_0 => \PWM_6:PWMUDB:status_0\ ,
            clk_en => ADC_OUT_BUS_6 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0100111"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_6)
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq:nrq\ ,
            out => \ADC_SAR_Seq:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_SAR_Seq:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\DIV_MASK_MSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \DIV_MASK_MSB:control_7\ ,
            control_6 => \DIV_MASK_MSB:control_6\ ,
            control_5 => \DIV_MASK_MSB:control_5\ ,
            control_4 => \DIV_MASK_MSB:control_4\ ,
            control_3 => DIV_MASK_BUS_11 ,
            control_2 => DIV_MASK_BUS_10 ,
            control_1 => DIV_MASK_BUS_9 ,
            control_0 => DIV_MASK_BUS_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00001111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\DIV_MASK_LSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => DIV_MASK_BUS_7 ,
            control_6 => DIV_MASK_BUS_6 ,
            control_5 => DIV_MASK_BUS_5 ,
            control_4 => DIV_MASK_BUS_4 ,
            control_3 => DIV_MASK_BUS_3 ,
            control_2 => DIV_MASK_BUS_2 ,
            control_1 => DIV_MASK_BUS_1 ,
            control_0 => DIV_MASK_BUS_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\PWM_4:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_4:PWMUDB:control_7\ ,
            control_6 => \PWM_4:PWMUDB:control_6\ ,
            control_5 => \PWM_4:PWMUDB:control_5\ ,
            control_4 => \PWM_4:PWMUDB:control_4\ ,
            control_3 => \PWM_4:PWMUDB:control_3\ ,
            control_2 => \PWM_4:PWMUDB:control_2\ ,
            control_1 => \PWM_4:PWMUDB:control_1\ ,
            control_0 => \PWM_4:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_4 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_4)

    controlcell: Name =\PWM_5:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_5:PWMUDB:control_7\ ,
            control_6 => \PWM_5:PWMUDB:control_6\ ,
            control_5 => \PWM_5:PWMUDB:control_5\ ,
            control_4 => \PWM_5:PWMUDB:control_4\ ,
            control_3 => \PWM_5:PWMUDB:control_3\ ,
            control_2 => \PWM_5:PWMUDB:control_2\ ,
            control_1 => \PWM_5:PWMUDB:control_1\ ,
            control_0 => \PWM_5:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_5 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_5)

    controlcell: Name =\PWM_11:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_11:PWMUDB:control_7\ ,
            control_6 => \PWM_11:PWMUDB:control_6\ ,
            control_5 => \PWM_11:PWMUDB:control_5\ ,
            control_4 => \PWM_11:PWMUDB:control_4\ ,
            control_3 => \PWM_11:PWMUDB:control_3\ ,
            control_2 => \PWM_11:PWMUDB:control_2\ ,
            control_1 => \PWM_11:PWMUDB:control_1\ ,
            control_0 => \PWM_11:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_11 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_11)

    controlcell: Name =\PWM_10:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_10:PWMUDB:control_7\ ,
            control_6 => \PWM_10:PWMUDB:control_6\ ,
            control_5 => \PWM_10:PWMUDB:control_5\ ,
            control_4 => \PWM_10:PWMUDB:control_4\ ,
            control_3 => \PWM_10:PWMUDB:control_3\ ,
            control_2 => \PWM_10:PWMUDB:control_2\ ,
            control_1 => \PWM_10:PWMUDB:control_1\ ,
            control_0 => \PWM_10:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_10 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_10)

    controlcell: Name =\PWM_7:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_7:PWMUDB:control_7\ ,
            control_6 => \PWM_7:PWMUDB:control_6\ ,
            control_5 => \PWM_7:PWMUDB:control_5\ ,
            control_4 => \PWM_7:PWMUDB:control_4\ ,
            control_3 => \PWM_7:PWMUDB:control_3\ ,
            control_2 => \PWM_7:PWMUDB:control_2\ ,
            control_1 => \PWM_7:PWMUDB:control_1\ ,
            control_0 => \PWM_7:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_7 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_7)

    controlcell: Name =\PWM_9:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_9:PWMUDB:control_7\ ,
            control_6 => \PWM_9:PWMUDB:control_6\ ,
            control_5 => \PWM_9:PWMUDB:control_5\ ,
            control_4 => \PWM_9:PWMUDB:control_4\ ,
            control_3 => \PWM_9:PWMUDB:control_3\ ,
            control_2 => \PWM_9:PWMUDB:control_2\ ,
            control_1 => \PWM_9:PWMUDB:control_1\ ,
            control_0 => \PWM_9:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_9 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_9)

    controlcell: Name =\PWM_8:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_8:PWMUDB:control_7\ ,
            control_6 => \PWM_8:PWMUDB:control_6\ ,
            control_5 => \PWM_8:PWMUDB:control_5\ ,
            control_4 => \PWM_8:PWMUDB:control_4\ ,
            control_3 => \PWM_8:PWMUDB:control_3\ ,
            control_2 => \PWM_8:PWMUDB:control_2\ ,
            control_1 => \PWM_8:PWMUDB:control_1\ ,
            control_0 => \PWM_8:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_8)

    controlcell: Name =\PWM_6:PWMUDB:genblk1:ctrlreg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \PWM_6:PWMUDB:control_7\ ,
            control_6 => \PWM_6:PWMUDB:control_6\ ,
            control_5 => \PWM_6:PWMUDB:control_5\ ,
            control_4 => \PWM_6:PWMUDB:control_4\ ,
            control_3 => \PWM_6:PWMUDB:control_3\ ,
            control_2 => \PWM_6:PWMUDB:control_2\ ,
            control_1 => \PWM_6:PWMUDB:control_1\ ,
            control_0 => \PWM_6:PWMUDB:control_0\ ,
            clk_en => ADC_OUT_BUS_6 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(ADC_OUT_BUS_6)

    controlcell: Name =\ADC_1_OUT_MSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => \ADC_1_OUT_MSB:control_7\ ,
            control_6 => \ADC_1_OUT_MSB:control_6\ ,
            control_5 => \ADC_1_OUT_MSB:control_5\ ,
            control_4 => \ADC_1_OUT_MSB:control_4\ ,
            control_3 => ADC_OUT_BUS_11 ,
            control_2 => ADC_OUT_BUS_10 ,
            control_1 => ADC_OUT_BUS_9 ,
            control_0 => ADC_OUT_BUS_8 );
        Properties:
        {
            cy_ctrl_mode_0 = "00001111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True

    controlcell: Name =\ADC_1_OUT_LSB:Sync:ctrl_reg\
        PORT MAP (
            clock => ADC_CLK ,
            control_7 => ADC_OUT_BUS_7 ,
            control_6 => ADC_OUT_BUS_6 ,
            control_5 => ADC_OUT_BUS_5 ,
            control_4 => ADC_OUT_BUS_4 ,
            control_3 => ADC_OUT_BUS_3 ,
            control_2 => tmp__cy_tff_3_clk ,
            control_1 => tmp__cy_tff_2_clk ,
            control_0 => ADC_OUT_BUS_0 );
        Properties:
        {
            cy_ctrl_mode_0 = "11111111"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 1
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\SPI_DAC:BSPIM:BitCounter\
        PORT MAP (
            clock => \SPI_DAC:Net_276\ ,
            enable => \SPI_DAC:BSPIM:cnt_enable\ ,
            count_6 => \SPI_DAC:BSPIM:count_6\ ,
            count_5 => \SPI_DAC:BSPIM:count_5\ ,
            count_4 => \SPI_DAC:BSPIM:count_4\ ,
            count_3 => \SPI_DAC:BSPIM:count_3\ ,
            count_2 => \SPI_DAC:BSPIM:count_2\ ,
            count_1 => \SPI_DAC:BSPIM:count_1\ ,
            count_0 => \SPI_DAC:BSPIM:count_0\ ,
            tc => \SPI_DAC:BSPIM:cnt_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0011111"
            cy_route_en = 1
            cy_route_ld = 0
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => ADC_CLK ,
            load => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq:ch_addr_0\ ,
            tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_576 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR_Seq:IRQ\
        PORT MAP (
            interrupt => Net_12630 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    1 :    0 :    1 : 100.00 %
Interrupts                    :    2 :   30 :   32 :  6.25 %
IO                            :   17 :   55 :   72 : 23.61 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    1 :    3 :    4 : 25.00 %
UDB                           :      :      :      :        
  Macrocells                  :  146 :   46 :  192 : 76.04 %
  Unique P-terms              :  197 :  187 :  384 : 51.30 %
  Total P-terms               :  202 :      :      :        
  Datapath Cells              :   10 :   14 :   24 : 41.67 %
  Status Cells                :   16 :    8 :   24 : 66.67 %
    Status Registers          :    3 :      :      :        
    StatusI Registers         :   10 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :   15 :    9 :   24 : 62.50 %
    Control Registers         :   13 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    2 :    2 :    4 : 50.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    2 :    0 :    2 : 100.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.215ms
Tech Mapping phase: Elapsed time ==> 0s.292ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_22826" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12639" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12640" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12642" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12644" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12645" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12647" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12649" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12650" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12652" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12654" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12655" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12657" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12659" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12660" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12662" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12664" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12665" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12667" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12669" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12670" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12672" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12674" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12675" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12677" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12679" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12680" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12682" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12684" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12685" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12687" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12689" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12690" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12692" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12694" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12695" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12697" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12699" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12700" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12702" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12704" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12705" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12707" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12709" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12710" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12711" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12712" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12713" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12714" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12715" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12716" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12717" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12718" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12719" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12720" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12721" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12722" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12723" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12724" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_12725" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_7@[IOP=(4)][IoId=(7)] : AUDIO_IN(0) (fixed)
IO_4@[IOP=(4)][IoId=(4)] : MASK_OFF_CONTROL(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : MOSI_OUT(0) (fixed)
IO_0@[IOP=(4)][IoId=(0)] : SAMPLE_RATE_CONTROL(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : SCLK_OUT(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : SS_OUT(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : VREF_BUFF(0) (fixed)
IO_6@[IOP=(6)][IoId=(6)] : DIV_MUX_CONTROL(0)
IO_2@[IOP=(0)][IoId=(2)] : PWM_1_CONTROL(0)
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_1:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \ADC_SAR_1:vRef_1024\
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq:SAR:vRef_Vdda_1\
OpAmp[3]@[FFB(OpAmp,3)] : \Opamp_1:ABuf\ (OPAMP-GPIO)
OpAmp[0]@[FFB(OpAmp,0)] : \Opamp_2:ABuf\ (OPAMP-GPIO)
IO_1@[IOP=(0)][IoId=(1)] : Dedicated_Output (OPAMP-GPIO)
IO_7@[IOP=(3)][IoId=(7)] : Dedicated_Output_1 (OPAMP-GPIO)
Log: apr.M0058: The analog placement iterative improvement is 38% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 64% done. (App=cydsfit)
Analog Placement Results:
IO_7@[IOP=(4)][IoId=(7)] : AUDIO_IN(0) (fixed)
IO_4@[IOP=(4)][IoId=(4)] : MASK_OFF_CONTROL(0) (fixed)
IO_6@[IOP=(12)][IoId=(6)] : MOSI_OUT(0) (fixed)
IO_0@[IOP=(4)][IoId=(0)] : SAMPLE_RATE_CONTROL(0) (fixed)
IO_5@[IOP=(12)][IoId=(5)] : SCLK_OUT(0) (fixed)
IO_4@[IOP=(12)][IoId=(4)] : SS_OUT(0) (fixed)
IO_6@[IOP=(0)][IoId=(6)] : VREF_BUFF(0) (fixed)
IO_2@[IOP=(4)][IoId=(2)] : DIV_MUX_CONTROL(0)
IO_2@[IOP=(0)][IoId=(2)] : PWM_1_CONTROL(0)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_1:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \ADC_SAR_1:vRef_1024\
SAR[0]@[FFB(SAR,0)] : \ADC_SAR_Seq:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq:SAR:vRef_Vdda_1\
OpAmp[1]@[FFB(OpAmp,1)] : \Opamp_1:ABuf\ (OPAMP-GPIO)
OpAmp[2]@[FFB(OpAmp,2)] : \Opamp_2:ABuf\ (OPAMP-GPIO)
IO_0@[IOP=(0)][IoId=(0)] : Dedicated_Output (OPAMP-GPIO)
IO_6@[IOP=(3)][IoId=(6)] : Dedicated_Output_1 (OPAMP-GPIO)

Analog Placement phase: Elapsed time ==> 5s.696ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Net "Net_775" overuses wire "GPIO P0[0] Wire"
Net "Net_775" overuses wire "GPIO P0[0] Wire"
Net "Net_775" overuses wire "GPIO P0[0] Wire"
Net "AmuxNose::\ADC_SAR_Seq:AMuxHw_2\" overuses wire "GPIO P0[0] Wire"
Analog Routing phase: Elapsed time ==> 0s.023ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_SAR_Seq:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_12631 {
    p4_0
  }
  Net: Net_12632 {
    p4_4
  }
  Net: Net_12634 {
    p4_2
  }
  Net: Net_21813 {
    p4_6
  }
  Net: Net_22826 {
  }
  Net: Net_12639 {
  }
  Net: Net_12640 {
  }
  Net: Net_12642 {
  }
  Net: Net_12644 {
  }
  Net: Net_12645 {
  }
  Net: Net_12647 {
  }
  Net: Net_12649 {
  }
  Net: Net_12650 {
  }
  Net: Net_12652 {
  }
  Net: Net_12654 {
  }
  Net: Net_12655 {
  }
  Net: Net_12657 {
  }
  Net: Net_12659 {
  }
  Net: Net_12660 {
  }
  Net: Net_12662 {
  }
  Net: Net_12664 {
  }
  Net: Net_12665 {
  }
  Net: Net_12667 {
  }
  Net: Net_12669 {
  }
  Net: Net_12670 {
  }
  Net: Net_12672 {
  }
  Net: Net_12674 {
  }
  Net: Net_12675 {
  }
  Net: Net_12677 {
  }
  Net: Net_12679 {
  }
  Net: Net_12680 {
  }
  Net: Net_12682 {
  }
  Net: Net_12684 {
  }
  Net: Net_12685 {
  }
  Net: Net_12687 {
  }
  Net: Net_12689 {
  }
  Net: Net_12690 {
  }
  Net: Net_12692 {
  }
  Net: Net_12694 {
  }
  Net: Net_12695 {
  }
  Net: Net_12697 {
  }
  Net: Net_12699 {
  }
  Net: Net_12700 {
  }
  Net: Net_12702 {
  }
  Net: Net_12704 {
  }
  Net: Net_12705 {
  }
  Net: Net_12707 {
  }
  Net: Net_12709 {
  }
  Net: Net_12710 {
  }
  Net: Net_12711 {
  }
  Net: Net_12712 {
  }
  Net: Net_12713 {
  }
  Net: Net_12714 {
  }
  Net: Net_12715 {
  }
  Net: Net_12716 {
  }
  Net: Net_12717 {
  }
  Net: Net_12718 {
  }
  Net: Net_12719 {
  }
  Net: Net_12720 {
  }
  Net: Net_12721 {
  }
  Net: Net_12722 {
  }
  Net: Net_12723 {
  }
  Net: Net_12724 {
  }
  Net: Net_12725 {
  }
  Net: Net_806 {
    opamp_1_vplus
    agr7_x_opamp_1_vplus
    agr7
    agl7_x_agr7
    agl7
    agl7_x_p4_7
    p4_7
  }
  Net: Net_775 {
    p0_0
    amuxbusl_x_p0_0
    amuxbusl
    amuxbusl_x_p0_6
    p0_6
    opamp_2_vminus_x_p0_0
    opamp_2_vminus
  }
  Net: Net_800 {
    p3_6
    opamp_1_vminus_x_p3_6
    opamp_1_vminus
    agr6_x_p3_6
    agr6
    agr6_x_sar_1_vplus
    sar_1_vplus
  }
  Net: \ADC_SAR_1:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC_SAR_1:Net_209\ {
  }
  Net: \ADC_SAR_1:Net_233\ {
    opamp_2_vplus
    opamp_02_vref_1024_x_opamp_2_vplus
    opamp_02_vref_1024
    common_vref_1024
    sar_1_vref_1024
    sar_1_vref_x_sar_1_vref_1024
    sar_1_vref
  }
  Net: \ADC_SAR_Seq:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_SAR_Seq:SAR:Net_209\ {
  }
  Net: \ADC_SAR_Seq:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: AmuxNet::\ADC_SAR_Seq:AMuxHw_2\ {
    sar_0_vplus
    agl4_x_sar_0_vplus
    agl4
    agl4_x_p4_4
    agl6_x_sar_0_vplus
    agl6
    agl6_x_p4_6
    agl4_x_p4_0
    agl6_x_p4_2
    p4_4
    p4_6
    p4_0
    p4_2
  }
}
Map of item to net {
  opamp_1_vplus                                    -> Net_806
  agr7_x_opamp_1_vplus                             -> Net_806
  agr7                                             -> Net_806
  agl7_x_agr7                                      -> Net_806
  agl7                                             -> Net_806
  agl7_x_p4_7                                      -> Net_806
  p4_7                                             -> Net_806
  p0_0                                             -> Net_775
  amuxbusl_x_p0_0                                  -> Net_775
  amuxbusl                                         -> Net_775
  amuxbusl_x_p0_6                                  -> Net_775
  p0_6                                             -> Net_775
  opamp_2_vminus_x_p0_0                            -> Net_775
  opamp_2_vminus                                   -> Net_775
  p3_6                                             -> Net_800
  opamp_1_vminus_x_p3_6                            -> Net_800
  opamp_1_vminus                                   -> Net_800
  agr6_x_p3_6                                      -> Net_800
  agr6                                             -> Net_800
  agr6_x_sar_1_vplus                               -> Net_800
  sar_1_vplus                                      -> Net_800
  sar_1_vrefhi                                     -> \ADC_SAR_1:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC_SAR_1:Net_126\
  sar_1_vminus                                     -> \ADC_SAR_1:Net_126\
  opamp_2_vplus                                    -> \ADC_SAR_1:Net_233\
  opamp_02_vref_1024_x_opamp_2_vplus               -> \ADC_SAR_1:Net_233\
  opamp_02_vref_1024                               -> \ADC_SAR_1:Net_233\
  common_vref_1024                                 -> \ADC_SAR_1:Net_233\
  sar_1_vref_1024                                  -> \ADC_SAR_1:Net_233\
  sar_1_vref_x_sar_1_vref_1024                     -> \ADC_SAR_1:Net_233\
  sar_1_vref                                       -> \ADC_SAR_1:Net_233\
  sar_0_vrefhi                                     -> \ADC_SAR_Seq:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_SAR_Seq:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_SAR_Seq:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_SAR_Seq:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vref                                       -> \ADC_SAR_Seq:SAR:Net_235\
  sar_0_vplus                                      -> \ADC_SAR_Seq:Net_2803\
  p4_0                                             -> Net_12631
  p4_4                                             -> Net_12632
  p4_2                                             -> Net_12634
  p4_6                                             -> Net_21813
  agl4_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl4                                             -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl4_x_p4_4                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl6_x_sar_0_vplus                               -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl6                                             -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl6_x_p4_6                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl4_x_p4_0                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agl6_x_p4_2                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_SAR_Seq:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_12631
      Outer: agl4_x_p4_0
      Inner: __open__
      Path {
        p4_0
        agl4_x_p4_0
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_12632
      Outer: agl4_x_p4_4
      Inner: __open__
      Path {
        p4_4
        agl4_x_p4_4
        agl4
        agl4_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_12634
      Outer: agl6_x_p4_2
      Inner: __open__
      Path {
        p4_2
        agl6_x_p4_2
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_21813
      Outer: agl6_x_p4_6
      Inner: __open__
      Path {
        p4_6
        agl6_x_p4_6
        agl6
        agl6_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_22826
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_12639
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_12640
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_12642
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_12644
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_12645
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_12647
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_12649
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_12650
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_12652
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_12654
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_12655
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_12657
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_12659
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_12660
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_12662
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_12664
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_12665
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_12667
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_12669
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_12670
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_12672
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_12674
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_12675
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_12677
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_12679
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_12680
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_12682
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_12684
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_12685
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_12687
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_12689
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_12690
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_12692
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_12694
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_12695
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_12697
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_12699
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_12700
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_12702
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_12704
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_12705
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_12707
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_12709
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_12710
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_12711
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_12712
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_12713
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_12714
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_12715
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_12716
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_12717
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_12718
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_12719
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_12720
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_12721
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_12722
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_12723
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_12724
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_12725
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.314ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 6.7 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   47 :    1 :   48 :  97.92%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            6.55
                   Pterms :            4.23
               Macrocells :            3.11
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.003ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.275ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         24 :       9.75 :       6.08
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,0)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

synccell: Name =\ADC_SAR_Seq:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq:nrq\ ,
        out => \ADC_SAR_Seq:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=4, #inputs=9, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_12629 * !\ADC_SAR_Seq:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

statuscell: Name =\ADC_SAR_Seq:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => ADC_CLK ,
        status_0 => Net_12630 ,
        clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u1\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
        cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
        cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
        route_si => Net_6028 ,
        f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
        so_comb => \SPI_DAC:BSPIM:mosi_from_dp\ ,
        f0_bus_stat_comb => \SPI_DAC:BSPIM:tx_status_2\ ,
        f0_blk_stat_comb => \SPI_DAC:BSPIM:tx_status_1\ ,
        f1_bus_stat_comb => \SPI_DAC:BSPIM:rx_status_5\ ,
        f1_blk_stat_comb => \SPI_DAC:BSPIM:rx_status_4\ ,
        chain_in => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000010001100001000111100000000000000000100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Previous in chain : \SPI_DAC:BSPIM:sR16:Dp:u0\

statusicell: Name =\SPI_DAC:BSPIM:TxStsReg\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        status_4 => \SPI_DAC:BSPIM:tx_status_4\ ,
        status_3 => \SPI_DAC:BSPIM:load_rx_data\ ,
        status_2 => \SPI_DAC:BSPIM:tx_status_2\ ,
        status_1 => \SPI_DAC:BSPIM:tx_status_1\ ,
        status_0 => \SPI_DAC:BSPIM:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0000000"
        cy_md_select = "0001001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=2, #inputs=5, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=Net_6026, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * Net_6026
        );
        Output = Net_6026 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:cnt_enable\, Mode=(T-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:cnt_enable\
        );
        Output = \SPI_DAC:BSPIM:cnt_enable\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,5)][LB=1] #macrocells=3, #inputs=5, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\SPI_DAC:BSPIM:state_0\, Mode=(T-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 4
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\
            + !\SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_0\ (fanout=13)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\SPI_DAC:BSPIM:tx_status_0\, Mode=(Combinatorial) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=Net_6025, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        !(
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * !Net_6025
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !Net_6025
            + \SPI_DAC:BSPIM:state_1\ * \SPI_DAC:BSPIM:state_0\ * !Net_6025
        );
        Output = Net_6025 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=4, #inputs=5, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_6, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 2 pterms
        (
              \PWM_6:PWMUDB:runmode_enable\ * \PWM_6:PWMUDB:cmp1_eq\
            + \PWM_6:PWMUDB:runmode_enable\ * \PWM_6:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_6 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_6:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        !(
              !\PWM_6:PWMUDB:cmp1_eq\ * !\PWM_6:PWMUDB:cmp1_less\
        );
        Output = \PWM_6:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_6:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 2 pterms
        (
              !\PWM_6:PWMUDB:prevCompare1\ * \PWM_6:PWMUDB:cmp1_eq\
            + !\PWM_6:PWMUDB:prevCompare1\ * \PWM_6:PWMUDB:cmp1_less\
        );
        Output = \PWM_6:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_6:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_6)
        Main Equation            : 1 pterm
        (
              \PWM_6:PWMUDB:control_7\
        );
        Output = \PWM_6:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=3, #inputs=10, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\PWM_6:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_6:PWMUDB:runmode_enable\ * \PWM_6:PWMUDB:tc_i\
        );
        Output = \PWM_6:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_4\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_6:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_6:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_6:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_6:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_6:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_6:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_6:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_6 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_6)

statusicell: Name =\PWM_6:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_6:PWMUDB:status_3\ ,
        status_2 => \PWM_6:PWMUDB:status_2\ ,
        status_0 => \PWM_6:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_6 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_6)

controlcell: Name =\PWM_6:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_6:PWMUDB:control_7\ ,
        control_6 => \PWM_6:PWMUDB:control_6\ ,
        control_5 => \PWM_6:PWMUDB:control_5\ ,
        control_4 => \PWM_6:PWMUDB:control_4\ ,
        control_3 => \PWM_6:PWMUDB:control_3\ ,
        control_2 => \PWM_6:PWMUDB:control_2\ ,
        control_1 => \PWM_6:PWMUDB:control_1\ ,
        control_0 => \PWM_6:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_6 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_6)

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=4, #inputs=5, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_5, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 2 pterms
        (
              \PWM_5:PWMUDB:runmode_enable\ * \PWM_5:PWMUDB:cmp1_eq\
            + \PWM_5:PWMUDB:runmode_enable\ * \PWM_5:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_5 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_5:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        !(
              !\PWM_5:PWMUDB:cmp1_eq\ * !\PWM_5:PWMUDB:cmp1_less\
        );
        Output = \PWM_5:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_5:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 2 pterms
        (
              !\PWM_5:PWMUDB:prevCompare1\ * \PWM_5:PWMUDB:cmp1_eq\
            + !\PWM_5:PWMUDB:prevCompare1\ * \PWM_5:PWMUDB:cmp1_less\
        );
        Output = \PWM_5:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_5:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_5)
        Main Equation            : 1 pterm
        (
              \PWM_5:PWMUDB:control_7\
        );
        Output = \PWM_5:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=3, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_5, Mode=(Combinatorial) @ [UDB=(1,1)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_5 * ADC_OUT_BUS_5
            + DIV_MASK_BUS_5 * ADC_DIV_Q_5
        );
        Output = MUX_BUS_5 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_5:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_5:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_5:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_5:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_5:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_5:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_5:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_5 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_5)

statusicell: Name =\PWM_5:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_5:PWMUDB:status_3\ ,
        status_2 => \PWM_5:PWMUDB:status_2\ ,
        status_0 => \PWM_5:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_5 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_5)

controlcell: Name =\PWM_5:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_5:PWMUDB:control_7\ ,
        control_6 => \PWM_5:PWMUDB:control_6\ ,
        control_5 => \PWM_5:PWMUDB:control_5\ ,
        control_4 => \PWM_5:PWMUDB:control_4\ ,
        control_3 => \PWM_5:PWMUDB:control_3\ ,
        control_2 => \PWM_5:PWMUDB:control_2\ ,
        control_1 => \PWM_5:PWMUDB:control_1\ ,
        control_0 => \PWM_5:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_5 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_5)

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=4, #inputs=6, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_7, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 2 pterms
        (
              \PWM_7:PWMUDB:runmode_enable\ * \PWM_7:PWMUDB:cmp1_eq\
            + \PWM_7:PWMUDB:runmode_enable\ * \PWM_7:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_7 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_7:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        !(
              !\PWM_7:PWMUDB:cmp1_eq\ * !\PWM_7:PWMUDB:cmp1_less\
        );
        Output = \PWM_7:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_7:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 2 pterms
        (
              !\PWM_7:PWMUDB:prevCompare1\ * \PWM_7:PWMUDB:cmp1_eq\
            + !\PWM_7:PWMUDB:prevCompare1\ * \PWM_7:PWMUDB:cmp1_less\
        );
        Output = \PWM_7:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_5:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_5:PWMUDB:runmode_enable\ * \PWM_5:PWMUDB:tc_i\
        );
        Output = \PWM_5:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,2)][LB=1] #macrocells=3, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\PWM_7:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_7:PWMUDB:runmode_enable\ * \PWM_7:PWMUDB:tc_i\
        );
        Output = \PWM_7:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_7, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_7 * ADC_OUT_BUS_7
            + DIV_MASK_BUS_7 * ADC_DIV_Q_7
        );
        Output = MUX_BUS_7 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_7:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_7)
        Main Equation            : 1 pterm
        (
              \PWM_7:PWMUDB:control_7\
        );
        Output = \PWM_7:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_7:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_7:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_7:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_7:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_7:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_7:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_7:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_7 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_7)

statusicell: Name =\PWM_7:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_7:PWMUDB:status_3\ ,
        status_2 => \PWM_7:PWMUDB:status_2\ ,
        status_0 => \PWM_7:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_7 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_7)

controlcell: Name =\PWM_7:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_7:PWMUDB:control_7\ ,
        control_6 => \PWM_7:PWMUDB:control_6\ ,
        control_5 => \PWM_7:PWMUDB:control_5\ ,
        control_4 => \PWM_7:PWMUDB:control_4\ ,
        control_3 => \PWM_7:PWMUDB:control_3\ ,
        control_2 => \PWM_7:PWMUDB:control_2\ ,
        control_1 => \PWM_7:PWMUDB:control_1\ ,
        control_0 => \PWM_7:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_7 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_7)

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:ch_addr_5\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:ch_addr_4\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:ch_addr_3\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:ch_addr_2\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:ch_addr_1\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:ch_addr_1\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq:ch_addr_0\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_0, Mode=(T-Register) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_0)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_0 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,3)][LB=1] #macrocells=3, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=Net_6027, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 7
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 7 pterms
        !(
              !Net_6027 * !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:mosi_from_dp\
            + !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:mosi_from_dp\
        );
        Output = Net_6027 (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\SPI_DAC:BSPIM:tx_status_4\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\
        );
        Output = \SPI_DAC:BSPIM:tx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:load_rx_data\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\
        );
        Output = \SPI_DAC:BSPIM:load_rx_data\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

count7cell: Name =\ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => ADC_CLK ,
        load => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq:ch_addr_0\ ,
        tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=3, #inputs=3, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_1\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_3\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

datapathcell: Name =\SPI_DAC:BSPIM:sR16:Dp:u0\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        cs_addr_2 => \SPI_DAC:BSPIM:state_2\ ,
        cs_addr_1 => \SPI_DAC:BSPIM:state_1\ ,
        cs_addr_0 => \SPI_DAC:BSPIM:state_0\ ,
        route_si => Net_6028 ,
        f1_load => \SPI_DAC:BSPIM:load_rx_data\ ,
        chain_out => \SPI_DAC:BSPIM:sR16:Dp:carry\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000001100000000000001010000000001000100010000000000011100000000010001000000000000000101000000000000010100000011111111000000001111111111111111000000000000001000001000011100000000000000000100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True
    Next in chain : \SPI_DAC:BSPIM:sR16:Dp:u1\

statusicell: Name =\SPI_DAC:BSPIM:RxStsReg\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        status_6 => \SPI_DAC:BSPIM:rx_status_6\ ,
        status_5 => \SPI_DAC:BSPIM:rx_status_5\ ,
        status_4 => \SPI_DAC:BSPIM:rx_status_4\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "0000000"
        cy_md_select = "1000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=3, #inputs=12, #pterms=6
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\SPI_DAC:BSPIM:rx_status_6\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:rx_status_4\
        );
        Output = \SPI_DAC:BSPIM:rx_status_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:load_cond\, Mode=(T-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 9
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
            + \SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              !\SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              \SPI_DAC:BSPIM:load_cond\
        );
        Output = \SPI_DAC:BSPIM:load_cond\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_10:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(1,5)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_10:PWMUDB:runmode_enable\ * \PWM_10:PWMUDB:tc_i\
        );
        Output = \PWM_10:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,5)][LB=1] #macrocells=3, #inputs=10, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\SPI_DAC:BSPIM:ld_ident\, Mode=(T-Register) @ [UDB=(1,5)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * \SPI_DAC:BSPIM:ld_ident\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * \SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:ld_ident\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\SPI_DAC:BSPIM:state_1\, Mode=(T-Register) @ [UDB=(1,5)][LB=1][MC=1]
        Total # of inputs        : 10
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
            + \SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_0\
            + \SPI_DAC:BSPIM:state_1\ * !\SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              !\SPI_DAC:BSPIM:count_2\ * \SPI_DAC:BSPIM:count_1\ * 
              !\SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:ld_ident\
        );
        Output = \SPI_DAC:BSPIM:state_1\ (fanout=13)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\SPI_DAC:BSPIM:state_2\, Mode=(D-Register) @ [UDB=(1,5)][LB=1][MC=2]
        Total # of inputs        : 10
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\SPI_DAC:Net_276\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\SPI_DAC:BSPIM:state_2\ * !\SPI_DAC:BSPIM:state_1\ * 
              \SPI_DAC:BSPIM:state_0\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_1\ * 
              !\SPI_DAC:BSPIM:state_0\ * !\SPI_DAC:BSPIM:count_4\ * 
              !\SPI_DAC:BSPIM:count_3\ * !\SPI_DAC:BSPIM:count_2\ * 
              \SPI_DAC:BSPIM:count_1\ * !\SPI_DAC:BSPIM:count_0\ * 
              !\SPI_DAC:BSPIM:ld_ident\
            + !\SPI_DAC:BSPIM:state_2\ * \SPI_DAC:BSPIM:state_0\ * 
              !\SPI_DAC:BSPIM:count_4\ * !\SPI_DAC:BSPIM:count_3\ * 
              \SPI_DAC:BSPIM:count_2\ * !\SPI_DAC:BSPIM:count_1\ * 
              \SPI_DAC:BSPIM:count_0\ * !\SPI_DAC:BSPIM:tx_status_1\
        );
        Output = \SPI_DAC:BSPIM:state_2\ (fanout=13)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

count7cell: Name =\SPI_DAC:BSPIM:BitCounter\
    PORT MAP (
        clock => \SPI_DAC:Net_276\ ,
        enable => \SPI_DAC:BSPIM:cnt_enable\ ,
        count_6 => \SPI_DAC:BSPIM:count_6\ ,
        count_5 => \SPI_DAC:BSPIM:count_5\ ,
        count_4 => \SPI_DAC:BSPIM:count_4\ ,
        count_3 => \SPI_DAC:BSPIM:count_3\ ,
        count_2 => \SPI_DAC:BSPIM:count_2\ ,
        count_1 => \SPI_DAC:BSPIM:count_1\ ,
        count_0 => \SPI_DAC:BSPIM:count_0\ ,
        tc => \SPI_DAC:BSPIM:cnt_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0011111"
        cy_route_en = 1
        cy_route_ld = 0
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=3, #inputs=3, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_8, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \PWM_8:PWMUDB:runmode_enable\ * !\PWM_8:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_8 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_8:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              !\PWM_8:PWMUDB:prevCompare1\ * !\PWM_8:PWMUDB:cmp1_less\
        );
        Output = \PWM_8:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_8:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              !\PWM_8:PWMUDB:cmp1_less\
        );
        Output = \PWM_8:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=3, #inputs=2, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_3, Mode=(T-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_3)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = ADC_DIV_Q_3 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_8:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_8:PWMUDB:runmode_enable\ * \PWM_8:PWMUDB:tc_i\
        );
        Output = \PWM_8:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_8:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_8:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_8:PWMUDB:runmode_enable\ ,
        cl0_comb => \PWM_8:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_8:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_8:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_8 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_8)

statusicell: Name =\PWM_8:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_8:PWMUDB:status_3\ ,
        status_2 => \PWM_8:PWMUDB:status_2\ ,
        status_0 => \PWM_8:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_8 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_8)

controlcell: Name =\PWM_8:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_8:PWMUDB:control_7\ ,
        control_6 => \PWM_8:PWMUDB:control_6\ ,
        control_5 => \PWM_8:PWMUDB:control_5\ ,
        control_4 => \PWM_8:PWMUDB:control_4\ ,
        control_3 => \PWM_8:PWMUDB:control_3\ ,
        control_2 => \PWM_8:PWMUDB:control_2\ ,
        control_1 => \PWM_8:PWMUDB:control_1\ ,
        control_0 => \PWM_8:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_8)

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=9, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=MUX_BUS_3, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_3 * ADC_OUT_BUS_3
            + DIV_MASK_BUS_3 * ADC_DIV_Q_3
        );
        Output = MUX_BUS_3 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=cy_tff_2, Mode=(T-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(tmp__cy_tff_2_clk)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = cy_tff_2 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=MUX_BUS_1, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_1 * tmp__cy_tff_2_clk
            + DIV_MASK_BUS_1 * cy_tff_2
        );
        Output = MUX_BUS_1 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=MUX_BUS_6, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_6 * ADC_OUT_BUS_6
            + DIV_MASK_BUS_6 * ADC_DIV_Q_6
        );
        Output = MUX_BUS_6 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=1, #inputs=1, #pterms=1
{
    [McSlotId=0]:     MacroCell: Name=\PWM_8:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_8)
        Main Equation            : 1 pterm
        (
              \PWM_8:PWMUDB:control_7\
        );
        Output = \PWM_8:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

statuscell: Name =\DAC_IN_LSB:sts:sts_reg\
    PORT MAP (
        status_7 => MUX_BUS_7 ,
        status_6 => MUX_BUS_6 ,
        status_5 => MUX_BUS_5 ,
        status_4 => MUX_BUS_4 ,
        status_3 => MUX_BUS_3 ,
        status_2 => MUX_BUS_2 ,
        status_1 => MUX_BUS_1 ,
        status_0 => MUX_BUS_0 );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000000"
    }
    Clock Enable: True

controlcell: Name =\ADC_1_OUT_LSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => ADC_OUT_BUS_7 ,
        control_6 => ADC_OUT_BUS_6 ,
        control_5 => ADC_OUT_BUS_5 ,
        control_4 => ADC_OUT_BUS_4 ,
        control_3 => ADC_OUT_BUS_3 ,
        control_2 => tmp__cy_tff_3_clk ,
        control_1 => tmp__cy_tff_2_clk ,
        control_0 => ADC_OUT_BUS_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=3, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=cy_tff_3, Mode=(T-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(tmp__cy_tff_3_clk)
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = cy_tff_3 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_8, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_8 * ADC_OUT_BUS_8
            + DIV_MASK_BUS_8 * ADC_DIV_Q_8
        );
        Output = MUX_BUS_8 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=MUX_BUS_4, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_4 * ADC_OUT_BUS_4
            + DIV_MASK_BUS_4 * ADC_DIV_Q_4
        );
        Output = MUX_BUS_4 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,2)][LB=1] #macrocells=2, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=MUX_BUS_0, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_0 * ADC_OUT_BUS_0
            + DIV_MASK_BUS_0 * ADC_DIV_Q_0
        );
        Output = MUX_BUS_0 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_2, Mode=(Combinatorial) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_2 * tmp__cy_tff_3_clk
            + DIV_MASK_BUS_2 * cy_tff_3
        );
        Output = MUX_BUS_2 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_4:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_4:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_4:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_4:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_4:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_4:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_4:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_4 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_4)

statuscell: Name =\DAC_IN_MSB:sts:sts_reg\
    PORT MAP (
        status_3 => MUX_BUS_11 ,
        status_2 => MUX_BUS_10 ,
        status_1 => MUX_BUS_9 ,
        status_0 => MUX_BUS_8 );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000000"
    }
    Clock Enable: True

controlcell: Name =\DIV_MASK_LSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => DIV_MASK_BUS_7 ,
        control_6 => DIV_MASK_BUS_6 ,
        control_5 => DIV_MASK_BUS_5 ,
        control_4 => DIV_MASK_BUS_4 ,
        control_3 => DIV_MASK_BUS_3 ,
        control_2 => DIV_MASK_BUS_2 ,
        control_1 => DIV_MASK_BUS_1 ,
        control_0 => DIV_MASK_BUS_0 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=4, #inputs=5, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\PWM_4:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 2 pterms
        (
              !\PWM_4:PWMUDB:prevCompare1\ * \PWM_4:PWMUDB:cmp1_eq\
            + !\PWM_4:PWMUDB:prevCompare1\ * \PWM_4:PWMUDB:cmp1_less\
        );
        Output = \PWM_4:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_4:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        !(
              !\PWM_4:PWMUDB:cmp1_eq\ * !\PWM_4:PWMUDB:cmp1_less\
        );
        Output = \PWM_4:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=ADC_DIV_Q_4, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 2 pterms
        (
              \PWM_4:PWMUDB:runmode_enable\ * \PWM_4:PWMUDB:cmp1_eq\
            + \PWM_4:PWMUDB:runmode_enable\ * \PWM_4:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_4 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_4:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_4:PWMUDB:runmode_enable\ * \PWM_4:PWMUDB:tc_i\
        );
        Output = \PWM_4:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,3)][LB=1] #macrocells=3, #inputs=7, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_2\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_10, Mode=(Combinatorial) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_10 * ADC_OUT_BUS_10
            + DIV_MASK_BUS_10 * ADC_DIV_Q_10
        );
        Output = MUX_BUS_10 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=MUX_BUS_9, Mode=(Combinatorial) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_9 * ADC_OUT_BUS_9
            + DIV_MASK_BUS_9 * ADC_DIV_Q_9
        );
        Output = MUX_BUS_9 (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_11:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_11:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_11:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_11:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_11:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_11:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_11:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_11 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_11)

statusicell: Name =\PWM_4:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_4:PWMUDB:status_3\ ,
        status_2 => \PWM_4:PWMUDB:status_2\ ,
        status_0 => \PWM_4:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_4 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_4)

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=4, #inputs=5, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_11, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 2 pterms
        (
              \PWM_11:PWMUDB:runmode_enable\ * \PWM_11:PWMUDB:cmp1_eq\
            + \PWM_11:PWMUDB:runmode_enable\ * \PWM_11:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_11 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_11:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        !(
              !\PWM_11:PWMUDB:cmp1_eq\ * !\PWM_11:PWMUDB:cmp1_less\
        );
        Output = \PWM_11:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_11:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 2 pterms
        (
              !\PWM_11:PWMUDB:prevCompare1\ * \PWM_11:PWMUDB:cmp1_eq\
            + !\PWM_11:PWMUDB:prevCompare1\ * \PWM_11:PWMUDB:cmp1_less\
        );
        Output = \PWM_11:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_11:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_11)
        Main Equation            : 1 pterm
        (
              \PWM_11:PWMUDB:control_7\
        );
        Output = \PWM_11:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=3, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\PWM_11:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_11:PWMUDB:runmode_enable\ * \PWM_11:PWMUDB:tc_i\
        );
        Output = \PWM_11:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MUX_BUS_11, Mode=(Combinatorial) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !DIV_MASK_BUS_11 * ADC_OUT_BUS_11
            + DIV_MASK_BUS_11 * ADC_DIV_Q_11
        );
        Output = MUX_BUS_11 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\PWM_4:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_4)
        Main Equation            : 1 pterm
        (
              \PWM_4:PWMUDB:control_7\
        );
        Output = \PWM_4:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }
}

datapathcell: Name =\PWM_10:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_10:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_10:PWMUDB:runmode_enable\ ,
        ce0_comb => \PWM_10:PWMUDB:cmp1_eq\ ,
        cl0_comb => \PWM_10:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_10:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_10:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_10 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_10)

controlcell: Name =\DIV_MASK_MSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \DIV_MASK_MSB:control_7\ ,
        control_6 => \DIV_MASK_MSB:control_6\ ,
        control_5 => \DIV_MASK_MSB:control_5\ ,
        control_4 => \DIV_MASK_MSB:control_4\ ,
        control_3 => DIV_MASK_BUS_11 ,
        control_2 => DIV_MASK_BUS_10 ,
        control_1 => DIV_MASK_BUS_9 ,
        control_0 => DIV_MASK_BUS_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00001111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=4, #inputs=5, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=ADC_DIV_Q_10, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 2 pterms
        (
              \PWM_10:PWMUDB:runmode_enable\ * \PWM_10:PWMUDB:cmp1_eq\
            + \PWM_10:PWMUDB:runmode_enable\ * \PWM_10:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_10 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_10:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        (
              \PWM_10:PWMUDB:control_7\
        );
        Output = \PWM_10:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_10:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 1 pterm
        !(
              !\PWM_10:PWMUDB:cmp1_eq\ * !\PWM_10:PWMUDB:cmp1_less\
        );
        Output = \PWM_10:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_10:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_10)
        Main Equation            : 2 pterms
        (
              !\PWM_10:PWMUDB:prevCompare1\ * \PWM_10:PWMUDB:cmp1_eq\
            + !\PWM_10:PWMUDB:prevCompare1\ * \PWM_10:PWMUDB:cmp1_less\
        );
        Output = \PWM_10:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:ch_addr_5\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:ch_addr_4\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:ch_addr_3\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:ch_addr_2\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\PWM_10:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_10:PWMUDB:status_3\ ,
        status_2 => \PWM_10:PWMUDB:status_2\ ,
        status_0 => \PWM_10:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_10 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_10)

controlcell: Name =\PWM_10:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_10:PWMUDB:control_7\ ,
        control_6 => \PWM_10:PWMUDB:control_6\ ,
        control_5 => \PWM_10:PWMUDB:control_5\ ,
        control_4 => \PWM_10:PWMUDB:control_4\ ,
        control_3 => \PWM_10:PWMUDB:control_3\ ,
        control_2 => \PWM_10:PWMUDB:control_2\ ,
        control_1 => \PWM_10:PWMUDB:control_1\ ,
        control_0 => \PWM_10:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_10 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_10)

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=5, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\PWM_9:PWMUDB:status_0\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              !\PWM_9:PWMUDB:prevCompare1\ * !\PWM_9:PWMUDB:cmp1_less\
        );
        Output = \PWM_9:PWMUDB:status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\PWM_9:PWMUDB:runmode_enable\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \PWM_9:PWMUDB:control_7\
        );
        Output = \PWM_9:PWMUDB:runmode_enable\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\PWM_9:PWMUDB:status_2\, Mode=(Combinatorial) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \PWM_9:PWMUDB:runmode_enable\ * \PWM_9:PWMUDB:tc_i\
        );
        Output = \PWM_9:PWMUDB:status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\PWM_9:PWMUDB:prevCompare1\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              !\PWM_9:PWMUDB:cmp1_less\
        );
        Output = \PWM_9:PWMUDB:prevCompare1\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=1, #inputs=2, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=ADC_DIV_Q_9, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(ADC_OUT_BUS_9)
        Main Equation            : 1 pterm
        (
              \PWM_9:PWMUDB:runmode_enable\ * !\PWM_9:PWMUDB:cmp1_less\
        );
        Output = ADC_DIV_Q_9 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\PWM_9:PWMUDB:sP8:pwmdp:u0\
    PORT MAP (
        clock => ADC_CLK ,
        cs_addr_2 => \PWM_9:PWMUDB:tc_i\ ,
        cs_addr_1 => \PWM_9:PWMUDB:runmode_enable\ ,
        cl0_comb => \PWM_9:PWMUDB:cmp1_less\ ,
        z0_comb => \PWM_9:PWMUDB:tc_i\ ,
        f1_blk_stat_comb => \PWM_9:PWMUDB:status_3\ ,
        clk_en => ADC_OUT_BUS_9 );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000001000000000000001100000001000000010000000000000011000000000000001100000000000000110000000000000011000000000000001100000011111111000000001111111111111111101000000000000000000100000000000000000000011000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_9)

statusicell: Name =\PWM_9:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_9:PWMUDB:status_3\ ,
        status_2 => \PWM_9:PWMUDB:status_2\ ,
        status_0 => \PWM_9:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_9 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_9)

controlcell: Name =\PWM_9:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_9:PWMUDB:control_7\ ,
        control_6 => \PWM_9:PWMUDB:control_6\ ,
        control_5 => \PWM_9:PWMUDB:control_5\ ,
        control_4 => \PWM_9:PWMUDB:control_4\ ,
        control_3 => \PWM_9:PWMUDB:control_3\ ,
        control_2 => \PWM_9:PWMUDB:control_2\ ,
        control_1 => \PWM_9:PWMUDB:control_1\ ,
        control_0 => \PWM_9:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_9 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_9)

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\PWM_4:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_4:PWMUDB:control_7\ ,
        control_6 => \PWM_4:PWMUDB:control_6\ ,
        control_5 => \PWM_4:PWMUDB:control_5\ ,
        control_4 => \PWM_4:PWMUDB:control_4\ ,
        control_3 => \PWM_4:PWMUDB:control_3\ ,
        control_2 => \PWM_4:PWMUDB:control_2\ ,
        control_1 => \PWM_4:PWMUDB:control_1\ ,
        control_0 => \PWM_4:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_4 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_4)

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=Net_12630, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\
        );
        Output = Net_12630 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,2)][LB=1] #macrocells=1, #inputs=3, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_12630
            + \ADC_SAR_Seq:Net_3935\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

controlcell: Name =\PWM_11:PWMUDB:genblk1:ctrlreg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \PWM_11:PWMUDB:control_7\ ,
        control_6 => \PWM_11:PWMUDB:control_6\ ,
        control_5 => \PWM_11:PWMUDB:control_5\ ,
        control_4 => \PWM_11:PWMUDB:control_4\ ,
        control_3 => \PWM_11:PWMUDB:control_3\ ,
        control_2 => \PWM_11:PWMUDB:control_2\ ,
        control_1 => \PWM_11:PWMUDB:control_1\ ,
        control_0 => \PWM_11:PWMUDB:control_0\ ,
        clk_en => ADC_OUT_BUS_11 );
    Properties:
    {
        cy_ctrl_mode_0 = "11111111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_11)

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\ADC_1_OUT_MSB:Sync:ctrl_reg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \ADC_1_OUT_MSB:control_7\ ,
        control_6 => \ADC_1_OUT_MSB:control_6\ ,
        control_5 => \ADC_1_OUT_MSB:control_5\ ,
        control_4 => \ADC_1_OUT_MSB:control_4\ ,
        control_3 => ADC_OUT_BUS_11 ,
        control_2 => ADC_OUT_BUS_10 ,
        control_1 => ADC_OUT_BUS_9 ,
        control_0 => ADC_OUT_BUS_8 );
    Properties:
    {
        cy_ctrl_mode_0 = "00001111"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 1
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\PWM_11:PWMUDB:genblk8:stsreg\
    PORT MAP (
        clock => ADC_CLK ,
        status_3 => \PWM_11:PWMUDB:status_3\ ,
        status_2 => \PWM_11:PWMUDB:status_2\ ,
        status_0 => \PWM_11:PWMUDB:status_0\ ,
        clk_en => ADC_OUT_BUS_11 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0100111"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(ADC_OUT_BUS_11)

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_5\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,5)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (ADC_CLK) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

controlcell: Name =\ADC_SAR_Seq:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => ADC_CLK ,
        control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC_SAR_1:IRQ\
        PORT MAP (
            interrupt => Net_576 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =\ADC_SAR_Seq:IRQ\
        PORT MAP (
            interrupt => Net_12630 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR_Seq:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = Dedicated_Output
    Attributes:
        In Group/Port: False
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Dedicated_Output__PA ,
        analog_term => Net_775 );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = MISO_IN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MISO_IN(0)__PA ,
        fb => Net_6028 ,
        pad => MISO_IN(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = VREF_BUFF(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => VREF_BUFF(0)__PA ,
        analog_term => Net_775 ,
        pad => VREF_BUFF(0)_PAD );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=0]: 
Pin : Name = \LCD_Char_1:LCDPort(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(0)\__PA ,
        pad => \LCD_Char_1:LCDPort(0)_PAD\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = \LCD_Char_1:LCDPort(1)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(1)\__PA ,
        pad => \LCD_Char_1:LCDPort(1)_PAD\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \LCD_Char_1:LCDPort(2)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(2)\__PA ,
        pad => \LCD_Char_1:LCDPort(2)_PAD\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = \LCD_Char_1:LCDPort(3)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(3)\__PA ,
        pad => \LCD_Char_1:LCDPort(3)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \LCD_Char_1:LCDPort(4)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(4)\__PA ,
        pad => \LCD_Char_1:LCDPort(4)_PAD\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = \LCD_Char_1:LCDPort(5)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(5)\__PA ,
        pad => \LCD_Char_1:LCDPort(5)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \LCD_Char_1:LCDPort(6)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Char_1:LCDPort(6)\__PA ,
        pad => \LCD_Char_1:LCDPort(6)_PAD\ );
    Properties:
    {
    }

Port 2 is empty
Port 3 contains the following IO cells:
[IoId=6]: 
Pin : Name = Dedicated_Output_1
    Attributes:
        In Group/Port: False
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Dedicated_Output_1__PA ,
        analog_term => Net_800 );
    Properties:
    {
    }

Port 4 contains the following IO cells:
[IoId=0]: 
Pin : Name = SAMPLE_RATE_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SAMPLE_RATE_CONTROL(0)__PA ,
        analog_term => Net_12631 ,
        pad => SAMPLE_RATE_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = DIV_MUX_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => DIV_MUX_CONTROL(0)__PA ,
        analog_term => Net_12634 ,
        pad => DIV_MUX_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = MASK_OFF_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MASK_OFF_CONTROL(0)__PA ,
        analog_term => Net_12632 ,
        pad => MASK_OFF_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = PWM_1_CONTROL(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => PWM_1_CONTROL(0)__PA ,
        analog_term => Net_21813 ,
        pad => PWM_1_CONTROL(0)_PAD ,
        input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = AUDIO_IN(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => AUDIO_IN(0)__PA ,
        analog_term => Net_806 ,
        pad => AUDIO_IN(0)_PAD );
    Properties:
    {
    }

Port 5 is empty
Port 6 is empty
Port 12 contains the following IO cells:
[IoId=4]: 
Pin : Name = SS_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: INP_DIS_LO
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SS_OUT(0)__PA ,
        input => Net_6025 ,
        pad => SS_OUT(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = SCLK_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => SCLK_OUT(0)__PA ,
        input => Net_6026 ,
        pad => SCLK_OUT(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = MOSI_OUT(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilitites: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => MOSI_OUT(0)__PA ,
        input => Net_6027 ,
        pad => MOSI_OUT(0)_PAD );
    Properties:
    {
    }

Port 15 is empty
ARM group 0: empty
CAN 2.0b group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \SPI_DAC:Net_276\ ,
            dclk_0 => \SPI_DAC:Net_276_local\ ,
            dclk_glb_1 => ADC_CLK ,
            dclk_1 => ADC_CLK_local );
        Properties:
        {
        }
Comparator group 0: empty
Digital Filter Block group 0: 
    DFB Block @ F(DFB,0): 
    dfbcell: Name =\Filter:DFB\
        PORT MAP (
            out_1 => \Filter:Net_8\ ,
            out_2 => \Filter:Net_9\ ,
            dmareq_1 => Net_1326 ,
            dmareq_2 => Net_1327 ,
            interrupt => Net_1328 );
        Properties:
        {
            cy_registers = ""
        }
Delta-Sigma ADC group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
Segment LCD group 0: empty
LVD group 0: empty
PM group 0: empty
Analog (SC/CT) Blocks group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\PWM_ADC_CK:PWMHW\
        PORT MAP (
            clock => ADC_CLK ,
            enable => __ONE__ ,
            tc => \PWM_ADC_CK:Net_63\ ,
            cmp => PWM_CK ,
            irq => \PWM_ADC_CK:Net_54\ );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: empty
VIDAC group 0: empty
Opamp group 0: 
    Opamp Block @ F(OpAmp,1): 
    abufcell: Name =\Opamp_1:ABuf\
        PORT MAP (
            vplus => Net_806 ,
            vminus => Net_800 ,
            vout => Net_800 );
        Properties:
        {
            cy_registers = ""
        }
    Opamp Block @ F(OpAmp,2): 
    abufcell: Name =\Opamp_2:ABuf\
        PORT MAP (
            vplus => \ADC_SAR_1:Net_233\ ,
            vminus => Net_775 ,
            vout => Net_775 );
        Properties:
        {
            cy_registers = ""
        }
CapSense Buffers group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,3): 
    vrefcell: Name =\ADC_SAR_1:vRef_1024\
        PORT MAP (
            vout => \ADC_SAR_1:Net_233\ );
        Properties:
        {
            autoenable = 1
            guid = "89B398AD-36A8-4627-9212-707F2986319E"
            ignoresleep = 0
            name = "1.024V"
        }
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_SAR_Seq:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_SAR_Seq:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR ADC group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_SAR_Seq:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq:Net_2803\ ,
            vminus => \ADC_SAR_Seq:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR_Seq:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq:SAR:Net_235\ ,
            clk_udb => ADC_CLK_local ,
            irq => \ADC_SAR_Seq:SAR:Net_252\ ,
            next => Net_12629 ,
            data_out_udb_11 => \ADC_SAR_Seq:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC_SAR_1:ADC_SAR\
        PORT MAP (
            vplus => Net_800 ,
            vminus => \ADC_SAR_1:Net_126\ ,
            ext_pin => \ADC_SAR_1:Net_209\ ,
            vrefhi_out => \ADC_SAR_1:Net_126\ ,
            vref => \ADC_SAR_1:Net_233\ ,
            clk_udb => ADC_CLK_local ,
            sof_udb => PWM_CK ,
            irq => \ADC_SAR_1:Net_252\ ,
            next => Net_5999 ,
            data_out_udb_11 => \ADC_SAR_1:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_1:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_1:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_1:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_1:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_1:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_1:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_1:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_1:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_1:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_1:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_1:Net_207_0\ ,
            eof_udb => Net_576 );
        Properties:
        {
            cy_registers = ""
        }

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_12725 ,
            muxin_62 => Net_12724 ,
            muxin_61 => Net_12723 ,
            muxin_60 => Net_12722 ,
            muxin_59 => Net_12721 ,
            muxin_58 => Net_12720 ,
            muxin_57 => Net_12719 ,
            muxin_56 => Net_12718 ,
            muxin_55 => Net_12717 ,
            muxin_54 => Net_12716 ,
            muxin_53 => Net_12715 ,
            muxin_52 => Net_12714 ,
            muxin_51 => Net_12713 ,
            muxin_50 => Net_12712 ,
            muxin_49 => Net_12711 ,
            muxin_48 => Net_12710 ,
            muxin_47 => Net_12709 ,
            muxin_46 => Net_12707 ,
            muxin_45 => Net_12705 ,
            muxin_44 => Net_12704 ,
            muxin_43 => Net_12702 ,
            muxin_42 => Net_12700 ,
            muxin_41 => Net_12699 ,
            muxin_40 => Net_12697 ,
            muxin_39 => Net_12695 ,
            muxin_38 => Net_12694 ,
            muxin_37 => Net_12692 ,
            muxin_36 => Net_12690 ,
            muxin_35 => Net_12689 ,
            muxin_34 => Net_12687 ,
            muxin_33 => Net_12685 ,
            muxin_32 => Net_12684 ,
            muxin_31 => Net_12682 ,
            muxin_30 => Net_12680 ,
            muxin_29 => Net_12679 ,
            muxin_28 => Net_12677 ,
            muxin_27 => Net_12675 ,
            muxin_26 => Net_12674 ,
            muxin_25 => Net_12672 ,
            muxin_24 => Net_12670 ,
            muxin_23 => Net_12669 ,
            muxin_22 => Net_12667 ,
            muxin_21 => Net_12665 ,
            muxin_20 => Net_12664 ,
            muxin_19 => Net_12662 ,
            muxin_18 => Net_12660 ,
            muxin_17 => Net_12659 ,
            muxin_16 => Net_12657 ,
            muxin_15 => Net_12655 ,
            muxin_14 => Net_12654 ,
            muxin_13 => Net_12652 ,
            muxin_12 => Net_12650 ,
            muxin_11 => Net_12649 ,
            muxin_10 => Net_12647 ,
            muxin_9 => Net_12645 ,
            muxin_8 => Net_12644 ,
            muxin_7 => Net_12642 ,
            muxin_6 => Net_12640 ,
            muxin_5 => Net_12639 ,
            muxin_4 => Net_22826 ,
            muxin_3 => Net_21813 ,
            muxin_2 => Net_12634 ,
            muxin_1 => Net_12632 ,
            muxin_0 => Net_12631 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \ADC_SAR_Seq:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                         | 
Port | Pin | Fixed |      Type |       Drive Mode |                    Name | Connections
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
   0 |   0 |       |      NONE |      HI_Z_ANALOG |        Dedicated_Output | Analog(Net_775)
     |   2 |       |      NONE |     HI_Z_DIGITAL |              MISO_IN(0) | FB(Net_6028)
     |   6 |     * |      NONE |      HI_Z_ANALOG |            VREF_BUFF(0) | Analog(Net_775)
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
   1 |   0 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(0)\ | 
     |   1 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(1)\ | 
     |   2 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(2)\ | 
     |   3 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(3)\ | 
     |   4 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(4)\ | 
     |   5 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(5)\ | 
     |   6 |       |      NONE |         CMOS_OUT | \LCD_Char_1:LCDPort(6)\ | 
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
   3 |   6 |       |      NONE |      HI_Z_ANALOG |      Dedicated_Output_1 | Analog(Net_800)
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
   4 |   0 |     * |      NONE |      HI_Z_ANALOG |  SAMPLE_RATE_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_12631)
     |   2 |       |      NONE |      HI_Z_ANALOG |      DIV_MUX_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_12634)
     |   4 |     * |      NONE |      HI_Z_ANALOG |     MASK_OFF_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_12632)
     |   6 |       |      NONE |      HI_Z_ANALOG |        PWM_1_CONTROL(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_21813)
     |   7 |     * |      NONE |      HI_Z_ANALOG |             AUDIO_IN(0) | Analog(Net_806)
-----+-----+-------+-----------+------------------+-------------------------+----------------------------------------------------------------
  12 |   4 |     * |      NONE |         CMOS_OUT |               SS_OUT(0) | In(Net_6025)
     |   5 |     * |      NONE |         CMOS_OUT |             SCLK_OUT(0) | In(Net_6026)
     |   6 |     * |      NONE |         CMOS_OUT |             MOSI_OUT(0) | In(Net_6027)
---------------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.006ms
Digital Placement phase: Elapsed time ==> 7s.383ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
Routing successful.
Digital Routing phase: Elapsed time ==> 5s.925ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.286ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.045ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in ADC_DAC_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.803ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.373ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 21s.250ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 21s.250ms
API generation phase: Elapsed time ==> 2s.335ms
Dependency generation phase: Elapsed time ==> 0s.032ms
Cleanup phase: Elapsed time ==> 0s.001ms
