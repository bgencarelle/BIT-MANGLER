ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"ADC_SAR_Seq_SAR.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	ADC_SAR_Seq_SAR_initVar
  19              		.bss
  20              		.type	ADC_SAR_Seq_SAR_initVar, %object
  21              		.size	ADC_SAR_Seq_SAR_initVar, 1
  22              	ADC_SAR_Seq_SAR_initVar:
  23 0000 00       		.space	1
  24              		.comm	ADC_SAR_Seq_SAR_offset,2,2
  25              		.comm	ADC_SAR_Seq_SAR_countsPerVolt,2,2
  26              		.comm	ADC_SAR_Seq_SAR_countsPer10Volt,4,4
  27              		.comm	ADC_SAR_Seq_SAR_shift,2,2
  28              		.section	.text.ADC_SAR_Seq_SAR_Start,"ax",%progbits
  29              		.align	2
  30              		.global	ADC_SAR_Seq_SAR_Start
  31              		.thumb
  32              		.thumb_func
  33              		.type	ADC_SAR_Seq_SAR_Start, %function
  34              	ADC_SAR_Seq_SAR_Start:
  35              	.LFB0:
  36              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_Seq_SAR.c"
   1:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * File Name: ADC_SAR_Seq_SAR.c
   3:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Version 3.0
   4:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
   9:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  11:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  18:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** #include "ADC_SAR_Seq_SAR.h"
  20:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  21:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** #if(ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK)
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 2


  22:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #include "ADC_SAR_Seq_SAR_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** #endif /* End ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  25:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  26:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** static void ADC_SAR_Seq_SAR_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  31:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  32:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** uint8 ADC_SAR_Seq_SAR_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** volatile int16 ADC_SAR_Seq_SAR_offset;
  37:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** volatile int16 ADC_SAR_Seq_SAR_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** volatile int32 ADC_SAR_Seq_SAR_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** volatile int16 ADC_SAR_Seq_SAR_shift;
  40:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  41:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  42:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_Start
  44:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  46:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  52:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  55:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  58:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  The ADC_SAR_Seq_SAR_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  to zero before call of ADC_SAR_Seq_SAR_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Init() and ADC_SAR_Seq_SAR_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  69:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  73:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
  37              		.loc 1 75 0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 3


  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 7, -8
  44              		.cfi_offset 14, -4
  45 0002 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  76:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  77:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     if(ADC_SAR_Seq_SAR_initVar == 0u)
  47              		.loc 1 78 0
  48 0004 054B     		ldr	r3, .L3
  49 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0008 002B     		cmp	r3, #0
  51 000a 04D1     		bne	.L2
  79:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_Init();
  52              		.loc 1 80 0
  53 000c FFF7FEFF 		bl	ADC_SAR_Seq_SAR_Init
  81:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_initVar = 1u;
  54              		.loc 1 81 0
  55 0010 024B     		ldr	r3, .L3
  56 0012 0122     		movs	r2, #1
  57 0014 1A70     		strb	r2, [r3]
  58              	.L2:
  82:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_Enable();
  59              		.loc 1 83 0
  60 0016 FFF7FEFF 		bl	ADC_SAR_Seq_SAR_Enable
  84:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
  61              		.loc 1 84 0
  62 001a 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 001c 00000000 		.word	ADC_SAR_Seq_SAR_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	ADC_SAR_Seq_SAR_Start, .-ADC_SAR_Seq_SAR_Start
  70              		.section	.text.ADC_SAR_Seq_SAR_Init,"ax",%progbits
  71              		.align	2
  72              		.global	ADC_SAR_Seq_SAR_Init
  73              		.thumb
  74              		.thumb_func
  75              		.type	ADC_SAR_Seq_SAR_Init, %function
  76              	ADC_SAR_Seq_SAR_Init:
  77              	.LFB1:
  85:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  86:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
  87:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_Init
  89:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  91:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_Start().
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 4


  95:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 102:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  The ADC_SAR_Seq_SAR_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 105:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
  78              		.loc 1 107 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 80B5     		push	{r7, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 7, -8
  85              		.cfi_offset 14, -4
  86 0002 00AF     		add	r7, sp, #0
  87              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* End ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 114:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         CyIntSetPriority(ADC_SAR_Seq_SAR_INTC_NUMBER, ADC_SAR_Seq_SAR_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         (void)CyIntSetVector(ADC_SAR_Seq_SAR_INTC_NUMBER, &ADC_SAR_Seq_SAR_ISR);
 118:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif   /* End ADC_SAR_Seq_SAR_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 120:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_CSR1_REG |= ADC_SAR_Seq_SAR_SAR_IRQ_MASK_EN | ADC_SAR_Seq_SAR_SAR_IRQ_MODE_
  88              		.loc 1 121 0
  89 0004 074A     		ldr	r2, .L6
  90 0006 074B     		ldr	r3, .L6
  91 0008 1B78     		ldrb	r3, [r3]
  92 000a DBB2     		uxtb	r3, r3
  93 000c 43F00603 		orr	r3, r3, #6
  94 0010 DBB2     		uxtb	r3, r3
  95 0012 1370     		strb	r3, [r2]
 122:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 123:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SetResolution(ADC_SAR_Seq_SAR_DEFAULT_RESOLUTION);
  96              		.loc 1 124 0
  97 0014 0C20     		movs	r0, #12
  98 0016 FFF7FEFF 		bl	ADC_SAR_Seq_SAR_SetResolution
 125:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_offset = 0;
  99              		.loc 1 125 0
 100 001a 034B     		ldr	r3, .L6+4
 101 001c 0022     		movs	r2, #0
 102 001e 1A80     		strh	r2, [r3]	@ movhi
 126:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 5


 103              		.loc 1 126 0
 104 0020 80BD     		pop	{r7, pc}
 105              	.L7:
 106 0022 00BF     		.align	2
 107              	.L6:
 108 0024 01590040 		.word	1073764609
 109 0028 00000000 		.word	ADC_SAR_Seq_SAR_offset
 110              		.cfi_endproc
 111              	.LFE1:
 112              		.size	ADC_SAR_Seq_SAR_Init, .-ADC_SAR_Seq_SAR_Init
 113              		.section	.text.ADC_SAR_Seq_SAR_Enable,"ax",%progbits
 114              		.align	2
 115              		.global	ADC_SAR_Seq_SAR_Enable
 116              		.thumb
 117              		.thumb_func
 118              		.type	ADC_SAR_Seq_SAR_Enable, %function
 119              	ADC_SAR_Seq_SAR_Enable:
 120              	.LFB2:
 127:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 128:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_Enable
 131:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 133:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 136:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 139:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 142:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 121              		.loc 1 144 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 8
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 82B0     		sub	sp, sp, #8
 130              		.cfi_def_cfa_offset 16
 131 0004 00AF     		add	r7, sp, #0
 132              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 133              		.loc 1 147 0
 134 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 135 000a 0346     		mov	r3, r0
 136 000c FB71     		strb	r3, [r7, #7]
 148:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 149:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Enable the SAR ADC block in Active Power Mode */
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 6


 150:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_PWRMGR_SAR_REG |= ADC_SAR_Seq_SAR_ACT_PWR_SAR_EN;
 137              		.loc 1 150 0
 138 000e 244A     		ldr	r2, .L9
 139 0010 234B     		ldr	r3, .L9
 140 0012 1B78     		ldrb	r3, [r3]
 141 0014 DBB2     		uxtb	r3, r3
 142 0016 43F00103 		orr	r3, r3, #1
 143 001a DBB2     		uxtb	r3, r3
 144 001c 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 152:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_STBY_PWRMGR_SAR_REG |= ADC_SAR_Seq_SAR_STBY_PWR_SAR_EN;
 145              		.loc 1 153 0
 146 001e 214A     		ldr	r2, .L9+4
 147 0020 204B     		ldr	r3, .L9+4
 148 0022 1B78     		ldrb	r3, [r3]
 149 0024 DBB2     		uxtb	r3, r3
 150 0026 43F00103 		orr	r3, r3, #1
 151 002a DBB2     		uxtb	r3, r3
 152 002c 1370     		strb	r3, [r2]
 154:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 155:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_PWRMGR_CLK_REG |= ADC_SAR_Seq_SAR_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_STBY_PWRMGR_CLK_REG |= ADC_SAR_Seq_SAR_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* End ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 161:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     tmpReg = ADC_SAR_Seq_SAR_SAR_CSR3_REG;
 153              		.loc 1 162 0
 154 002e 1E4B     		ldr	r3, .L9+8
 155 0030 1B78     		ldrb	r3, [r3]
 156 0032 BB71     		strb	r3, [r7, #6]
 163:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     tmpReg |= ADC_SAR_Seq_SAR_SAR_EN_BUF_VCM_EN;
 157              		.loc 1 163 0
 158 0034 BB79     		ldrb	r3, [r7, #6]
 159 0036 43F00203 		orr	r3, r3, #2
 160 003a BB71     		strb	r3, [r7, #6]
 164:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if((ADC_SAR_Seq_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_SAR__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         tmpReg &= (uint8)~ADC_SAR_Seq_SAR_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         tmpReg |= ADC_SAR_Seq_SAR_SAR_EN_BUF_VREF_EN;
 161              		.loc 1 169 0
 162 003c BB79     		ldrb	r3, [r7, #6]
 163 003e 43F00103 		orr	r3, r3, #1
 164 0042 BB71     		strb	r3, [r7, #6]
 170:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* ADC_SAR_Seq_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_SAR__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_CSR3_REG = tmpReg;
 165              		.loc 1 171 0
 166 0044 184A     		ldr	r2, .L9+8
 167 0046 BB79     		ldrb	r3, [r7, #6]
 168 0048 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 173:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VNEG_VDDA_DIFF)
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 7


 175:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #if(ADC_SAR_Seq_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_SAR__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             ADC_SAR_Seq_SAR_SAR_CSR6_REG = ADC_SAR_Seq_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             ADC_SAR_Seq_SAR_SAR_CSR6_REG = ADC_SAR_Seq_SAR_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #endif /* ADC_SAR_Seq_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_SAR__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #if(ADC_SAR_Seq_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_SAR__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             ADC_SAR_Seq_SAR_SAR_CSR6_REG = ADC_SAR_Seq_SAR_INT_VREF;            /* S3 + S4 */
 169              		.loc 1 182 0
 170 004a 184B     		ldr	r3, .L9+12
 171 004c 1822     		movs	r2, #24
 172 004e 1A70     		strb	r2, [r3]
 183:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             ADC_SAR_Seq_SAR_SAR_CSR6_REG = ADC_SAR_Seq_SAR_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #endif /* ADC_SAR_Seq_SAR_DEFAULT_REFERENCE == ADC_SAR_Seq_SAR__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 188:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_Seq_SAR_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_SAR_CSR5_REG |= ADC_SAR_Seq_SAR_SAR_DLY_INC;
 173              		.loc 1 192 0
 174 0050 174A     		ldr	r2, .L9+16
 175 0052 174B     		ldr	r3, .L9+16
 176 0054 1B78     		ldrb	r3, [r3]
 177 0056 DBB2     		uxtb	r3, r3
 178 0058 43F04003 		orr	r3, r3, #64
 179 005c DBB2     		uxtb	r3, r3
 180 005e 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* ADC_SAR_Seq_SAR_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 195:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_SAR_CSR5_REG |= ADC_SAR_Seq_SAR_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_SAR_CSR5_REG &= (uint8)~ADC_SAR_Seq_SAR_SAR_SEL_CSEL_DFT_CHAR;
 181              		.loc 1 202 0
 182 0060 134A     		ldr	r2, .L9+16
 183 0062 134B     		ldr	r3, .L9+16
 184 0064 1B78     		ldrb	r3, [r3]
 185 0066 DBB2     		uxtb	r3, r3
 186 0068 23F00303 		bic	r3, r3, #3
 187 006c DBB2     		uxtb	r3, r3
 188 006e 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* ADC_SAR_Seq_SAR_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_Seq_SAR_DEFAULT_POWER << ADC_SAR_Seq_SAR_
 189              		.loc 1 206 0
 190 0070 104B     		ldr	r3, .L9+20
 191 0072 C822     		movs	r2, #200
 192 0074 1A70     		strb	r2, [r3]
 207:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 8


 208:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_Seq_SAR_DEFAULT_REFERENCE != ADC_SAR_Seq_SAR__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         | ADC_SAR_Seq_SAR_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_SAR__FREE_RUNNING)      /* If triggered mo
 213:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         | ADC_SAR_Seq_SAR_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         | ADC_SAR_Seq_SAR_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 218:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_TR0_REG = ADC_SAR_Seq_SAR_SAR_CAP_TRIM_2;
 193              		.loc 1 218 0
 194 0076 104B     		ldr	r3, .L9+24
 195 0078 0222     		movs	r2, #2
 196 007a 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 220:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_CLK_REG |= ADC_SAR_Seq_SAR_SAR_MX_CLK_EN;
 197              		.loc 1 221 0
 198 007c 0F4A     		ldr	r2, .L9+28
 199 007e 0F4B     		ldr	r3, .L9+28
 200 0080 1B78     		ldrb	r3, [r3]
 201 0082 DBB2     		uxtb	r3, r3
 202 0084 43F00803 		orr	r3, r3, #8
 203 0088 DBB2     		uxtb	r3, r3
 204 008a 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 223:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 205              		.loc 1 223 0
 206 008c 0A20     		movs	r0, #10
 207 008e FFF7FEFF 		bl	CyDelayUs
 224:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 225:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         CyIntClearPending(ADC_SAR_Seq_SAR_INTC_NUMBER);
 228:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif   /* End ADC_SAR_Seq_SAR_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 230:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 208              		.loc 1 230 0
 209 0092 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 210 0094 1846     		mov	r0, r3
 211 0096 FFF7FEFF 		bl	CyExitCriticalSection
 231:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 212              		.loc 1 231 0
 213 009a 0837     		adds	r7, r7, #8
 214              		.cfi_def_cfa_offset 8
 215 009c BD46     		mov	sp, r7
 216              		.cfi_def_cfa_register 13
 217              		@ sp needed
 218 009e 80BD     		pop	{r7, pc}
 219              	.L10:
 220              		.align	2
 221              	.L9:
 222 00a0 AB430040 		.word	1073759147
 223 00a4 BB430040 		.word	1073759163
 224 00a8 03590040 		.word	1073764611
 225 00ac 06590040 		.word	1073764614
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 9


 226 00b0 05590040 		.word	1073764613
 227 00b4 00590040 		.word	1073764608
 228 00b8 14460040 		.word	1073759764
 229 00bc 275B0040 		.word	1073765159
 230              		.cfi_endproc
 231              	.LFE2:
 232              		.size	ADC_SAR_Seq_SAR_Enable, .-ADC_SAR_Seq_SAR_Enable
 233              		.section	.text.ADC_SAR_Seq_SAR_Stop,"ax",%progbits
 234              		.align	2
 235              		.global	ADC_SAR_Seq_SAR_Stop
 236              		.thumb
 237              		.thumb_func
 238              		.type	ADC_SAR_Seq_SAR_Stop, %function
 239              	ADC_SAR_Seq_SAR_Stop:
 240              	.LFB3:
 232:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 233:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 234:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_Stop
 236:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 238:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 241:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 243:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 244:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 247:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 241              		.loc 1 249 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 8
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 82B0     		sub	sp, sp, #8
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 250:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     enableInterrupts = CyEnterCriticalSection();
 253              		.loc 1 251 0
 254 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 255 000a 0346     		mov	r3, r0
 256 000c FB71     		strb	r3, [r7, #7]
 252:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_SAR_SAR_SOF_START_CONV;
 257              		.loc 1 254 0
 258 000e 0F4A     		ldr	r2, .L12
 259 0010 0E4B     		ldr	r3, .L12
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 10


 260 0012 1B78     		ldrb	r3, [r3]
 261 0014 DBB2     		uxtb	r3, r3
 262 0016 23F00103 		bic	r3, r3, #1
 263 001a DBB2     		uxtb	r3, r3
 264 001c 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_Seq_SAR_ACT_PWR_SAR_EN;
 265              		.loc 1 256 0
 266 001e 0C4A     		ldr	r2, .L12+4
 267 0020 0B4B     		ldr	r3, .L12+4
 268 0022 1B78     		ldrb	r3, [r3]
 269 0024 DBB2     		uxtb	r3, r3
 270 0026 23F00103 		bic	r3, r3, #1
 271 002a DBB2     		uxtb	r3, r3
 272 002c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_Seq_SAR_STBY_PWR_SAR_EN;
 273              		.loc 1 258 0
 274 002e 094A     		ldr	r2, .L12+8
 275 0030 084B     		ldr	r3, .L12+8
 276 0032 1B78     		ldrb	r3, [r3]
 277 0034 DBB2     		uxtb	r3, r3
 278 0036 23F00103 		bic	r3, r3, #1
 279 003a DBB2     		uxtb	r3, r3
 280 003c 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 260:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_Seq_SAR_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_Seq_SAR_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* End ADC_SAR_Seq_SAR_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 266:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     CyExitCriticalSection(enableInterrupts);
 281              		.loc 1 266 0
 282 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 283 0040 1846     		mov	r0, r3
 284 0042 FFF7FEFF 		bl	CyExitCriticalSection
 267:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 285              		.loc 1 268 0
 286 0046 0837     		adds	r7, r7, #8
 287              		.cfi_def_cfa_offset 8
 288 0048 BD46     		mov	sp, r7
 289              		.cfi_def_cfa_register 13
 290              		@ sp needed
 291 004a 80BD     		pop	{r7, pc}
 292              	.L13:
 293              		.align	2
 294              	.L12:
 295 004c 00590040 		.word	1073764608
 296 0050 AB430040 		.word	1073759147
 297 0054 BB430040 		.word	1073759163
 298              		.cfi_endproc
 299              	.LFE3:
 300              		.size	ADC_SAR_Seq_SAR_Stop, .-ADC_SAR_Seq_SAR_Stop
 301              		.section	.text.ADC_SAR_Seq_SAR_SetPower,"ax",%progbits
 302              		.align	2
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 11


 303              		.global	ADC_SAR_Seq_SAR_SetPower
 304              		.thumb
 305              		.thumb_func
 306              		.type	ADC_SAR_Seq_SAR_SetPower, %function
 307              	ADC_SAR_Seq_SAR_SetPower:
 308              	.LFB4:
 269:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 270:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 271:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_SetPower
 273:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 275:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 279:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 286:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 309              		.loc 1 291 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 16
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 7, -4
 317 0002 85B0     		sub	sp, sp, #20
 318              		.cfi_def_cfa_offset 24
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 321 0006 0346     		mov	r3, r0
 322 0008 FB71     		strb	r3, [r7, #7]
 292:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 294:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     power &= ADC_SAR_Seq_SAR_SAR_API_POWER_MASK;
 323              		.loc 1 295 0
 324 000a FB79     		ldrb	r3, [r7, #7]
 325 000c 03F00303 		and	r3, r3, #3
 326 0010 FB71     		strb	r3, [r7, #7]
 296:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 297:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     tmpReg = ADC_SAR_Seq_SAR_SAR_CSR0_REG & (uint8)~ADC_SAR_Seq_SAR_SAR_POWER_MASK;
 327              		.loc 1 298 0
 328 0012 0A4B     		ldr	r3, .L15
 329 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 12


 330 0016 DBB2     		uxtb	r3, r3
 331 0018 03F03F03 		and	r3, r3, #63
 332 001c FB73     		strb	r3, [r7, #15]
 299:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     tmpReg |= (uint8)(power << ADC_SAR_Seq_SAR_SAR_POWER_SHIFT);
 333              		.loc 1 299 0
 334 001e FB79     		ldrb	r3, [r7, #7]
 335 0020 9B01     		lsls	r3, r3, #6
 336 0022 DAB2     		uxtb	r2, r3
 337 0024 FB7B     		ldrb	r3, [r7, #15]
 338 0026 1343     		orrs	r3, r3, r2
 339 0028 FB73     		strb	r3, [r7, #15]
 300:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_CSR0_REG = tmpReg;
 340              		.loc 1 300 0
 341 002a 044A     		ldr	r2, .L15
 342 002c FB7B     		ldrb	r3, [r7, #15]
 343 002e 1370     		strb	r3, [r2]
 301:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 344              		.loc 1 301 0
 345 0030 1437     		adds	r7, r7, #20
 346              		.cfi_def_cfa_offset 4
 347 0032 BD46     		mov	sp, r7
 348              		.cfi_def_cfa_register 13
 349              		@ sp needed
 350 0034 5DF8047B 		ldr	r7, [sp], #4
 351              		.cfi_restore 7
 352              		.cfi_def_cfa_offset 0
 353 0038 7047     		bx	lr
 354              	.L16:
 355 003a 00BF     		.align	2
 356              	.L15:
 357 003c 00590040 		.word	1073764608
 358              		.cfi_endproc
 359              	.LFE4:
 360              		.size	ADC_SAR_Seq_SAR_SetPower, .-ADC_SAR_Seq_SAR_SetPower
 361              		.section	.text.ADC_SAR_Seq_SAR_SetResolution,"ax",%progbits
 362              		.align	2
 363              		.global	ADC_SAR_Seq_SAR_SetResolution
 364              		.thumb
 365              		.thumb_func
 366              		.type	ADC_SAR_Seq_SAR_SetResolution, %function
 367              	ADC_SAR_Seq_SAR_SetResolution:
 368              	.LFB5:
 302:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 304:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 308:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 311:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 13


 317:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 320:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 339:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 369              		.loc 1 341 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 16
 372              		@ frame_needed = 1, uses_anonymous_args = 0
 373 0000 80B5     		push	{r7, lr}
 374              		.cfi_def_cfa_offset 8
 375              		.cfi_offset 7, -8
 376              		.cfi_offset 14, -4
 377 0002 84B0     		sub	sp, sp, #16
 378              		.cfi_def_cfa_offset 24
 379 0004 00AF     		add	r7, sp, #0
 380              		.cfi_def_cfa_register 7
 381 0006 0346     		mov	r3, r0
 382 0008 FB71     		strb	r3, [r7, #7]
 342:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 344:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     switch (resolution)
 383              		.loc 1 345 0
 384 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 385 000c 0A2B     		cmp	r3, #10
 386 000e 07D0     		beq	.L19
 387 0010 0C2B     		cmp	r3, #12
 388 0012 02D0     		beq	.L20
 389 0014 082B     		cmp	r3, #8
 390 0016 06D0     		beq	.L21
 391 0018 08E0     		b	.L23
 392              	.L20:
 346:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         case (uint8)ADC_SAR_Seq_SAR__BITS_12:
 348:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             tmpReg = ADC_SAR_Seq_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_Seq_SAR_SAR_SAMPLE_WIDTH;
 393              		.loc 1 348 0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 14


 394 001a C223     		movs	r3, #194
 395 001c FB73     		strb	r3, [r7, #15]
 349:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 396              		.loc 1 349 0
 397 001e 08E0     		b	.L22
 398              	.L19:
 350:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         case (uint8)ADC_SAR_Seq_SAR__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             tmpReg = ADC_SAR_Seq_SAR_SAR_RESOLUTION_10BIT | ADC_SAR_Seq_SAR_SAR_SAMPLE_WIDTH;
 399              		.loc 1 351 0
 400 0020 8223     		movs	r3, #130
 401 0022 FB73     		strb	r3, [r7, #15]
 352:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 402              		.loc 1 352 0
 403 0024 05E0     		b	.L22
 404              	.L21:
 353:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         case (uint8)ADC_SAR_Seq_SAR__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             tmpReg = ADC_SAR_Seq_SAR_SAR_RESOLUTION_8BIT | ADC_SAR_Seq_SAR_SAR_SAMPLE_WIDTH;
 405              		.loc 1 354 0
 406 0026 4223     		movs	r3, #66
 407 0028 FB73     		strb	r3, [r7, #15]
 355:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 408              		.loc 1 355 0
 409 002a 02E0     		b	.L22
 410              	.L23:
 356:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             tmpReg = ADC_SAR_Seq_SAR_SAR_RESOLUTION_12BIT | ADC_SAR_Seq_SAR_SAR_SAMPLE_WIDTH;
 411              		.loc 1 357 0
 412 002c C223     		movs	r3, #194
 413 002e FB73     		strb	r3, [r7, #15]
 358:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 414              		.loc 1 360 0
 415 0030 00BF     		nop
 416              	.L22:
 361:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_SAR_CSR2_REG = tmpReg;
 417              		.loc 1 362 0
 418 0032 054A     		ldr	r2, .L24
 419 0034 FB7B     		ldrb	r3, [r7, #15]
 420 0036 1370     		strb	r3, [r2]
 363:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 364:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_CalcGain(resolution);
 421              		.loc 1 365 0
 422 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 423 003a 1846     		mov	r0, r3
 424 003c FFF7FEFF 		bl	ADC_SAR_Seq_SAR_CalcGain
 366:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 425              		.loc 1 366 0
 426 0040 1037     		adds	r7, r7, #16
 427              		.cfi_def_cfa_offset 8
 428 0042 BD46     		mov	sp, r7
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 0044 80BD     		pop	{r7, pc}
 432              	.L25:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 15


 433 0046 00BF     		.align	2
 434              	.L24:
 435 0048 02590040 		.word	1073764610
 436              		.cfi_endproc
 437              	.LFE5:
 438              		.size	ADC_SAR_Seq_SAR_SetResolution, .-ADC_SAR_Seq_SAR_SetResolution
 439              		.section	.text.ADC_SAR_Seq_SAR_StartConvert,"ax",%progbits
 440              		.align	2
 441              		.global	ADC_SAR_Seq_SAR_StartConvert
 442              		.thumb
 443              		.thumb_func
 444              		.type	ADC_SAR_Seq_SAR_StartConvert, %function
 445              	ADC_SAR_Seq_SAR_StartConvert:
 446              	.LFB6:
 367:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 368:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 369:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** #if(ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_SAR__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 371:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Function Name: ADC_SAR_Seq_SAR_StartConvert
 374:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  ADC_SAR_Seq_SAR_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 400:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     void ADC_SAR_Seq_SAR_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 447              		.loc 1 402 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 0
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452 0000 80B4     		push	{r7}
 453              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 16


 454              		.cfi_offset 7, -4
 455 0002 00AF     		add	r7, sp, #0
 456              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #if(ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_SAR__FREE_RUNNING)  /* If software tri
 404:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             ADC_SAR_Seq_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_SAR_SAR_MX_SOF_UDB;   /* source: SO
 405:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #endif /* End ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 407:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_SAR_CSR0_REG |= ADC_SAR_Seq_SAR_SAR_SOF_START_CONV;
 457              		.loc 1 408 0
 458 0004 054A     		ldr	r2, .L27
 459 0006 054B     		ldr	r3, .L27
 460 0008 1B78     		ldrb	r3, [r3]
 461 000a DBB2     		uxtb	r3, r3
 462 000c 43F00103 		orr	r3, r3, #1
 463 0010 DBB2     		uxtb	r3, r3
 464 0012 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 465              		.loc 1 409 0
 466 0014 BD46     		mov	sp, r7
 467              		.cfi_def_cfa_register 13
 468              		@ sp needed
 469 0016 5DF8047B 		ldr	r7, [sp], #4
 470              		.cfi_restore 7
 471              		.cfi_def_cfa_offset 0
 472 001a 7047     		bx	lr
 473              	.L28:
 474              		.align	2
 475              	.L27:
 476 001c 00590040 		.word	1073764608
 477              		.cfi_endproc
 478              	.LFE6:
 479              		.size	ADC_SAR_Seq_SAR_StartConvert, .-ADC_SAR_Seq_SAR_StartConvert
 480              		.section	.text.ADC_SAR_Seq_SAR_StopConvert,"ax",%progbits
 481              		.align	2
 482              		.global	ADC_SAR_Seq_SAR_StopConvert
 483              		.thumb
 484              		.thumb_func
 485              		.type	ADC_SAR_Seq_SAR_StopConvert, %function
 486              	ADC_SAR_Seq_SAR_StopConvert:
 487              	.LFB7:
 410:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 411:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 412:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Function Name: ADC_SAR_Seq_SAR_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  None.
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 17


 426:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     * Side Effects:
 431:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     void ADC_SAR_Seq_SAR_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 488              		.loc 1 436 0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 1, uses_anonymous_args = 0
 492              		@ link register save eliminated.
 493 0000 80B4     		push	{r7}
 494              		.cfi_def_cfa_offset 4
 495              		.cfi_offset 7, -4
 496 0002 00AF     		add	r7, sp, #0
 497              		.cfi_def_cfa_register 7
 437:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_SAR_CSR0_REG &= (uint8)~ADC_SAR_Seq_SAR_SAR_SOF_START_CONV;
 498              		.loc 1 438 0
 499 0004 054A     		ldr	r2, .L30
 500 0006 054B     		ldr	r3, .L30
 501 0008 1B78     		ldrb	r3, [r3]
 502 000a DBB2     		uxtb	r3, r3
 503 000c 23F00103 		bic	r3, r3, #1
 504 0010 DBB2     		uxtb	r3, r3
 505 0012 1370     		strb	r3, [r2]
 439:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 440:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #if(ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_SAR__FREE_RUNNING)  /* If software tri
 441:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             ADC_SAR_Seq_SAR_SAR_CSR0_REG |= ADC_SAR_Seq_SAR_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         #endif /* End ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 445:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 506              		.loc 1 445 0
 507 0014 BD46     		mov	sp, r7
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 0016 5DF8047B 		ldr	r7, [sp], #4
 511              		.cfi_restore 7
 512              		.cfi_def_cfa_offset 0
 513 001a 7047     		bx	lr
 514              	.L31:
 515              		.align	2
 516              	.L30:
 517 001c 00590040 		.word	1073764608
 518              		.cfi_endproc
 519              	.LFE7:
 520              		.size	ADC_SAR_Seq_SAR_StopConvert, .-ADC_SAR_Seq_SAR_StopConvert
 521              		.section	.text.ADC_SAR_Seq_SAR_IsEndConversion,"ax",%progbits
 522              		.align	2
 523              		.global	ADC_SAR_Seq_SAR_IsEndConversion
 524              		.thumb
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 18


 525              		.thumb_func
 526              		.type	ADC_SAR_Seq_SAR_IsEndConversion, %function
 527              	ADC_SAR_Seq_SAR_IsEndConversion:
 528              	.LFB8:
 446:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 447:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** #endif /* End ADC_SAR_Seq_SAR_DEFAULT_CONV_MODE != ADC_SAR_Seq_SAR__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 459:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *   ADC_SAR_Seq_SAR_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *   ADC_SAR_Seq_SAR_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 467:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 471:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 474:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** uint8 ADC_SAR_Seq_SAR_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 529              		.loc 1 476 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 16
 532              		@ frame_needed = 1, uses_anonymous_args = 0
 533 0000 80B5     		push	{r7, lr}
 534              		.cfi_def_cfa_offset 8
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
 537 0002 84B0     		sub	sp, sp, #16
 538              		.cfi_def_cfa_offset 24
 539 0004 00AF     		add	r7, sp, #0
 540              		.cfi_def_cfa_register 7
 541 0006 0346     		mov	r3, r0
 542 0008 FB71     		strb	r3, [r7, #7]
 543              	.L34:
 477:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 479:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         status = ADC_SAR_Seq_SAR_SAR_CSR1_REG & ADC_SAR_Seq_SAR_SAR_EOF_1;
 544              		.loc 1 481 0 discriminator 2
 545 000a 0C4B     		ldr	r3, .L37
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 19


 546 000c 1B78     		ldrb	r3, [r3]
 547 000e DBB2     		uxtb	r3, r3
 548 0010 03F00103 		and	r3, r3, #1
 549 0014 FB73     		strb	r3, [r7, #15]
 482:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     } while ((status != ADC_SAR_Seq_SAR_SAR_EOF_1) && (retMode == ADC_SAR_Seq_SAR_WAIT_FOR_RESULT))
 550              		.loc 1 482 0 discriminator 2
 551 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 552 0018 012B     		cmp	r3, #1
 553 001a 02D0     		beq	.L33
 554              		.loc 1 482 0 is_stmt 0 discriminator 1
 555 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 556 001e 002B     		cmp	r3, #0
 557 0020 F3D0     		beq	.L34
 558              	.L33:
 483:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     if(status == ADC_SAR_Seq_SAR_SAR_EOF_1)
 559              		.loc 1 484 0 is_stmt 1
 560 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 561 0024 012B     		cmp	r3, #1
 562 0026 04D1     		bne	.L35
 485:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         CyDelayUs(1u);
 563              		.loc 1 487 0
 564 0028 0120     		movs	r0, #1
 565 002a FFF7FEFF 		bl	CyDelayUs
 488:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         CY_GET_REG8(ADC_SAR_Seq_SAR_SAR_CSR1_PTR);
 566              		.loc 1 489 0
 567 002e 034B     		ldr	r3, .L37
 568 0030 1B78     		ldrb	r3, [r3]
 569              	.L35:
 490:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 492:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     return(status);
 570              		.loc 1 492 0
 571 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 572              		.loc 1 493 0
 573 0034 1846     		mov	r0, r3
 574 0036 1037     		adds	r7, r7, #16
 575              		.cfi_def_cfa_offset 8
 576 0038 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 003a 80BD     		pop	{r7, pc}
 580              	.L38:
 581              		.align	2
 582              	.L37:
 583 003c 01590040 		.word	1073764609
 584              		.cfi_endproc
 585              	.LFE8:
 586              		.size	ADC_SAR_Seq_SAR_IsEndConversion, .-ADC_SAR_Seq_SAR_IsEndConversion
 587              		.section	.text.ADC_SAR_Seq_SAR_GetResult8,"ax",%progbits
 588              		.align	2
 589              		.global	ADC_SAR_Seq_SAR_GetResult8
 590              		.thumb
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 20


 591              		.thumb_func
 592              		.type	ADC_SAR_Seq_SAR_GetResult8, %function
 593              	ADC_SAR_Seq_SAR_GetResult8:
 594              	.LFB9:
 494:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 495:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 496:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 500:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 516:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 519:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** int8 ADC_SAR_Seq_SAR_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 595              		.loc 1 521 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600 0000 80B4     		push	{r7}
 601              		.cfi_def_cfa_offset 4
 602              		.cfi_offset 7, -4
 603 0002 00AF     		add	r7, sp, #0
 604              		.cfi_def_cfa_register 7
 522:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     return( (int8)ADC_SAR_Seq_SAR_SAR_WRK0_REG - (int8)ADC_SAR_Seq_SAR_shift);
 605              		.loc 1 522 0
 606 0004 074B     		ldr	r3, .L41
 607 0006 1B78     		ldrb	r3, [r3]
 608 0008 DAB2     		uxtb	r2, r3
 609 000a 074B     		ldr	r3, .L41+4
 610 000c 1B88     		ldrh	r3, [r3]	@ movhi
 611 000e 9BB2     		uxth	r3, r3
 612 0010 DBB2     		uxtb	r3, r3
 613 0012 D31A     		subs	r3, r2, r3
 614 0014 DBB2     		uxtb	r3, r3
 615 0016 DBB2     		uxtb	r3, r3
 616 0018 5BB2     		sxtb	r3, r3
 523:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 617              		.loc 1 523 0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 21


 618 001a 1846     		mov	r0, r3
 619 001c BD46     		mov	sp, r7
 620              		.cfi_def_cfa_register 13
 621              		@ sp needed
 622 001e 5DF8047B 		ldr	r7, [sp], #4
 623              		.cfi_restore 7
 624              		.cfi_def_cfa_offset 0
 625 0022 7047     		bx	lr
 626              	.L42:
 627              		.align	2
 628              	.L41:
 629 0024 A05B0040 		.word	1073765280
 630 0028 00000000 		.word	ADC_SAR_Seq_SAR_shift
 631              		.cfi_endproc
 632              	.LFE9:
 633              		.size	ADC_SAR_Seq_SAR_GetResult8, .-ADC_SAR_Seq_SAR_GetResult8
 634              		.section	.text.ADC_SAR_Seq_SAR_GetResult16,"ax",%progbits
 635              		.align	2
 636              		.global	ADC_SAR_Seq_SAR_GetResult16
 637              		.thumb
 638              		.thumb_func
 639              		.type	ADC_SAR_Seq_SAR_GetResult16, %function
 640              	ADC_SAR_Seq_SAR_GetResult16:
 641              	.LFB10:
 524:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 525:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 526:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 530:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 536:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 539:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 542:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  compliment form.
 545:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 546:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 549:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** int16 ADC_SAR_Seq_SAR_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 642              		.loc 1 551 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 8
 645              		@ frame_needed = 1, uses_anonymous_args = 0
 646              		@ link register save eliminated.
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 22


 647 0000 80B4     		push	{r7}
 648              		.cfi_def_cfa_offset 4
 649              		.cfi_offset 7, -4
 650 0002 83B0     		sub	sp, sp, #12
 651              		.cfi_def_cfa_offset 16
 652 0004 00AF     		add	r7, sp, #0
 653              		.cfi_def_cfa_register 7
 552:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 554:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     res = CY_GET_REG16(ADC_SAR_Seq_SAR_SAR_WRK_PTR);
 654              		.loc 1 554 0
 655 0006 094B     		ldr	r3, .L45
 656 0008 1B88     		ldrh	r3, [r3]	@ movhi
 657 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 556:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     return( (int16)res - ADC_SAR_Seq_SAR_shift );
 658              		.loc 1 556 0
 659 000c 084B     		ldr	r3, .L45+4
 660 000e 1B88     		ldrh	r3, [r3]	@ movhi
 661 0010 9BB2     		uxth	r3, r3
 662 0012 9BB2     		uxth	r3, r3
 663 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 664 0016 D31A     		subs	r3, r2, r3
 665 0018 9BB2     		uxth	r3, r3
 666 001a 9BB2     		uxth	r3, r3
 667 001c 1BB2     		sxth	r3, r3
 557:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 668              		.loc 1 557 0
 669 001e 1846     		mov	r0, r3
 670 0020 0C37     		adds	r7, r7, #12
 671              		.cfi_def_cfa_offset 4
 672 0022 BD46     		mov	sp, r7
 673              		.cfi_def_cfa_register 13
 674              		@ sp needed
 675 0024 5DF8047B 		ldr	r7, [sp], #4
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 0028 7047     		bx	lr
 679              	.L46:
 680 002a 00BF     		.align	2
 681              	.L45:
 682 002c A05B0040 		.word	1073765280
 683 0030 00000000 		.word	ADC_SAR_Seq_SAR_shift
 684              		.cfi_endproc
 685              	.LFE10:
 686              		.size	ADC_SAR_Seq_SAR_GetResult16, .-ADC_SAR_Seq_SAR_GetResult16
 687              		.section	.text.ADC_SAR_Seq_SAR_SetOffset,"ax",%progbits
 688              		.align	2
 689              		.global	ADC_SAR_Seq_SAR_SetOffset
 690              		.thumb
 691              		.thumb_func
 692              		.type	ADC_SAR_Seq_SAR_SetOffset, %function
 693              	ADC_SAR_Seq_SAR_SetOffset:
 694              	.LFB11:
 558:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 559:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 560:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 23


 561:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 564:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Sets the ADC offset, which is used by ADC_SAR_Seq_SAR_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_CountsTo_mVolts(), and ADC_SAR_Seq_SAR_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 570:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 574:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 575:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 577:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  The ADC_SAR_Seq_SAR_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Affects the ADC_SAR_Seq_SAR_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_CountsTo_mVolts, ADC_SAR_Seq_SAR_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 584:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 695              		.loc 1 586 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 8
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 700 0000 80B4     		push	{r7}
 701              		.cfi_def_cfa_offset 4
 702              		.cfi_offset 7, -4
 703 0002 83B0     		sub	sp, sp, #12
 704              		.cfi_def_cfa_offset 16
 705 0004 00AF     		add	r7, sp, #0
 706              		.cfi_def_cfa_register 7
 707 0006 0346     		mov	r3, r0
 708 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_offset = offset;
 709              		.loc 1 587 0
 710 000a 044A     		ldr	r2, .L48
 711 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 712 000e 1380     		strh	r3, [r2]	@ movhi
 588:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 713              		.loc 1 588 0
 714 0010 0C37     		adds	r7, r7, #12
 715              		.cfi_def_cfa_offset 4
 716 0012 BD46     		mov	sp, r7
 717              		.cfi_def_cfa_register 13
 718              		@ sp needed
 719 0014 5DF8047B 		ldr	r7, [sp], #4
 720              		.cfi_restore 7
 721              		.cfi_def_cfa_offset 0
 722 0018 7047     		bx	lr
 723              	.L49:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 24


 724 001a 00BF     		.align	2
 725              	.L48:
 726 001c 00000000 		.word	ADC_SAR_Seq_SAR_offset
 727              		.cfi_endproc
 728              	.LFE11:
 729              		.size	ADC_SAR_Seq_SAR_SetOffset, .-ADC_SAR_Seq_SAR_SetOffset
 730              		.section	.text.ADC_SAR_Seq_SAR_CalcGain,"ax",%progbits
 731              		.align	2
 732              		.thumb
 733              		.thumb_func
 734              		.type	ADC_SAR_Seq_SAR_CalcGain, %function
 735              	ADC_SAR_Seq_SAR_CalcGain:
 736              	.LFB12:
 589:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 590:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 591:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 595:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 598:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 601:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 602:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 604:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 610:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** static void ADC_SAR_Seq_SAR_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 737              		.loc 1 612 0
 738              		.cfi_startproc
 739              		@ args = 0, pretend = 0, frame = 16
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 85B0     		sub	sp, sp, #20
 746              		.cfi_def_cfa_offset 24
 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 749 0006 0346     		mov	r3, r0
 750 0008 FB71     		strb	r3, [r7, #7]
 613:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if(!((ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****          (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****          (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* End ADC_SAR_Seq_SAR_DEFAULT_RANGE */
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 25


 619:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 620:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     switch (resolution)
 751              		.loc 1 620 0
 752 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 753 000c 0A2B     		cmp	r3, #10
 754 000e 08D0     		beq	.L52
 755 0010 0C2B     		cmp	r3, #12
 756 0012 02D0     		beq	.L53
 757 0014 082B     		cmp	r3, #8
 758 0016 08D0     		beq	.L54
 759 0018 0BE0     		b	.L56
 760              	.L53:
 621:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         case (uint8)ADC_SAR_Seq_SAR__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             counts = (int32)ADC_SAR_Seq_SAR_SAR_WRK_MAX_12BIT;
 761              		.loc 1 623 0
 762 001a 4FF48053 		mov	r3, #4096
 763 001e FB60     		str	r3, [r7, #12]
 624:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #if(!((ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                 diff_zero = ADC_SAR_Seq_SAR_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #endif /* End ADC_SAR_Seq_SAR_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 764              		.loc 1 629 0
 765 0020 0AE0     		b	.L55
 766              	.L52:
 630:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         case (uint8)ADC_SAR_Seq_SAR__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             counts = (int32)ADC_SAR_Seq_SAR_SAR_WRK_MAX_10BIT;
 767              		.loc 1 631 0
 768 0022 4FF48063 		mov	r3, #1024
 769 0026 FB60     		str	r3, [r7, #12]
 632:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #if(!((ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                 diff_zero = ADC_SAR_Seq_SAR_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #endif /* End ADC_SAR_Seq_SAR_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 770              		.loc 1 637 0
 771 0028 06E0     		b	.L55
 772              	.L54:
 638:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         case (uint8)ADC_SAR_Seq_SAR__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             counts = (int32)ADC_SAR_Seq_SAR_SAR_WRK_MAX_8BIT;
 773              		.loc 1 639 0
 774 002a 4FF48073 		mov	r3, #256
 775 002e FB60     		str	r3, [r7, #12]
 640:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #if(!((ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                 diff_zero = ADC_SAR_Seq_SAR_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #endif /* End ADC_SAR_Seq_SAR_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 776              		.loc 1 645 0
 777 0030 02E0     		b	.L55
 778              	.L56:
 646:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             counts = 0;
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 26


 779              		.loc 1 647 0
 780 0032 0023     		movs	r3, #0
 781 0034 FB60     		str	r3, [r7, #12]
 648:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #if(!((ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                  (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             #endif /* End ADC_SAR_Seq_SAR_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             CYASSERT(0u != 0u);
 654:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****             break;
 782              		.loc 1 654 0
 783 0036 00BF     		nop
 784              	.L55:
 655:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_countsPerVolt = 0; /* Clear obsolete variable */
 785              		.loc 1 656 0
 786 0038 0C4B     		ldr	r3, .L57
 787 003a 0022     		movs	r2, #0
 788 003c 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_countsPer10Volt = (((counts * ADC_SAR_Seq_SAR_10MV_COUNTS) +
 789              		.loc 1 658 0
 790 003e FB68     		ldr	r3, [r7, #12]
 791 0040 42F21072 		movw	r2, #10000
 792 0044 02FB03F3 		mul	r3, r2, r3
 793 0048 03F6C413 		addw	r3, r3, #2500
 659:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                         ADC_SAR_Seq_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_Seq_SAR_DEFAULT_REF_VOLT
 794              		.loc 1 659 0
 795 004c 084A     		ldr	r2, .L57+4
 796 004e 82FB0312 		smull	r1, r2, r2, r3
 797 0052 D212     		asrs	r2, r2, #11
 798 0054 DB17     		asrs	r3, r3, #31
 799 0056 D31A     		subs	r3, r2, r3
 658:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                         ADC_SAR_Seq_SAR_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_Seq_SAR_DEFAULT_REF_VOLT
 800              		.loc 1 658 0
 801 0058 064A     		ldr	r2, .L57+8
 802 005a 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 661:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #if( (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****          (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****          (ADC_SAR_Seq_SAR_DEFAULT_RANGE == ADC_SAR_Seq_SAR__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_shift = 0;
 803              		.loc 1 664 0
 804 005c 064B     		ldr	r3, .L57+12
 805 005e 0022     		movs	r2, #0
 806 0060 1A80     		strh	r2, [r3]	@ movhi
 665:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         ADC_SAR_Seq_SAR_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     #endif /* End ADC_SAR_Seq_SAR_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 807              		.loc 1 668 0
 808 0062 1437     		adds	r7, r7, #20
 809              		.cfi_def_cfa_offset 4
 810 0064 BD46     		mov	sp, r7
 811              		.cfi_def_cfa_register 13
 812              		@ sp needed
 813 0066 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 27


 814              		.cfi_restore 7
 815              		.cfi_def_cfa_offset 0
 816 006a 7047     		bx	lr
 817              	.L58:
 818              		.align	2
 819              	.L57:
 820 006c 00000000 		.word	ADC_SAR_Seq_SAR_countsPerVolt
 821 0070 AD8BDB68 		.word	1759218605
 822 0074 00000000 		.word	ADC_SAR_Seq_SAR_countsPer10Volt
 823 0078 00000000 		.word	ADC_SAR_Seq_SAR_shift
 824              		.cfi_endproc
 825              	.LFE12:
 826              		.size	ADC_SAR_Seq_SAR_CalcGain, .-ADC_SAR_Seq_SAR_CalcGain
 827              		.section	.text.ADC_SAR_Seq_SAR_SetGain,"ax",%progbits
 828              		.align	2
 829              		.global	ADC_SAR_Seq_SAR_SetGain
 830              		.thumb
 831              		.thumb_func
 832              		.type	ADC_SAR_Seq_SAR_SetGain, %function
 833              	ADC_SAR_Seq_SAR_SetGain:
 834              	.LFB13:
 669:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 670:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 671:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_SetGain
 673:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 675:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 681:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 684:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 687:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 691:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 835              		.loc 1 693 0
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 8
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840 0000 80B4     		push	{r7}
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 7, -4
 843 0002 83B0     		sub	sp, sp, #12
 844              		.cfi_def_cfa_offset 16
 845 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 28


 846              		.cfi_def_cfa_register 7
 847 0006 0346     		mov	r3, r0
 848 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_countsPer10Volt = (int32)adcGain * 10;
 849              		.loc 1 694 0
 850 000a B7F90620 		ldrsh	r2, [r7, #6]
 851 000e 1346     		mov	r3, r2
 852 0010 9B00     		lsls	r3, r3, #2
 853 0012 1344     		add	r3, r3, r2
 854 0014 5B00     		lsls	r3, r3, #1
 855 0016 1A46     		mov	r2, r3
 856 0018 034B     		ldr	r3, .L60
 857 001a 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 858              		.loc 1 695 0
 859 001c 0C37     		adds	r7, r7, #12
 860              		.cfi_def_cfa_offset 4
 861 001e BD46     		mov	sp, r7
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 0020 5DF8047B 		ldr	r7, [sp], #4
 865              		.cfi_restore 7
 866              		.cfi_def_cfa_offset 0
 867 0024 7047     		bx	lr
 868              	.L61:
 869 0026 00BF     		.align	2
 870              	.L60:
 871 0028 00000000 		.word	ADC_SAR_Seq_SAR_countsPer10Volt
 872              		.cfi_endproc
 873              	.LFE13:
 874              		.size	ADC_SAR_Seq_SAR_SetGain, .-ADC_SAR_Seq_SAR_SetGain
 875              		.section	.text.ADC_SAR_Seq_SAR_SetScaledGain,"ax",%progbits
 876              		.align	2
 877              		.global	ADC_SAR_Seq_SAR_SetScaledGain
 878              		.thumb
 879              		.thumb_func
 880              		.type	ADC_SAR_Seq_SAR_SetScaledGain, %function
 881              	ADC_SAR_Seq_SAR_SetScaledGain:
 882              	.LFB14:
 696:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 697:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 698:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 702:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 708:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 711:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 29


 714:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 718:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** void ADC_SAR_Seq_SAR_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 883              		.loc 1 720 0
 884              		.cfi_startproc
 885              		@ args = 0, pretend = 0, frame = 8
 886              		@ frame_needed = 1, uses_anonymous_args = 0
 887              		@ link register save eliminated.
 888 0000 80B4     		push	{r7}
 889              		.cfi_def_cfa_offset 4
 890              		.cfi_offset 7, -4
 891 0002 83B0     		sub	sp, sp, #12
 892              		.cfi_def_cfa_offset 16
 893 0004 00AF     		add	r7, sp, #0
 894              		.cfi_def_cfa_register 7
 895 0006 7860     		str	r0, [r7, #4]
 721:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     ADC_SAR_Seq_SAR_countsPer10Volt = adcGain;
 896              		.loc 1 721 0
 897 0008 034A     		ldr	r2, .L63
 898 000a 7B68     		ldr	r3, [r7, #4]
 899 000c 1360     		str	r3, [r2]
 722:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 900              		.loc 1 722 0
 901 000e 0C37     		adds	r7, r7, #12
 902              		.cfi_def_cfa_offset 4
 903 0010 BD46     		mov	sp, r7
 904              		.cfi_def_cfa_register 13
 905              		@ sp needed
 906 0012 5DF8047B 		ldr	r7, [sp], #4
 907              		.cfi_restore 7
 908              		.cfi_def_cfa_offset 0
 909 0016 7047     		bx	lr
 910              	.L64:
 911              		.align	2
 912              	.L63:
 913 0018 00000000 		.word	ADC_SAR_Seq_SAR_countsPer10Volt
 914              		.cfi_endproc
 915              	.LFE14:
 916              		.size	ADC_SAR_Seq_SAR_SetScaledGain, .-ADC_SAR_Seq_SAR_SetScaledGain
 917              		.section	.text.ADC_SAR_Seq_SAR_CountsTo_mVolts,"ax",%progbits
 918              		.align	2
 919              		.global	ADC_SAR_Seq_SAR_CountsTo_mVolts
 920              		.thumb
 921              		.thumb_func
 922              		.type	ADC_SAR_Seq_SAR_CountsTo_mVolts, %function
 923              	ADC_SAR_Seq_SAR_CountsTo_mVolts:
 924              	.LFB15:
 723:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 724:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 725:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 30


 729:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 732:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 735:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 738:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 742:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** int16 ADC_SAR_Seq_SAR_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 925              		.loc 1 744 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 16
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929              		@ link register save eliminated.
 930 0000 80B4     		push	{r7}
 931              		.cfi_def_cfa_offset 4
 932              		.cfi_offset 7, -4
 933 0002 85B0     		sub	sp, sp, #20
 934              		.cfi_def_cfa_offset 24
 935 0004 00AF     		add	r7, sp, #0
 936              		.cfi_def_cfa_register 7
 937 0006 0346     		mov	r3, r0
 938 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 748:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     if(ADC_SAR_Seq_SAR_countsPerVolt != 0)
 939              		.loc 1 748 0
 940 000a 1D4B     		ldr	r3, .L71
 941 000c 1B88     		ldrh	r3, [r3]	@ movhi
 942 000e 9BB2     		uxth	r3, r3
 943 0010 002B     		cmp	r3, #0
 944 0012 09D0     		beq	.L66
 749:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_SAR_countsPerVolt * 10;
 945              		.loc 1 750 0
 946 0014 1A4B     		ldr	r3, .L71
 947 0016 1B88     		ldrh	r3, [r3]	@ movhi
 948 0018 9BB2     		uxth	r3, r3
 949 001a 1AB2     		sxth	r2, r3
 950 001c 1346     		mov	r3, r2
 951 001e 9B00     		lsls	r3, r3, #2
 952 0020 1344     		add	r3, r3, r2
 953 0022 5B00     		lsls	r3, r3, #1
 954 0024 FB60     		str	r3, [r7, #12]
 955 0026 02E0     		b	.L67
 956              	.L66:
 751:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 31


 754:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_SAR_countsPer10Volt;
 957              		.loc 1 754 0
 958 0028 164B     		ldr	r3, .L71+4
 959 002a 1B68     		ldr	r3, [r3]
 960 002c FB60     		str	r3, [r7, #12]
 961              	.L67:
 755:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 757:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     adcCounts -= ADC_SAR_Seq_SAR_offset;
 962              		.loc 1 758 0
 963 002e 164B     		ldr	r3, .L71+8
 964 0030 1B88     		ldrh	r3, [r3]	@ movhi
 965 0032 9BB2     		uxth	r3, r3
 966 0034 FA88     		ldrh	r2, [r7, #6]
 967 0036 9BB2     		uxth	r3, r3
 968 0038 D31A     		subs	r3, r2, r3
 969 003a 9BB2     		uxth	r3, r3
 970 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_Seq_SAR_10MV_COUNTS ) + ( (adcCounts > 0) ?
 971              		.loc 1 760 0
 972 003e B7F90630 		ldrsh	r3, [r7, #6]
 973 0042 42F21072 		movw	r2, #10000
 974 0046 02FB03F2 		mul	r2, r2, r3
 761:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 975              		.loc 1 761 0
 976 004a B7F90630 		ldrsh	r3, [r7, #6]
 977 004e 002B     		cmp	r3, #0
 978 0050 04DD     		ble	.L68
 979              		.loc 1 761 0 is_stmt 0 discriminator 1
 980 0052 FB68     		ldr	r3, [r7, #12]
 981 0054 D90F     		lsrs	r1, r3, #31
 982 0056 0B44     		add	r3, r3, r1
 983 0058 5B10     		asrs	r3, r3, #1
 984 005a 04E0     		b	.L69
 985              	.L68:
 986              		.loc 1 761 0 discriminator 2
 987 005c FB68     		ldr	r3, [r7, #12]
 988 005e D90F     		lsrs	r1, r3, #31
 989 0060 0B44     		add	r3, r3, r1
 990 0062 5B10     		asrs	r3, r3, #1
 991 0064 5B42     		negs	r3, r3
 992              	.L69:
 760:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 993              		.loc 1 760 0 is_stmt 1
 994 0066 1A44     		add	r2, r2, r3
 995              		.loc 1 761 0
 996 0068 FB68     		ldr	r3, [r7, #12]
 997 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 998              		.loc 1 760 0
 999 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 763:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     return( mVolts );
 1000              		.loc 1 763 0
 1001 0070 7B89     		ldrh	r3, [r7, #10]
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 32


 1002 0072 1BB2     		sxth	r3, r3
 764:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 1003              		.loc 1 764 0
 1004 0074 1846     		mov	r0, r3
 1005 0076 1437     		adds	r7, r7, #20
 1006              		.cfi_def_cfa_offset 4
 1007 0078 BD46     		mov	sp, r7
 1008              		.cfi_def_cfa_register 13
 1009              		@ sp needed
 1010 007a 5DF8047B 		ldr	r7, [sp], #4
 1011              		.cfi_restore 7
 1012              		.cfi_def_cfa_offset 0
 1013 007e 7047     		bx	lr
 1014              	.L72:
 1015              		.align	2
 1016              	.L71:
 1017 0080 00000000 		.word	ADC_SAR_Seq_SAR_countsPerVolt
 1018 0084 00000000 		.word	ADC_SAR_Seq_SAR_countsPer10Volt
 1019 0088 00000000 		.word	ADC_SAR_Seq_SAR_offset
 1020              		.cfi_endproc
 1021              	.LFE15:
 1022              		.size	ADC_SAR_Seq_SAR_CountsTo_mVolts, .-ADC_SAR_Seq_SAR_CountsTo_mVolts
 1023              		.global	__aeabi_ldivmod
 1024              		.section	.text.ADC_SAR_Seq_SAR_CountsTo_uVolts,"ax",%progbits
 1025              		.align	2
 1026              		.global	ADC_SAR_Seq_SAR_CountsTo_uVolts
 1027              		.thumb
 1028              		.thumb_func
 1029              		.type	ADC_SAR_Seq_SAR_CountsTo_uVolts, %function
 1030              	ADC_SAR_Seq_SAR_CountsTo_uVolts:
 1031              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 766:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 767:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 771:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 774:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 777:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 778:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 780:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 784:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** int32 ADC_SAR_Seq_SAR_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 1032              		.loc 1 786 0
 1033              		.cfi_startproc
 1034              		@ args = 0, pretend = 0, frame = 24
 1035              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 33


 1036 0000 B0B5     		push	{r4, r5, r7, lr}
 1037              		.cfi_def_cfa_offset 16
 1038              		.cfi_offset 4, -16
 1039              		.cfi_offset 5, -12
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 1042 0002 86B0     		sub	sp, sp, #24
 1043              		.cfi_def_cfa_offset 40
 1044 0004 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 1046 0006 0346     		mov	r3, r0
 1047 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 788:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 791:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     if(ADC_SAR_Seq_SAR_countsPerVolt != 0)
 1048              		.loc 1 791 0
 1049 000a 1E4B     		ldr	r3, .L77
 1050 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1051 000e 9BB2     		uxth	r3, r3
 1052 0010 002B     		cmp	r3, #0
 1053 0012 09D0     		beq	.L74
 792:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_SAR_countsPerVolt * 10;
 1054              		.loc 1 793 0
 1055 0014 1B4B     		ldr	r3, .L77
 1056 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1057 0018 9BB2     		uxth	r3, r3
 1058 001a 1AB2     		sxth	r2, r3
 1059 001c 1346     		mov	r3, r2
 1060 001e 9B00     		lsls	r3, r3, #2
 1061 0020 1344     		add	r3, r3, r2
 1062 0022 5B00     		lsls	r3, r3, #1
 1063 0024 7B61     		str	r3, [r7, #20]
 1064 0026 02E0     		b	.L75
 1065              	.L74:
 794:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_SAR_countsPer10Volt;
 1066              		.loc 1 797 0
 1067 0028 174B     		ldr	r3, .L77+4
 1068 002a 1B68     		ldr	r3, [r3]
 1069 002c 7B61     		str	r3, [r7, #20]
 1070              	.L75:
 798:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 800:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     adcCounts -= ADC_SAR_Seq_SAR_offset;
 1071              		.loc 1 801 0
 1072 002e 174B     		ldr	r3, .L77+8
 1073 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1074 0032 9BB2     		uxth	r3, r3
 1075 0034 FA88     		ldrh	r2, [r7, #6]
 1076 0036 9BB2     		uxth	r3, r3
 1077 0038 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 34


 1078 003a 9BB2     		uxth	r3, r3
 1079 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_Seq_SAR_10UV_COUNTS ) / countsPer10Volt);
 1080              		.loc 1 805 0
 1081 003e B7F90620 		ldrsh	r2, [r7, #6]
 1082 0042 4FEAE273 		asr	r3, r2, #31
 1083 0046 1249     		ldr	r1, .L77+12
 1084 0048 01FB03F0 		mul	r0, r1, r3
 1085 004c 0021     		movs	r1, #0
 1086 004e 01FB02F1 		mul	r1, r1, r2
 1087 0052 0144     		add	r1, r1, r0
 1088 0054 0E48     		ldr	r0, .L77+12
 1089 0056 A2FB0023 		umull	r2, r3, r2, r0
 1090 005a 1944     		add	r1, r1, r3
 1091 005c 0B46     		mov	r3, r1
 1092 005e 7969     		ldr	r1, [r7, #20]
 1093 0060 0C46     		mov	r4, r1
 1094 0062 4FEAE475 		asr	r5, r4, #31
 1095 0066 1046     		mov	r0, r2
 1096 0068 1946     		mov	r1, r3
 1097 006a 2246     		mov	r2, r4
 1098 006c 2B46     		mov	r3, r5
 1099 006e FFF7FEFF 		bl	__aeabi_ldivmod
 1100 0072 0246     		mov	r2, r0
 1101 0074 0B46     		mov	r3, r1
 1102 0076 C7E90223 		strd	r2, [r7, #8]
 806:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 807:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     return( uVolts );
 1103              		.loc 1 807 0
 1104 007a BB68     		ldr	r3, [r7, #8]
 808:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
 1105              		.loc 1 808 0
 1106 007c 1846     		mov	r0, r3
 1107 007e 1837     		adds	r7, r7, #24
 1108              		.cfi_def_cfa_offset 16
 1109 0080 BD46     		mov	sp, r7
 1110              		.cfi_def_cfa_register 13
 1111              		@ sp needed
 1112 0082 B0BD     		pop	{r4, r5, r7, pc}
 1113              	.L78:
 1114              		.align	2
 1115              	.L77:
 1116 0084 00000000 		.word	ADC_SAR_Seq_SAR_countsPerVolt
 1117 0088 00000000 		.word	ADC_SAR_Seq_SAR_countsPer10Volt
 1118 008c 00000000 		.word	ADC_SAR_Seq_SAR_offset
 1119 0090 80969800 		.word	10000000
 1120              		.cfi_endproc
 1121              	.LFE16:
 1122              		.size	ADC_SAR_Seq_SAR_CountsTo_uVolts, .-ADC_SAR_Seq_SAR_CountsTo_uVolts
 1123              		.global	__aeabi_i2f
 1124              		.global	__aeabi_fmul
 1125              		.global	__aeabi_fdiv
 1126              		.section	.text.ADC_SAR_Seq_SAR_CountsTo_Volts,"ax",%progbits
 1127              		.align	2
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 35


 1128              		.global	ADC_SAR_Seq_SAR_CountsTo_Volts
 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	ADC_SAR_Seq_SAR_CountsTo_Volts, %function
 1132              	ADC_SAR_Seq_SAR_CountsTo_Volts:
 1133              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 810:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 811:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Function Name: ADC_SAR_Seq_SAR_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 815:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 818:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 821:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 824:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *  ADC_SAR_Seq_SAR_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *
 828:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** float32 ADC_SAR_Seq_SAR_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** {
 1134              		.loc 1 830 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 16
 1137              		@ frame_needed = 1, uses_anonymous_args = 0
 1138 0000 90B5     		push	{r4, r7, lr}
 1139              		.cfi_def_cfa_offset 12
 1140              		.cfi_offset 4, -12
 1141              		.cfi_offset 7, -8
 1142              		.cfi_offset 14, -4
 1143 0002 85B0     		sub	sp, sp, #20
 1144              		.cfi_def_cfa_offset 32
 1145 0004 00AF     		add	r7, sp, #0
 1146              		.cfi_def_cfa_register 7
 1147 0006 0346     		mov	r3, r0
 1148 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 834:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     if(ADC_SAR_Seq_SAR_countsPerVolt != 0)
 1149              		.loc 1 834 0
 1150 000a 1A4B     		ldr	r3, .L83
 1151 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1152 000e 9BB2     		uxth	r3, r3
 1153 0010 002B     		cmp	r3, #0
 1154 0012 09D0     		beq	.L80
 835:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         countsPer10Volt = (int32)ADC_SAR_Seq_SAR_countsPerVolt * 10;
 1155              		.loc 1 836 0
 1156 0014 174B     		ldr	r3, .L83
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 36


 1157 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1158 0018 9BB2     		uxth	r3, r3
 1159 001a 1AB2     		sxth	r2, r3
 1160 001c 1346     		mov	r3, r2
 1161 001e 9B00     		lsls	r3, r3, #2
 1162 0020 1344     		add	r3, r3, r2
 1163 0022 5B00     		lsls	r3, r3, #1
 1164 0024 FB60     		str	r3, [r7, #12]
 1165 0026 02E0     		b	.L81
 1166              	.L80:
 837:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 838:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****         countsPer10Volt = ADC_SAR_Seq_SAR_countsPer10Volt;
 1167              		.loc 1 840 0
 1168 0028 134B     		ldr	r3, .L83+4
 1169 002a 1B68     		ldr	r3, [r3]
 1170 002c FB60     		str	r3, [r7, #12]
 1171              	.L81:
 841:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 843:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     adcCounts -= ADC_SAR_Seq_SAR_offset;
 1172              		.loc 1 844 0
 1173 002e 134B     		ldr	r3, .L83+8
 1174 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1175 0032 9BB2     		uxth	r3, r3
 1176 0034 FA88     		ldrh	r2, [r7, #6]
 1177 0036 9BB2     		uxth	r3, r3
 1178 0038 D31A     		subs	r3, r2, r3
 1179 003a 9BB2     		uxth	r3, r3
 1180 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 846:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     volts = ((float32)adcCounts * ADC_SAR_Seq_SAR_10V_COUNTS) / (float32)countsPer10Volt;
 1181              		.loc 1 846 0
 1182 003e B7F90630 		ldrsh	r3, [r7, #6]
 1183 0042 1846     		mov	r0, r3
 1184 0044 FFF7FEFF 		bl	__aeabi_i2f
 1185 0048 0346     		mov	r3, r0
 1186 004a 1846     		mov	r0, r3
 1187 004c 0C49     		ldr	r1, .L83+12
 1188 004e FFF7FEFF 		bl	__aeabi_fmul
 1189 0052 0346     		mov	r3, r0
 1190 0054 1C46     		mov	r4, r3
 1191 0056 F868     		ldr	r0, [r7, #12]
 1192 0058 FFF7FEFF 		bl	__aeabi_i2f
 1193 005c 0346     		mov	r3, r0
 1194 005e 2046     		mov	r0, r4
 1195 0060 1946     		mov	r1, r3
 1196 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1197 0066 0346     		mov	r3, r0
 1198 0068 BB60     		str	r3, [r7, #8]	@ float
 847:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** 
 848:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c ****     return( volts );
 1199              		.loc 1 848 0
 1200 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:Generated_Source\PSoC5/ADC_SAR_Seq_SAR.c **** }
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 37


 1201              		.loc 1 849 0
 1202 006c 1846     		mov	r0, r3
 1203 006e 1437     		adds	r7, r7, #20
 1204              		.cfi_def_cfa_offset 12
 1205 0070 BD46     		mov	sp, r7
 1206              		.cfi_def_cfa_register 13
 1207              		@ sp needed
 1208 0072 90BD     		pop	{r4, r7, pc}
 1209              	.L84:
 1210              		.align	2
 1211              	.L83:
 1212 0074 00000000 		.word	ADC_SAR_Seq_SAR_countsPerVolt
 1213 0078 00000000 		.word	ADC_SAR_Seq_SAR_countsPer10Volt
 1214 007c 00000000 		.word	ADC_SAR_Seq_SAR_offset
 1215 0080 00002041 		.word	1092616192
 1216              		.cfi_endproc
 1217              	.LFE17:
 1218              		.size	ADC_SAR_Seq_SAR_CountsTo_Volts, .-ADC_SAR_Seq_SAR_CountsTo_Volts
 1219              		.text
 1220              	.Letext0:
 1221              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1222              		.section	.debug_info,"",%progbits
 1223              	.Ldebug_info0:
 1224 0000 57040000 		.4byte	0x457
 1225 0004 0400     		.2byte	0x4
 1226 0006 00000000 		.4byte	.Ldebug_abbrev0
 1227 000a 04       		.byte	0x4
 1228 000b 01       		.uleb128 0x1
 1229 000c A2020000 		.4byte	.LASF57
 1230 0010 01       		.byte	0x1
 1231 0011 49040000 		.4byte	.LASF58
 1232 0015 57010000 		.4byte	.LASF59
 1233 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1234 001d 00000000 		.4byte	0
 1235 0021 00000000 		.4byte	.Ldebug_line0
 1236 0025 02       		.uleb128 0x2
 1237 0026 04       		.byte	0x4
 1238 0027 05       		.byte	0x5
 1239 0028 696E7400 		.ascii	"int\000"
 1240 002c 03       		.uleb128 0x3
 1241 002d 04       		.byte	0x4
 1242 002e 07       		.byte	0x7
 1243 002f 43010000 		.4byte	.LASF0
 1244 0033 03       		.uleb128 0x3
 1245 0034 01       		.byte	0x1
 1246 0035 06       		.byte	0x6
 1247 0036 5B000000 		.4byte	.LASF1
 1248 003a 03       		.uleb128 0x3
 1249 003b 01       		.byte	0x1
 1250 003c 08       		.byte	0x8
 1251 003d 63030000 		.4byte	.LASF2
 1252 0041 03       		.uleb128 0x3
 1253 0042 02       		.byte	0x2
 1254 0043 05       		.byte	0x5
 1255 0044 71030000 		.4byte	.LASF3
 1256 0048 03       		.uleb128 0x3
 1257 0049 02       		.byte	0x2
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 38


 1258 004a 07       		.byte	0x7
 1259 004b AD010000 		.4byte	.LASF4
 1260 004f 03       		.uleb128 0x3
 1261 0050 04       		.byte	0x4
 1262 0051 05       		.byte	0x5
 1263 0052 A1000000 		.4byte	.LASF5
 1264 0056 03       		.uleb128 0x3
 1265 0057 04       		.byte	0x4
 1266 0058 07       		.byte	0x7
 1267 0059 95010000 		.4byte	.LASF6
 1268 005d 03       		.uleb128 0x3
 1269 005e 08       		.byte	0x8
 1270 005f 05       		.byte	0x5
 1271 0060 4D000000 		.4byte	.LASF7
 1272 0064 03       		.uleb128 0x3
 1273 0065 08       		.byte	0x8
 1274 0066 07       		.byte	0x7
 1275 0067 16000000 		.4byte	.LASF8
 1276 006b 03       		.uleb128 0x3
 1277 006c 04       		.byte	0x4
 1278 006d 07       		.byte	0x7
 1279 006e 7B020000 		.4byte	.LASF9
 1280 0072 03       		.uleb128 0x3
 1281 0073 01       		.byte	0x1
 1282 0074 08       		.byte	0x8
 1283 0075 D7030000 		.4byte	.LASF10
 1284 0079 04       		.uleb128 0x4
 1285 007a 05010000 		.4byte	.LASF11
 1286 007e 02       		.byte	0x2
 1287 007f 9201     		.2byte	0x192
 1288 0081 3A000000 		.4byte	0x3a
 1289 0085 04       		.uleb128 0x4
 1290 0086 00000000 		.4byte	.LASF12
 1291 008a 02       		.byte	0x2
 1292 008b 9301     		.2byte	0x193
 1293 008d 48000000 		.4byte	0x48
 1294 0091 04       		.uleb128 0x4
 1295 0092 C0010000 		.4byte	.LASF13
 1296 0096 02       		.byte	0x2
 1297 0097 9501     		.2byte	0x195
 1298 0099 33000000 		.4byte	0x33
 1299 009d 04       		.uleb128 0x4
 1300 009e 72040000 		.4byte	.LASF14
 1301 00a2 02       		.byte	0x2
 1302 00a3 9601     		.2byte	0x196
 1303 00a5 41000000 		.4byte	0x41
 1304 00a9 04       		.uleb128 0x4
 1305 00aa 9B000000 		.4byte	.LASF15
 1306 00ae 02       		.byte	0x2
 1307 00af 9701     		.2byte	0x197
 1308 00b1 4F000000 		.4byte	0x4f
 1309 00b5 04       		.uleb128 0x4
 1310 00b6 73020000 		.4byte	.LASF16
 1311 00ba 02       		.byte	0x2
 1312 00bb 9801     		.2byte	0x198
 1313 00bd C1000000 		.4byte	0xc1
 1314 00c1 03       		.uleb128 0x3
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 39


 1315 00c2 04       		.byte	0x4
 1316 00c3 04       		.byte	0x4
 1317 00c4 52030000 		.4byte	.LASF17
 1318 00c8 03       		.uleb128 0x3
 1319 00c9 08       		.byte	0x8
 1320 00ca 04       		.byte	0x4
 1321 00cb 0B010000 		.4byte	.LASF18
 1322 00cf 04       		.uleb128 0x4
 1323 00d0 4C030000 		.4byte	.LASF19
 1324 00d4 02       		.byte	0x2
 1325 00d5 9D01     		.2byte	0x19d
 1326 00d7 5D000000 		.4byte	0x5d
 1327 00db 04       		.uleb128 0x4
 1328 00dc 5E030000 		.4byte	.LASF20
 1329 00e0 02       		.byte	0x2
 1330 00e1 3C02     		.2byte	0x23c
 1331 00e3 E7000000 		.4byte	0xe7
 1332 00e7 05       		.uleb128 0x5
 1333 00e8 79000000 		.4byte	0x79
 1334 00ec 04       		.uleb128 0x4
 1335 00ed DF000000 		.4byte	.LASF21
 1336 00f1 02       		.byte	0x2
 1337 00f2 3D02     		.2byte	0x23d
 1338 00f4 F8000000 		.4byte	0xf8
 1339 00f8 05       		.uleb128 0x5
 1340 00f9 85000000 		.4byte	0x85
 1341 00fd 06       		.uleb128 0x6
 1342 00fe C9000000 		.4byte	.LASF22
 1343 0102 01       		.byte	0x1
 1344 0103 4A       		.byte	0x4a
 1345 0104 00000000 		.4byte	.LFB0
 1346 0108 20000000 		.4byte	.LFE0-.LFB0
 1347 010c 01       		.uleb128 0x1
 1348 010d 9C       		.byte	0x9c
 1349 010e 06       		.uleb128 0x6
 1350 010f 04040000 		.4byte	.LASF23
 1351 0113 01       		.byte	0x1
 1352 0114 6A       		.byte	0x6a
 1353 0115 00000000 		.4byte	.LFB1
 1354 0119 2C000000 		.4byte	.LFE1-.LFB1
 1355 011d 01       		.uleb128 0x1
 1356 011e 9C       		.byte	0x9c
 1357 011f 07       		.uleb128 0x7
 1358 0120 ED030000 		.4byte	.LASF26
 1359 0124 01       		.byte	0x1
 1360 0125 8F       		.byte	0x8f
 1361 0126 00000000 		.4byte	.LFB2
 1362 012a C0000000 		.4byte	.LFE2-.LFB2
 1363 012e 01       		.uleb128 0x1
 1364 012f 9C       		.byte	0x9c
 1365 0130 51010000 		.4byte	0x151
 1366 0134 08       		.uleb128 0x8
 1367 0135 8E040000 		.4byte	.LASF24
 1368 0139 01       		.byte	0x1
 1369 013a 91       		.byte	0x91
 1370 013b 79000000 		.4byte	0x79
 1371 013f 02       		.uleb128 0x2
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 40


 1372 0140 91       		.byte	0x91
 1373 0141 76       		.sleb128 -10
 1374 0142 08       		.uleb128 0x8
 1375 0143 31040000 		.4byte	.LASF25
 1376 0147 01       		.byte	0x1
 1377 0148 92       		.byte	0x92
 1378 0149 79000000 		.4byte	0x79
 1379 014d 02       		.uleb128 0x2
 1380 014e 91       		.byte	0x91
 1381 014f 77       		.sleb128 -9
 1382 0150 00       		.byte	0
 1383 0151 07       		.uleb128 0x7
 1384 0152 C5010000 		.4byte	.LASF27
 1385 0156 01       		.byte	0x1
 1386 0157 F8       		.byte	0xf8
 1387 0158 00000000 		.4byte	.LFB3
 1388 015c 58000000 		.4byte	.LFE3-.LFB3
 1389 0160 01       		.uleb128 0x1
 1390 0161 9C       		.byte	0x9c
 1391 0162 75010000 		.4byte	0x175
 1392 0166 08       		.uleb128 0x8
 1393 0167 31040000 		.4byte	.LASF25
 1394 016b 01       		.byte	0x1
 1395 016c FA       		.byte	0xfa
 1396 016d 79000000 		.4byte	0x79
 1397 0171 02       		.uleb128 0x2
 1398 0172 91       		.byte	0x91
 1399 0173 77       		.sleb128 -9
 1400 0174 00       		.byte	0
 1401 0175 09       		.uleb128 0x9
 1402 0176 22010000 		.4byte	.LASF28
 1403 017a 01       		.byte	0x1
 1404 017b 2201     		.2byte	0x122
 1405 017d 00000000 		.4byte	.LFB4
 1406 0181 40000000 		.4byte	.LFE4-.LFB4
 1407 0185 01       		.uleb128 0x1
 1408 0186 9C       		.byte	0x9c
 1409 0187 AA010000 		.4byte	0x1aa
 1410 018b 0A       		.uleb128 0xa
 1411 018c 58030000 		.4byte	.LASF30
 1412 0190 01       		.byte	0x1
 1413 0191 2201     		.2byte	0x122
 1414 0193 79000000 		.4byte	0x79
 1415 0197 02       		.uleb128 0x2
 1416 0198 91       		.byte	0x91
 1417 0199 6F       		.sleb128 -17
 1418 019a 0B       		.uleb128 0xb
 1419 019b 8E040000 		.4byte	.LASF24
 1420 019f 01       		.byte	0x1
 1421 01a0 2401     		.2byte	0x124
 1422 01a2 79000000 		.4byte	0x79
 1423 01a6 02       		.uleb128 0x2
 1424 01a7 91       		.byte	0x91
 1425 01a8 77       		.sleb128 -9
 1426 01a9 00       		.byte	0
 1427 01aa 0C       		.uleb128 0xc
 1428 01ab 84020000 		.4byte	.LASF29
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 41


 1429 01af 01       		.byte	0x1
 1430 01b0 5401     		.2byte	0x154
 1431 01b2 00000000 		.4byte	.LFB5
 1432 01b6 4C000000 		.4byte	.LFE5-.LFB5
 1433 01ba 01       		.uleb128 0x1
 1434 01bb 9C       		.byte	0x9c
 1435 01bc DF010000 		.4byte	0x1df
 1436 01c0 0A       		.uleb128 0xa
 1437 01c1 99030000 		.4byte	.LASF31
 1438 01c5 01       		.byte	0x1
 1439 01c6 5401     		.2byte	0x154
 1440 01c8 79000000 		.4byte	0x79
 1441 01cc 02       		.uleb128 0x2
 1442 01cd 91       		.byte	0x91
 1443 01ce 6F       		.sleb128 -17
 1444 01cf 0B       		.uleb128 0xb
 1445 01d0 8E040000 		.4byte	.LASF24
 1446 01d4 01       		.byte	0x1
 1447 01d5 5601     		.2byte	0x156
 1448 01d7 79000000 		.4byte	0x79
 1449 01db 02       		.uleb128 0x2
 1450 01dc 91       		.byte	0x91
 1451 01dd 77       		.sleb128 -9
 1452 01de 00       		.byte	0
 1453 01df 0D       		.uleb128 0xd
 1454 01e0 7E000000 		.4byte	.LASF32
 1455 01e4 01       		.byte	0x1
 1456 01e5 9101     		.2byte	0x191
 1457 01e7 00000000 		.4byte	.LFB6
 1458 01eb 20000000 		.4byte	.LFE6-.LFB6
 1459 01ef 01       		.uleb128 0x1
 1460 01f0 9C       		.byte	0x9c
 1461 01f1 0D       		.uleb128 0xd
 1462 01f2 30030000 		.4byte	.LASF33
 1463 01f6 01       		.byte	0x1
 1464 01f7 B301     		.2byte	0x1b3
 1465 01f9 00000000 		.4byte	.LFB7
 1466 01fd 20000000 		.4byte	.LFE7-.LFB7
 1467 0201 01       		.uleb128 0x1
 1468 0202 9C       		.byte	0x9c
 1469 0203 0E       		.uleb128 0xe
 1470 0204 DA010000 		.4byte	.LASF36
 1471 0208 01       		.byte	0x1
 1472 0209 DB01     		.2byte	0x1db
 1473 020b 79000000 		.4byte	0x79
 1474 020f 00000000 		.4byte	.LFB8
 1475 0213 40000000 		.4byte	.LFE8-.LFB8
 1476 0217 01       		.uleb128 0x1
 1477 0218 9C       		.byte	0x9c
 1478 0219 3C020000 		.4byte	0x23c
 1479 021d 0A       		.uleb128 0xa
 1480 021e 3B010000 		.4byte	.LASF34
 1481 0222 01       		.byte	0x1
 1482 0223 DB01     		.2byte	0x1db
 1483 0225 79000000 		.4byte	0x79
 1484 0229 02       		.uleb128 0x2
 1485 022a 91       		.byte	0x91
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 42


 1486 022b 6F       		.sleb128 -17
 1487 022c 0B       		.uleb128 0xb
 1488 022d 42040000 		.4byte	.LASF35
 1489 0231 01       		.byte	0x1
 1490 0232 DD01     		.2byte	0x1dd
 1491 0234 79000000 		.4byte	0x79
 1492 0238 02       		.uleb128 0x2
 1493 0239 91       		.byte	0x91
 1494 023a 77       		.sleb128 -9
 1495 023b 00       		.byte	0
 1496 023c 0F       		.uleb128 0xf
 1497 023d 95040000 		.4byte	.LASF60
 1498 0241 01       		.byte	0x1
 1499 0242 0802     		.2byte	0x208
 1500 0244 91000000 		.4byte	0x91
 1501 0248 00000000 		.4byte	.LFB9
 1502 024c 2C000000 		.4byte	.LFE9-.LFB9
 1503 0250 01       		.uleb128 0x1
 1504 0251 9C       		.byte	0x9c
 1505 0252 10       		.uleb128 0x10
 1506 0253 FA010000 		.4byte	.LASF37
 1507 0257 01       		.byte	0x1
 1508 0258 2602     		.2byte	0x226
 1509 025a 9D000000 		.4byte	0x9d
 1510 025e 00000000 		.4byte	.LFB10
 1511 0262 34000000 		.4byte	.LFE10-.LFB10
 1512 0266 01       		.uleb128 0x1
 1513 0267 9C       		.byte	0x9c
 1514 0268 7C020000 		.4byte	0x27c
 1515 026c 11       		.uleb128 0x11
 1516 026d 72657300 		.ascii	"res\000"
 1517 0271 01       		.byte	0x1
 1518 0272 2802     		.2byte	0x228
 1519 0274 85000000 		.4byte	0x85
 1520 0278 02       		.uleb128 0x2
 1521 0279 91       		.byte	0x91
 1522 027a 76       		.sleb128 -10
 1523 027b 00       		.byte	0
 1524 027c 09       		.uleb128 0x9
 1525 027d BD030000 		.4byte	.LASF38
 1526 0281 01       		.byte	0x1
 1527 0282 4902     		.2byte	0x249
 1528 0284 00000000 		.4byte	.LFB11
 1529 0288 20000000 		.4byte	.LFE11-.LFB11
 1530 028c 01       		.uleb128 0x1
 1531 028d 9C       		.byte	0x9c
 1532 028e A2020000 		.4byte	0x2a2
 1533 0292 0A       		.uleb128 0xa
 1534 0293 DC030000 		.4byte	.LASF39
 1535 0297 01       		.byte	0x1
 1536 0298 4902     		.2byte	0x249
 1537 029a 9D000000 		.4byte	0x9d
 1538 029e 02       		.uleb128 0x2
 1539 029f 91       		.byte	0x91
 1540 02a0 76       		.sleb128 -10
 1541 02a1 00       		.byte	0
 1542 02a2 12       		.uleb128 0x12
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 43


 1543 02a3 A4030000 		.4byte	.LASF61
 1544 02a7 01       		.byte	0x1
 1545 02a8 6302     		.2byte	0x263
 1546 02aa 00000000 		.4byte	.LFB12
 1547 02ae 7C000000 		.4byte	.LFE12-.LFB12
 1548 02b2 01       		.uleb128 0x1
 1549 02b3 9C       		.byte	0x9c
 1550 02b4 D7020000 		.4byte	0x2d7
 1551 02b8 0A       		.uleb128 0xa
 1552 02b9 99030000 		.4byte	.LASF31
 1553 02bd 01       		.byte	0x1
 1554 02be 6302     		.2byte	0x263
 1555 02c0 79000000 		.4byte	0x79
 1556 02c4 02       		.uleb128 0x2
 1557 02c5 91       		.byte	0x91
 1558 02c6 6F       		.sleb128 -17
 1559 02c7 0B       		.uleb128 0xb
 1560 02c8 0F000000 		.4byte	.LASF40
 1561 02cc 01       		.byte	0x1
 1562 02cd 6502     		.2byte	0x265
 1563 02cf A9000000 		.4byte	0xa9
 1564 02d3 02       		.uleb128 0x2
 1565 02d4 91       		.byte	0x91
 1566 02d5 74       		.sleb128 -12
 1567 02d6 00       		.byte	0
 1568 02d7 09       		.uleb128 0x9
 1569 02d8 19040000 		.4byte	.LASF41
 1570 02dc 01       		.byte	0x1
 1571 02dd B402     		.2byte	0x2b4
 1572 02df 00000000 		.4byte	.LFB13
 1573 02e3 2C000000 		.4byte	.LFE13-.LFB13
 1574 02e7 01       		.uleb128 0x1
 1575 02e8 9C       		.byte	0x9c
 1576 02e9 FD020000 		.4byte	0x2fd
 1577 02ed 0A       		.uleb128 0xa
 1578 02ee 07000000 		.4byte	.LASF42
 1579 02f2 01       		.byte	0x1
 1580 02f3 B402     		.2byte	0x2b4
 1581 02f5 9D000000 		.4byte	0x9d
 1582 02f9 02       		.uleb128 0x2
 1583 02fa 91       		.byte	0x91
 1584 02fb 76       		.sleb128 -10
 1585 02fc 00       		.byte	0
 1586 02fd 09       		.uleb128 0x9
 1587 02fe 7B030000 		.4byte	.LASF43
 1588 0302 01       		.byte	0x1
 1589 0303 CF02     		.2byte	0x2cf
 1590 0305 00000000 		.4byte	.LFB14
 1591 0309 1C000000 		.4byte	.LFE14-.LFB14
 1592 030d 01       		.uleb128 0x1
 1593 030e 9C       		.byte	0x9c
 1594 030f 23030000 		.4byte	0x323
 1595 0313 0A       		.uleb128 0xa
 1596 0314 07000000 		.4byte	.LASF42
 1597 0318 01       		.byte	0x1
 1598 0319 CF02     		.2byte	0x2cf
 1599 031b A9000000 		.4byte	0xa9
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 44


 1600 031f 02       		.uleb128 0x2
 1601 0320 91       		.byte	0x91
 1602 0321 74       		.sleb128 -12
 1603 0322 00       		.byte	0
 1604 0323 10       		.uleb128 0x10
 1605 0324 E5000000 		.4byte	.LASF44
 1606 0328 01       		.byte	0x1
 1607 0329 E702     		.2byte	0x2e7
 1608 032b 9D000000 		.4byte	0x9d
 1609 032f 00000000 		.4byte	.LFB15
 1610 0333 8C000000 		.4byte	.LFE15-.LFB15
 1611 0337 01       		.uleb128 0x1
 1612 0338 9C       		.byte	0x9c
 1613 0339 6B030000 		.4byte	0x36b
 1614 033d 0A       		.uleb128 0xa
 1615 033e E3030000 		.4byte	.LASF45
 1616 0342 01       		.byte	0x1
 1617 0343 E702     		.2byte	0x2e7
 1618 0345 9D000000 		.4byte	0x9d
 1619 0349 02       		.uleb128 0x2
 1620 034a 91       		.byte	0x91
 1621 034b 6E       		.sleb128 -18
 1622 034c 0B       		.uleb128 0xb
 1623 034d 16020000 		.4byte	.LASF46
 1624 0351 01       		.byte	0x1
 1625 0352 E902     		.2byte	0x2e9
 1626 0354 9D000000 		.4byte	0x9d
 1627 0358 02       		.uleb128 0x2
 1628 0359 91       		.byte	0x91
 1629 035a 72       		.sleb128 -14
 1630 035b 0B       		.uleb128 0xb
 1631 035c 12010000 		.4byte	.LASF47
 1632 0360 01       		.byte	0x1
 1633 0361 EA02     		.2byte	0x2ea
 1634 0363 A9000000 		.4byte	0xa9
 1635 0367 02       		.uleb128 0x2
 1636 0368 91       		.byte	0x91
 1637 0369 74       		.sleb128 -12
 1638 036a 00       		.byte	0
 1639 036b 0E       		.uleb128 0xe
 1640 036c 2D000000 		.4byte	.LASF48
 1641 0370 01       		.byte	0x1
 1642 0371 1103     		.2byte	0x311
 1643 0373 A9000000 		.4byte	0xa9
 1644 0377 00000000 		.4byte	.LFB16
 1645 037b 94000000 		.4byte	.LFE16-.LFB16
 1646 037f 01       		.uleb128 0x1
 1647 0380 9C       		.byte	0x9c
 1648 0381 B3030000 		.4byte	0x3b3
 1649 0385 0A       		.uleb128 0xa
 1650 0386 E3030000 		.4byte	.LASF45
 1651 038a 01       		.byte	0x1
 1652 038b 1103     		.2byte	0x311
 1653 038d 9D000000 		.4byte	0x9d
 1654 0391 02       		.uleb128 0x2
 1655 0392 91       		.byte	0x91
 1656 0393 5E       		.sleb128 -34
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 45


 1657 0394 0B       		.uleb128 0xb
 1658 0395 50010000 		.4byte	.LASF49
 1659 0399 01       		.byte	0x1
 1660 039a 1403     		.2byte	0x314
 1661 039c CF000000 		.4byte	0xcf
 1662 03a0 02       		.uleb128 0x2
 1663 03a1 91       		.byte	0x91
 1664 03a2 60       		.sleb128 -32
 1665 03a3 0B       		.uleb128 0xb
 1666 03a4 12010000 		.4byte	.LASF47
 1667 03a8 01       		.byte	0x1
 1668 03a9 1503     		.2byte	0x315
 1669 03ab A9000000 		.4byte	0xa9
 1670 03af 02       		.uleb128 0x2
 1671 03b0 91       		.byte	0x91
 1672 03b1 6C       		.sleb128 -20
 1673 03b2 00       		.byte	0
 1674 03b3 0E       		.uleb128 0xe
 1675 03b4 AA000000 		.4byte	.LASF50
 1676 03b8 01       		.byte	0x1
 1677 03b9 3D03     		.2byte	0x33d
 1678 03bb B5000000 		.4byte	0xb5
 1679 03bf 00000000 		.4byte	.LFB17
 1680 03c3 84000000 		.4byte	.LFE17-.LFB17
 1681 03c7 01       		.uleb128 0x1
 1682 03c8 9C       		.byte	0x9c
 1683 03c9 FB030000 		.4byte	0x3fb
 1684 03cd 0A       		.uleb128 0xa
 1685 03ce E3030000 		.4byte	.LASF45
 1686 03d2 01       		.byte	0x1
 1687 03d3 3D03     		.2byte	0x33d
 1688 03d5 9D000000 		.4byte	0x9d
 1689 03d9 02       		.uleb128 0x2
 1690 03da 91       		.byte	0x91
 1691 03db 66       		.sleb128 -26
 1692 03dc 0B       		.uleb128 0xb
 1693 03dd A7010000 		.4byte	.LASF51
 1694 03e1 01       		.byte	0x1
 1695 03e2 3F03     		.2byte	0x33f
 1696 03e4 B5000000 		.4byte	0xb5
 1697 03e8 02       		.uleb128 0x2
 1698 03e9 91       		.byte	0x91
 1699 03ea 68       		.sleb128 -24
 1700 03eb 0B       		.uleb128 0xb
 1701 03ec 12010000 		.4byte	.LASF47
 1702 03f0 01       		.byte	0x1
 1703 03f1 4003     		.2byte	0x340
 1704 03f3 A9000000 		.4byte	0xa9
 1705 03f7 02       		.uleb128 0x2
 1706 03f8 91       		.byte	0x91
 1707 03f9 6C       		.sleb128 -20
 1708 03fa 00       		.byte	0
 1709 03fb 13       		.uleb128 0x13
 1710 03fc 5B020000 		.4byte	.LASF52
 1711 0400 01       		.byte	0x1
 1712 0401 23       		.byte	0x23
 1713 0402 79000000 		.4byte	0x79
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 46


 1714 0406 05       		.uleb128 0x5
 1715 0407 03       		.byte	0x3
 1716 0408 00000000 		.4byte	ADC_SAR_Seq_SAR_initVar
 1717 040c 13       		.uleb128 0x13
 1718 040d 67000000 		.4byte	.LASF53
 1719 0411 01       		.byte	0x1
 1720 0412 24       		.byte	0x24
 1721 0413 1D040000 		.4byte	0x41d
 1722 0417 05       		.uleb128 0x5
 1723 0418 03       		.byte	0x3
 1724 0419 00000000 		.4byte	ADC_SAR_Seq_SAR_offset
 1725 041d 05       		.uleb128 0x5
 1726 041e 9D000000 		.4byte	0x9d
 1727 0422 13       		.uleb128 0x13
 1728 0423 1D020000 		.4byte	.LASF54
 1729 0427 01       		.byte	0x1
 1730 0428 25       		.byte	0x25
 1731 0429 1D040000 		.4byte	0x41d
 1732 042d 05       		.uleb128 0x5
 1733 042e 03       		.byte	0x3
 1734 042f 00000000 		.4byte	ADC_SAR_Seq_SAR_countsPerVolt
 1735 0433 13       		.uleb128 0x13
 1736 0434 3B020000 		.4byte	.LASF55
 1737 0438 01       		.byte	0x1
 1738 0439 26       		.byte	0x26
 1739 043a 44040000 		.4byte	0x444
 1740 043e 05       		.uleb128 0x5
 1741 043f 03       		.byte	0x3
 1742 0440 00000000 		.4byte	ADC_SAR_Seq_SAR_countsPer10Volt
 1743 0444 05       		.uleb128 0x5
 1744 0445 A9000000 		.4byte	0xa9
 1745 0449 13       		.uleb128 0x13
 1746 044a 78040000 		.4byte	.LASF56
 1747 044e 01       		.byte	0x1
 1748 044f 27       		.byte	0x27
 1749 0450 1D040000 		.4byte	0x41d
 1750 0454 05       		.uleb128 0x5
 1751 0455 03       		.byte	0x3
 1752 0456 00000000 		.4byte	ADC_SAR_Seq_SAR_shift
 1753 045a 00       		.byte	0
 1754              		.section	.debug_abbrev,"",%progbits
 1755              	.Ldebug_abbrev0:
 1756 0000 01       		.uleb128 0x1
 1757 0001 11       		.uleb128 0x11
 1758 0002 01       		.byte	0x1
 1759 0003 25       		.uleb128 0x25
 1760 0004 0E       		.uleb128 0xe
 1761 0005 13       		.uleb128 0x13
 1762 0006 0B       		.uleb128 0xb
 1763 0007 03       		.uleb128 0x3
 1764 0008 0E       		.uleb128 0xe
 1765 0009 1B       		.uleb128 0x1b
 1766 000a 0E       		.uleb128 0xe
 1767 000b 55       		.uleb128 0x55
 1768 000c 17       		.uleb128 0x17
 1769 000d 11       		.uleb128 0x11
 1770 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 47


 1771 000f 10       		.uleb128 0x10
 1772 0010 17       		.uleb128 0x17
 1773 0011 00       		.byte	0
 1774 0012 00       		.byte	0
 1775 0013 02       		.uleb128 0x2
 1776 0014 24       		.uleb128 0x24
 1777 0015 00       		.byte	0
 1778 0016 0B       		.uleb128 0xb
 1779 0017 0B       		.uleb128 0xb
 1780 0018 3E       		.uleb128 0x3e
 1781 0019 0B       		.uleb128 0xb
 1782 001a 03       		.uleb128 0x3
 1783 001b 08       		.uleb128 0x8
 1784 001c 00       		.byte	0
 1785 001d 00       		.byte	0
 1786 001e 03       		.uleb128 0x3
 1787 001f 24       		.uleb128 0x24
 1788 0020 00       		.byte	0
 1789 0021 0B       		.uleb128 0xb
 1790 0022 0B       		.uleb128 0xb
 1791 0023 3E       		.uleb128 0x3e
 1792 0024 0B       		.uleb128 0xb
 1793 0025 03       		.uleb128 0x3
 1794 0026 0E       		.uleb128 0xe
 1795 0027 00       		.byte	0
 1796 0028 00       		.byte	0
 1797 0029 04       		.uleb128 0x4
 1798 002a 16       		.uleb128 0x16
 1799 002b 00       		.byte	0
 1800 002c 03       		.uleb128 0x3
 1801 002d 0E       		.uleb128 0xe
 1802 002e 3A       		.uleb128 0x3a
 1803 002f 0B       		.uleb128 0xb
 1804 0030 3B       		.uleb128 0x3b
 1805 0031 05       		.uleb128 0x5
 1806 0032 49       		.uleb128 0x49
 1807 0033 13       		.uleb128 0x13
 1808 0034 00       		.byte	0
 1809 0035 00       		.byte	0
 1810 0036 05       		.uleb128 0x5
 1811 0037 35       		.uleb128 0x35
 1812 0038 00       		.byte	0
 1813 0039 49       		.uleb128 0x49
 1814 003a 13       		.uleb128 0x13
 1815 003b 00       		.byte	0
 1816 003c 00       		.byte	0
 1817 003d 06       		.uleb128 0x6
 1818 003e 2E       		.uleb128 0x2e
 1819 003f 00       		.byte	0
 1820 0040 3F       		.uleb128 0x3f
 1821 0041 19       		.uleb128 0x19
 1822 0042 03       		.uleb128 0x3
 1823 0043 0E       		.uleb128 0xe
 1824 0044 3A       		.uleb128 0x3a
 1825 0045 0B       		.uleb128 0xb
 1826 0046 3B       		.uleb128 0x3b
 1827 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 48


 1828 0048 27       		.uleb128 0x27
 1829 0049 19       		.uleb128 0x19
 1830 004a 11       		.uleb128 0x11
 1831 004b 01       		.uleb128 0x1
 1832 004c 12       		.uleb128 0x12
 1833 004d 06       		.uleb128 0x6
 1834 004e 40       		.uleb128 0x40
 1835 004f 18       		.uleb128 0x18
 1836 0050 9642     		.uleb128 0x2116
 1837 0052 19       		.uleb128 0x19
 1838 0053 00       		.byte	0
 1839 0054 00       		.byte	0
 1840 0055 07       		.uleb128 0x7
 1841 0056 2E       		.uleb128 0x2e
 1842 0057 01       		.byte	0x1
 1843 0058 3F       		.uleb128 0x3f
 1844 0059 19       		.uleb128 0x19
 1845 005a 03       		.uleb128 0x3
 1846 005b 0E       		.uleb128 0xe
 1847 005c 3A       		.uleb128 0x3a
 1848 005d 0B       		.uleb128 0xb
 1849 005e 3B       		.uleb128 0x3b
 1850 005f 0B       		.uleb128 0xb
 1851 0060 27       		.uleb128 0x27
 1852 0061 19       		.uleb128 0x19
 1853 0062 11       		.uleb128 0x11
 1854 0063 01       		.uleb128 0x1
 1855 0064 12       		.uleb128 0x12
 1856 0065 06       		.uleb128 0x6
 1857 0066 40       		.uleb128 0x40
 1858 0067 18       		.uleb128 0x18
 1859 0068 9642     		.uleb128 0x2116
 1860 006a 19       		.uleb128 0x19
 1861 006b 01       		.uleb128 0x1
 1862 006c 13       		.uleb128 0x13
 1863 006d 00       		.byte	0
 1864 006e 00       		.byte	0
 1865 006f 08       		.uleb128 0x8
 1866 0070 34       		.uleb128 0x34
 1867 0071 00       		.byte	0
 1868 0072 03       		.uleb128 0x3
 1869 0073 0E       		.uleb128 0xe
 1870 0074 3A       		.uleb128 0x3a
 1871 0075 0B       		.uleb128 0xb
 1872 0076 3B       		.uleb128 0x3b
 1873 0077 0B       		.uleb128 0xb
 1874 0078 49       		.uleb128 0x49
 1875 0079 13       		.uleb128 0x13
 1876 007a 02       		.uleb128 0x2
 1877 007b 18       		.uleb128 0x18
 1878 007c 00       		.byte	0
 1879 007d 00       		.byte	0
 1880 007e 09       		.uleb128 0x9
 1881 007f 2E       		.uleb128 0x2e
 1882 0080 01       		.byte	0x1
 1883 0081 3F       		.uleb128 0x3f
 1884 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 49


 1885 0083 03       		.uleb128 0x3
 1886 0084 0E       		.uleb128 0xe
 1887 0085 3A       		.uleb128 0x3a
 1888 0086 0B       		.uleb128 0xb
 1889 0087 3B       		.uleb128 0x3b
 1890 0088 05       		.uleb128 0x5
 1891 0089 27       		.uleb128 0x27
 1892 008a 19       		.uleb128 0x19
 1893 008b 11       		.uleb128 0x11
 1894 008c 01       		.uleb128 0x1
 1895 008d 12       		.uleb128 0x12
 1896 008e 06       		.uleb128 0x6
 1897 008f 40       		.uleb128 0x40
 1898 0090 18       		.uleb128 0x18
 1899 0091 9742     		.uleb128 0x2117
 1900 0093 19       		.uleb128 0x19
 1901 0094 01       		.uleb128 0x1
 1902 0095 13       		.uleb128 0x13
 1903 0096 00       		.byte	0
 1904 0097 00       		.byte	0
 1905 0098 0A       		.uleb128 0xa
 1906 0099 05       		.uleb128 0x5
 1907 009a 00       		.byte	0
 1908 009b 03       		.uleb128 0x3
 1909 009c 0E       		.uleb128 0xe
 1910 009d 3A       		.uleb128 0x3a
 1911 009e 0B       		.uleb128 0xb
 1912 009f 3B       		.uleb128 0x3b
 1913 00a0 05       		.uleb128 0x5
 1914 00a1 49       		.uleb128 0x49
 1915 00a2 13       		.uleb128 0x13
 1916 00a3 02       		.uleb128 0x2
 1917 00a4 18       		.uleb128 0x18
 1918 00a5 00       		.byte	0
 1919 00a6 00       		.byte	0
 1920 00a7 0B       		.uleb128 0xb
 1921 00a8 34       		.uleb128 0x34
 1922 00a9 00       		.byte	0
 1923 00aa 03       		.uleb128 0x3
 1924 00ab 0E       		.uleb128 0xe
 1925 00ac 3A       		.uleb128 0x3a
 1926 00ad 0B       		.uleb128 0xb
 1927 00ae 3B       		.uleb128 0x3b
 1928 00af 05       		.uleb128 0x5
 1929 00b0 49       		.uleb128 0x49
 1930 00b1 13       		.uleb128 0x13
 1931 00b2 02       		.uleb128 0x2
 1932 00b3 18       		.uleb128 0x18
 1933 00b4 00       		.byte	0
 1934 00b5 00       		.byte	0
 1935 00b6 0C       		.uleb128 0xc
 1936 00b7 2E       		.uleb128 0x2e
 1937 00b8 01       		.byte	0x1
 1938 00b9 3F       		.uleb128 0x3f
 1939 00ba 19       		.uleb128 0x19
 1940 00bb 03       		.uleb128 0x3
 1941 00bc 0E       		.uleb128 0xe
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 50


 1942 00bd 3A       		.uleb128 0x3a
 1943 00be 0B       		.uleb128 0xb
 1944 00bf 3B       		.uleb128 0x3b
 1945 00c0 05       		.uleb128 0x5
 1946 00c1 27       		.uleb128 0x27
 1947 00c2 19       		.uleb128 0x19
 1948 00c3 11       		.uleb128 0x11
 1949 00c4 01       		.uleb128 0x1
 1950 00c5 12       		.uleb128 0x12
 1951 00c6 06       		.uleb128 0x6
 1952 00c7 40       		.uleb128 0x40
 1953 00c8 18       		.uleb128 0x18
 1954 00c9 9642     		.uleb128 0x2116
 1955 00cb 19       		.uleb128 0x19
 1956 00cc 01       		.uleb128 0x1
 1957 00cd 13       		.uleb128 0x13
 1958 00ce 00       		.byte	0
 1959 00cf 00       		.byte	0
 1960 00d0 0D       		.uleb128 0xd
 1961 00d1 2E       		.uleb128 0x2e
 1962 00d2 00       		.byte	0
 1963 00d3 3F       		.uleb128 0x3f
 1964 00d4 19       		.uleb128 0x19
 1965 00d5 03       		.uleb128 0x3
 1966 00d6 0E       		.uleb128 0xe
 1967 00d7 3A       		.uleb128 0x3a
 1968 00d8 0B       		.uleb128 0xb
 1969 00d9 3B       		.uleb128 0x3b
 1970 00da 05       		.uleb128 0x5
 1971 00db 27       		.uleb128 0x27
 1972 00dc 19       		.uleb128 0x19
 1973 00dd 11       		.uleb128 0x11
 1974 00de 01       		.uleb128 0x1
 1975 00df 12       		.uleb128 0x12
 1976 00e0 06       		.uleb128 0x6
 1977 00e1 40       		.uleb128 0x40
 1978 00e2 18       		.uleb128 0x18
 1979 00e3 9742     		.uleb128 0x2117
 1980 00e5 19       		.uleb128 0x19
 1981 00e6 00       		.byte	0
 1982 00e7 00       		.byte	0
 1983 00e8 0E       		.uleb128 0xe
 1984 00e9 2E       		.uleb128 0x2e
 1985 00ea 01       		.byte	0x1
 1986 00eb 3F       		.uleb128 0x3f
 1987 00ec 19       		.uleb128 0x19
 1988 00ed 03       		.uleb128 0x3
 1989 00ee 0E       		.uleb128 0xe
 1990 00ef 3A       		.uleb128 0x3a
 1991 00f0 0B       		.uleb128 0xb
 1992 00f1 3B       		.uleb128 0x3b
 1993 00f2 05       		.uleb128 0x5
 1994 00f3 27       		.uleb128 0x27
 1995 00f4 19       		.uleb128 0x19
 1996 00f5 49       		.uleb128 0x49
 1997 00f6 13       		.uleb128 0x13
 1998 00f7 11       		.uleb128 0x11
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 51


 1999 00f8 01       		.uleb128 0x1
 2000 00f9 12       		.uleb128 0x12
 2001 00fa 06       		.uleb128 0x6
 2002 00fb 40       		.uleb128 0x40
 2003 00fc 18       		.uleb128 0x18
 2004 00fd 9642     		.uleb128 0x2116
 2005 00ff 19       		.uleb128 0x19
 2006 0100 01       		.uleb128 0x1
 2007 0101 13       		.uleb128 0x13
 2008 0102 00       		.byte	0
 2009 0103 00       		.byte	0
 2010 0104 0F       		.uleb128 0xf
 2011 0105 2E       		.uleb128 0x2e
 2012 0106 00       		.byte	0
 2013 0107 3F       		.uleb128 0x3f
 2014 0108 19       		.uleb128 0x19
 2015 0109 03       		.uleb128 0x3
 2016 010a 0E       		.uleb128 0xe
 2017 010b 3A       		.uleb128 0x3a
 2018 010c 0B       		.uleb128 0xb
 2019 010d 3B       		.uleb128 0x3b
 2020 010e 05       		.uleb128 0x5
 2021 010f 27       		.uleb128 0x27
 2022 0110 19       		.uleb128 0x19
 2023 0111 49       		.uleb128 0x49
 2024 0112 13       		.uleb128 0x13
 2025 0113 11       		.uleb128 0x11
 2026 0114 01       		.uleb128 0x1
 2027 0115 12       		.uleb128 0x12
 2028 0116 06       		.uleb128 0x6
 2029 0117 40       		.uleb128 0x40
 2030 0118 18       		.uleb128 0x18
 2031 0119 9742     		.uleb128 0x2117
 2032 011b 19       		.uleb128 0x19
 2033 011c 00       		.byte	0
 2034 011d 00       		.byte	0
 2035 011e 10       		.uleb128 0x10
 2036 011f 2E       		.uleb128 0x2e
 2037 0120 01       		.byte	0x1
 2038 0121 3F       		.uleb128 0x3f
 2039 0122 19       		.uleb128 0x19
 2040 0123 03       		.uleb128 0x3
 2041 0124 0E       		.uleb128 0xe
 2042 0125 3A       		.uleb128 0x3a
 2043 0126 0B       		.uleb128 0xb
 2044 0127 3B       		.uleb128 0x3b
 2045 0128 05       		.uleb128 0x5
 2046 0129 27       		.uleb128 0x27
 2047 012a 19       		.uleb128 0x19
 2048 012b 49       		.uleb128 0x49
 2049 012c 13       		.uleb128 0x13
 2050 012d 11       		.uleb128 0x11
 2051 012e 01       		.uleb128 0x1
 2052 012f 12       		.uleb128 0x12
 2053 0130 06       		.uleb128 0x6
 2054 0131 40       		.uleb128 0x40
 2055 0132 18       		.uleb128 0x18
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 52


 2056 0133 9742     		.uleb128 0x2117
 2057 0135 19       		.uleb128 0x19
 2058 0136 01       		.uleb128 0x1
 2059 0137 13       		.uleb128 0x13
 2060 0138 00       		.byte	0
 2061 0139 00       		.byte	0
 2062 013a 11       		.uleb128 0x11
 2063 013b 34       		.uleb128 0x34
 2064 013c 00       		.byte	0
 2065 013d 03       		.uleb128 0x3
 2066 013e 08       		.uleb128 0x8
 2067 013f 3A       		.uleb128 0x3a
 2068 0140 0B       		.uleb128 0xb
 2069 0141 3B       		.uleb128 0x3b
 2070 0142 05       		.uleb128 0x5
 2071 0143 49       		.uleb128 0x49
 2072 0144 13       		.uleb128 0x13
 2073 0145 02       		.uleb128 0x2
 2074 0146 18       		.uleb128 0x18
 2075 0147 00       		.byte	0
 2076 0148 00       		.byte	0
 2077 0149 12       		.uleb128 0x12
 2078 014a 2E       		.uleb128 0x2e
 2079 014b 01       		.byte	0x1
 2080 014c 03       		.uleb128 0x3
 2081 014d 0E       		.uleb128 0xe
 2082 014e 3A       		.uleb128 0x3a
 2083 014f 0B       		.uleb128 0xb
 2084 0150 3B       		.uleb128 0x3b
 2085 0151 05       		.uleb128 0x5
 2086 0152 27       		.uleb128 0x27
 2087 0153 19       		.uleb128 0x19
 2088 0154 11       		.uleb128 0x11
 2089 0155 01       		.uleb128 0x1
 2090 0156 12       		.uleb128 0x12
 2091 0157 06       		.uleb128 0x6
 2092 0158 40       		.uleb128 0x40
 2093 0159 18       		.uleb128 0x18
 2094 015a 9742     		.uleb128 0x2117
 2095 015c 19       		.uleb128 0x19
 2096 015d 01       		.uleb128 0x1
 2097 015e 13       		.uleb128 0x13
 2098 015f 00       		.byte	0
 2099 0160 00       		.byte	0
 2100 0161 13       		.uleb128 0x13
 2101 0162 34       		.uleb128 0x34
 2102 0163 00       		.byte	0
 2103 0164 03       		.uleb128 0x3
 2104 0165 0E       		.uleb128 0xe
 2105 0166 3A       		.uleb128 0x3a
 2106 0167 0B       		.uleb128 0xb
 2107 0168 3B       		.uleb128 0x3b
 2108 0169 0B       		.uleb128 0xb
 2109 016a 49       		.uleb128 0x49
 2110 016b 13       		.uleb128 0x13
 2111 016c 3F       		.uleb128 0x3f
 2112 016d 19       		.uleb128 0x19
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 53


 2113 016e 02       		.uleb128 0x2
 2114 016f 18       		.uleb128 0x18
 2115 0170 00       		.byte	0
 2116 0171 00       		.byte	0
 2117 0172 00       		.byte	0
 2118              		.section	.debug_aranges,"",%progbits
 2119 0000 A4000000 		.4byte	0xa4
 2120 0004 0200     		.2byte	0x2
 2121 0006 00000000 		.4byte	.Ldebug_info0
 2122 000a 04       		.byte	0x4
 2123 000b 00       		.byte	0
 2124 000c 0000     		.2byte	0
 2125 000e 0000     		.2byte	0
 2126 0010 00000000 		.4byte	.LFB0
 2127 0014 20000000 		.4byte	.LFE0-.LFB0
 2128 0018 00000000 		.4byte	.LFB1
 2129 001c 2C000000 		.4byte	.LFE1-.LFB1
 2130 0020 00000000 		.4byte	.LFB2
 2131 0024 C0000000 		.4byte	.LFE2-.LFB2
 2132 0028 00000000 		.4byte	.LFB3
 2133 002c 58000000 		.4byte	.LFE3-.LFB3
 2134 0030 00000000 		.4byte	.LFB4
 2135 0034 40000000 		.4byte	.LFE4-.LFB4
 2136 0038 00000000 		.4byte	.LFB5
 2137 003c 4C000000 		.4byte	.LFE5-.LFB5
 2138 0040 00000000 		.4byte	.LFB6
 2139 0044 20000000 		.4byte	.LFE6-.LFB6
 2140 0048 00000000 		.4byte	.LFB7
 2141 004c 20000000 		.4byte	.LFE7-.LFB7
 2142 0050 00000000 		.4byte	.LFB8
 2143 0054 40000000 		.4byte	.LFE8-.LFB8
 2144 0058 00000000 		.4byte	.LFB9
 2145 005c 2C000000 		.4byte	.LFE9-.LFB9
 2146 0060 00000000 		.4byte	.LFB10
 2147 0064 34000000 		.4byte	.LFE10-.LFB10
 2148 0068 00000000 		.4byte	.LFB11
 2149 006c 20000000 		.4byte	.LFE11-.LFB11
 2150 0070 00000000 		.4byte	.LFB12
 2151 0074 7C000000 		.4byte	.LFE12-.LFB12
 2152 0078 00000000 		.4byte	.LFB13
 2153 007c 2C000000 		.4byte	.LFE13-.LFB13
 2154 0080 00000000 		.4byte	.LFB14
 2155 0084 1C000000 		.4byte	.LFE14-.LFB14
 2156 0088 00000000 		.4byte	.LFB15
 2157 008c 8C000000 		.4byte	.LFE15-.LFB15
 2158 0090 00000000 		.4byte	.LFB16
 2159 0094 94000000 		.4byte	.LFE16-.LFB16
 2160 0098 00000000 		.4byte	.LFB17
 2161 009c 84000000 		.4byte	.LFE17-.LFB17
 2162 00a0 00000000 		.4byte	0
 2163 00a4 00000000 		.4byte	0
 2164              		.section	.debug_ranges,"",%progbits
 2165              	.Ldebug_ranges0:
 2166 0000 00000000 		.4byte	.LFB0
 2167 0004 20000000 		.4byte	.LFE0
 2168 0008 00000000 		.4byte	.LFB1
 2169 000c 2C000000 		.4byte	.LFE1
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 54


 2170 0010 00000000 		.4byte	.LFB2
 2171 0014 C0000000 		.4byte	.LFE2
 2172 0018 00000000 		.4byte	.LFB3
 2173 001c 58000000 		.4byte	.LFE3
 2174 0020 00000000 		.4byte	.LFB4
 2175 0024 40000000 		.4byte	.LFE4
 2176 0028 00000000 		.4byte	.LFB5
 2177 002c 4C000000 		.4byte	.LFE5
 2178 0030 00000000 		.4byte	.LFB6
 2179 0034 20000000 		.4byte	.LFE6
 2180 0038 00000000 		.4byte	.LFB7
 2181 003c 20000000 		.4byte	.LFE7
 2182 0040 00000000 		.4byte	.LFB8
 2183 0044 40000000 		.4byte	.LFE8
 2184 0048 00000000 		.4byte	.LFB9
 2185 004c 2C000000 		.4byte	.LFE9
 2186 0050 00000000 		.4byte	.LFB10
 2187 0054 34000000 		.4byte	.LFE10
 2188 0058 00000000 		.4byte	.LFB11
 2189 005c 20000000 		.4byte	.LFE11
 2190 0060 00000000 		.4byte	.LFB12
 2191 0064 7C000000 		.4byte	.LFE12
 2192 0068 00000000 		.4byte	.LFB13
 2193 006c 2C000000 		.4byte	.LFE13
 2194 0070 00000000 		.4byte	.LFB14
 2195 0074 1C000000 		.4byte	.LFE14
 2196 0078 00000000 		.4byte	.LFB15
 2197 007c 8C000000 		.4byte	.LFE15
 2198 0080 00000000 		.4byte	.LFB16
 2199 0084 94000000 		.4byte	.LFE16
 2200 0088 00000000 		.4byte	.LFB17
 2201 008c 84000000 		.4byte	.LFE17
 2202 0090 00000000 		.4byte	0
 2203 0094 00000000 		.4byte	0
 2204              		.section	.debug_line,"",%progbits
 2205              	.Ldebug_line0:
 2206 0000 09020000 		.section	.debug_str,"MS",%progbits,1
 2206      02004C00 
 2206      00000201 
 2206      FB0E0D00 
 2206      01010101 
 2207              	.LASF12:
 2208 0000 75696E74 		.ascii	"uint16\000"
 2208      313600
 2209              	.LASF42:
 2210 0007 61646347 		.ascii	"adcGain\000"
 2210      61696E00 
 2211              	.LASF40:
 2212 000f 636F756E 		.ascii	"counts\000"
 2212      747300
 2213              	.LASF8:
 2214 0016 6C6F6E67 		.ascii	"long long unsigned int\000"
 2214      206C6F6E 
 2214      6720756E 
 2214      7369676E 
 2214      65642069 
 2215              	.LASF48:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 55


 2216 002d 4144435F 		.ascii	"ADC_SAR_Seq_SAR_CountsTo_uVolts\000"
 2216      5341525F 
 2216      5365715F 
 2216      5341525F 
 2216      436F756E 
 2217              	.LASF7:
 2218 004d 6C6F6E67 		.ascii	"long long int\000"
 2218      206C6F6E 
 2218      6720696E 
 2218      7400
 2219              	.LASF1:
 2220 005b 7369676E 		.ascii	"signed char\000"
 2220      65642063 
 2220      68617200 
 2221              	.LASF53:
 2222 0067 4144435F 		.ascii	"ADC_SAR_Seq_SAR_offset\000"
 2222      5341525F 
 2222      5365715F 
 2222      5341525F 
 2222      6F666673 
 2223              	.LASF32:
 2224 007e 4144435F 		.ascii	"ADC_SAR_Seq_SAR_StartConvert\000"
 2224      5341525F 
 2224      5365715F 
 2224      5341525F 
 2224      53746172 
 2225              	.LASF15:
 2226 009b 696E7433 		.ascii	"int32\000"
 2226      3200
 2227              	.LASF5:
 2228 00a1 6C6F6E67 		.ascii	"long int\000"
 2228      20696E74 
 2228      00
 2229              	.LASF50:
 2230 00aa 4144435F 		.ascii	"ADC_SAR_Seq_SAR_CountsTo_Volts\000"
 2230      5341525F 
 2230      5365715F 
 2230      5341525F 
 2230      436F756E 
 2231              	.LASF22:
 2232 00c9 4144435F 		.ascii	"ADC_SAR_Seq_SAR_Start\000"
 2232      5341525F 
 2232      5365715F 
 2232      5341525F 
 2232      53746172 
 2233              	.LASF21:
 2234 00df 72656731 		.ascii	"reg16\000"
 2234      3600
 2235              	.LASF44:
 2236 00e5 4144435F 		.ascii	"ADC_SAR_Seq_SAR_CountsTo_mVolts\000"
 2236      5341525F 
 2236      5365715F 
 2236      5341525F 
 2236      436F756E 
 2237              	.LASF11:
 2238 0105 75696E74 		.ascii	"uint8\000"
 2238      3800
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 56


 2239              	.LASF18:
 2240 010b 646F7562 		.ascii	"double\000"
 2240      6C6500
 2241              	.LASF47:
 2242 0112 636F756E 		.ascii	"countsPer10Volt\000"
 2242      74735065 
 2242      72313056 
 2242      6F6C7400 
 2243              	.LASF28:
 2244 0122 4144435F 		.ascii	"ADC_SAR_Seq_SAR_SetPower\000"
 2244      5341525F 
 2244      5365715F 
 2244      5341525F 
 2244      53657450 
 2245              	.LASF34:
 2246 013b 7265744D 		.ascii	"retMode\000"
 2246      6F646500 
 2247              	.LASF0:
 2248 0143 756E7369 		.ascii	"unsigned int\000"
 2248      676E6564 
 2248      20696E74 
 2248      00
 2249              	.LASF49:
 2250 0150 75566F6C 		.ascii	"uVolts\000"
 2250      747300
 2251              	.LASF59:
 2252 0157 433A5C55 		.ascii	"C:\\Users\\ben\\Documents\\PSoC Creator\\BIT-MANGLE"
 2252      73657273 
 2252      5C62656E 
 2252      5C446F63 
 2252      756D656E 
 2253 0185 525C4144 		.ascii	"R\\ADC_DAC.cydsn\000"
 2253      435F4441 
 2253      432E6379 
 2253      64736E00 
 2254              	.LASF6:
 2255 0195 6C6F6E67 		.ascii	"long unsigned int\000"
 2255      20756E73 
 2255      69676E65 
 2255      6420696E 
 2255      7400
 2256              	.LASF51:
 2257 01a7 766F6C74 		.ascii	"volts\000"
 2257      7300
 2258              	.LASF4:
 2259 01ad 73686F72 		.ascii	"short unsigned int\000"
 2259      7420756E 
 2259      7369676E 
 2259      65642069 
 2259      6E7400
 2260              	.LASF13:
 2261 01c0 696E7438 		.ascii	"int8\000"
 2261      00
 2262              	.LASF27:
 2263 01c5 4144435F 		.ascii	"ADC_SAR_Seq_SAR_Stop\000"
 2263      5341525F 
 2263      5365715F 
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 57


 2263      5341525F 
 2263      53746F70 
 2264              	.LASF36:
 2265 01da 4144435F 		.ascii	"ADC_SAR_Seq_SAR_IsEndConversion\000"
 2265      5341525F 
 2265      5365715F 
 2265      5341525F 
 2265      4973456E 
 2266              	.LASF37:
 2267 01fa 4144435F 		.ascii	"ADC_SAR_Seq_SAR_GetResult16\000"
 2267      5341525F 
 2267      5365715F 
 2267      5341525F 
 2267      47657452 
 2268              	.LASF46:
 2269 0216 6D566F6C 		.ascii	"mVolts\000"
 2269      747300
 2270              	.LASF54:
 2271 021d 4144435F 		.ascii	"ADC_SAR_Seq_SAR_countsPerVolt\000"
 2271      5341525F 
 2271      5365715F 
 2271      5341525F 
 2271      636F756E 
 2272              	.LASF55:
 2273 023b 4144435F 		.ascii	"ADC_SAR_Seq_SAR_countsPer10Volt\000"
 2273      5341525F 
 2273      5365715F 
 2273      5341525F 
 2273      636F756E 
 2274              	.LASF52:
 2275 025b 4144435F 		.ascii	"ADC_SAR_Seq_SAR_initVar\000"
 2275      5341525F 
 2275      5365715F 
 2275      5341525F 
 2275      696E6974 
 2276              	.LASF16:
 2277 0273 666C6F61 		.ascii	"float32\000"
 2277      74333200 
 2278              	.LASF9:
 2279 027b 73697A65 		.ascii	"sizetype\000"
 2279      74797065 
 2279      00
 2280              	.LASF29:
 2281 0284 4144435F 		.ascii	"ADC_SAR_Seq_SAR_SetResolution\000"
 2281      5341525F 
 2281      5365715F 
 2281      5341525F 
 2281      53657452 
 2282              	.LASF57:
 2283 02a2 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2283      4320342E 
 2283      392E3320 
 2283      32303135 
 2283      30333033 
 2284 02d5 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 2284      20726576 
 2284      6973696F 
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 58


 2284      6E203232 
 2284      31323230 
 2285 0308 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2285      66756E63 
 2285      74696F6E 
 2285      2D736563 
 2285      74696F6E 
 2286              	.LASF33:
 2287 0330 4144435F 		.ascii	"ADC_SAR_Seq_SAR_StopConvert\000"
 2287      5341525F 
 2287      5365715F 
 2287      5341525F 
 2287      53746F70 
 2288              	.LASF19:
 2289 034c 696E7436 		.ascii	"int64\000"
 2289      3400
 2290              	.LASF17:
 2291 0352 666C6F61 		.ascii	"float\000"
 2291      7400
 2292              	.LASF30:
 2293 0358 706F7765 		.ascii	"power\000"
 2293      7200
 2294              	.LASF20:
 2295 035e 72656738 		.ascii	"reg8\000"
 2295      00
 2296              	.LASF2:
 2297 0363 756E7369 		.ascii	"unsigned char\000"
 2297      676E6564 
 2297      20636861 
 2297      7200
 2298              	.LASF3:
 2299 0371 73686F72 		.ascii	"short int\000"
 2299      7420696E 
 2299      7400
 2300              	.LASF43:
 2301 037b 4144435F 		.ascii	"ADC_SAR_Seq_SAR_SetScaledGain\000"
 2301      5341525F 
 2301      5365715F 
 2301      5341525F 
 2301      53657453 
 2302              	.LASF31:
 2303 0399 7265736F 		.ascii	"resolution\000"
 2303      6C757469 
 2303      6F6E00
 2304              	.LASF61:
 2305 03a4 4144435F 		.ascii	"ADC_SAR_Seq_SAR_CalcGain\000"
 2305      5341525F 
 2305      5365715F 
 2305      5341525F 
 2305      43616C63 
 2306              	.LASF38:
 2307 03bd 4144435F 		.ascii	"ADC_SAR_Seq_SAR_SetOffset\000"
 2307      5341525F 
 2307      5365715F 
 2307      5341525F 
 2307      5365744F 
 2308              	.LASF10:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 59


 2309 03d7 63686172 		.ascii	"char\000"
 2309      00
 2310              	.LASF39:
 2311 03dc 6F666673 		.ascii	"offset\000"
 2311      657400
 2312              	.LASF45:
 2313 03e3 61646343 		.ascii	"adcCounts\000"
 2313      6F756E74 
 2313      7300
 2314              	.LASF26:
 2315 03ed 4144435F 		.ascii	"ADC_SAR_Seq_SAR_Enable\000"
 2315      5341525F 
 2315      5365715F 
 2315      5341525F 
 2315      456E6162 
 2316              	.LASF23:
 2317 0404 4144435F 		.ascii	"ADC_SAR_Seq_SAR_Init\000"
 2317      5341525F 
 2317      5365715F 
 2317      5341525F 
 2317      496E6974 
 2318              	.LASF41:
 2319 0419 4144435F 		.ascii	"ADC_SAR_Seq_SAR_SetGain\000"
 2319      5341525F 
 2319      5365715F 
 2319      5341525F 
 2319      53657447 
 2320              	.LASF25:
 2321 0431 656E6162 		.ascii	"enableInterrupts\000"
 2321      6C65496E 
 2321      74657272 
 2321      75707473 
 2321      00
 2322              	.LASF35:
 2323 0442 73746174 		.ascii	"status\000"
 2323      757300
 2324              	.LASF58:
 2325 0449 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_Seq_SAR.c\000"
 2325      72617465 
 2325      645F536F 
 2325      75726365 
 2325      5C50536F 
 2326              	.LASF14:
 2327 0472 696E7431 		.ascii	"int16\000"
 2327      3600
 2328              	.LASF56:
 2329 0478 4144435F 		.ascii	"ADC_SAR_Seq_SAR_shift\000"
 2329      5341525F 
 2329      5365715F 
 2329      5341525F 
 2329      73686966 
 2330              	.LASF24:
 2331 048e 746D7052 		.ascii	"tmpReg\000"
 2331      656700
 2332              	.LASF60:
 2333 0495 4144435F 		.ascii	"ADC_SAR_Seq_SAR_GetResult8\000"
 2333      5341525F 
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccZ8NcgL.s 			page 60


 2333      5365715F 
 2333      5341525F 
 2333      47657452 
 2334              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
