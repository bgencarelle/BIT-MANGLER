ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"PWM_6.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	PWM_6_initVar
  19              		.bss
  20              		.type	PWM_6_initVar, %object
  21              		.size	PWM_6_initVar, 1
  22              	PWM_6_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.PWM_6_Start,"ax",%progbits
  25              		.align	2
  26              		.global	PWM_6_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	PWM_6_Start, %function
  30              	PWM_6_Start:
  31              	.LFB0:
  32              		.file 1 "Generated_Source\\PSoC5\\PWM_6.c"
   1:Generated_Source\PSoC5/PWM_6.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/PWM_6.c **** * File Name: PWM_6.c
   3:Generated_Source\PSoC5/PWM_6.c **** * Version 3.30
   4:Generated_Source\PSoC5/PWM_6.c **** *
   5:Generated_Source\PSoC5/PWM_6.c **** * Description:
   6:Generated_Source\PSoC5/PWM_6.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC5/PWM_6.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC5/PWM_6.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC5/PWM_6.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC5/PWM_6.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC5/PWM_6.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC5/PWM_6.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC5/PWM_6.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC5/PWM_6.c **** *
  15:Generated_Source\PSoC5/PWM_6.c **** * Note:
  16:Generated_Source\PSoC5/PWM_6.c **** *
  17:Generated_Source\PSoC5/PWM_6.c **** *******************************************************************************
  18:Generated_Source\PSoC5/PWM_6.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/PWM_6.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/PWM_6.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/PWM_6.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/PWM_6.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/PWM_6.c **** 
  24:Generated_Source\PSoC5/PWM_6.c **** #include "PWM_6.h"
  25:Generated_Source\PSoC5/PWM_6.c **** 
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 2


  26:Generated_Source\PSoC5/PWM_6.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC5/PWM_6.c **** #ifdef PWM_6_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC5/PWM_6.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC5/PWM_6.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC5/PWM_6.c **** #endif /* PWM_6_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC5/PWM_6.c **** 
  32:Generated_Source\PSoC5/PWM_6.c **** uint8 PWM_6_initVar = 0u;
  33:Generated_Source\PSoC5/PWM_6.c **** 
  34:Generated_Source\PSoC5/PWM_6.c **** 
  35:Generated_Source\PSoC5/PWM_6.c **** /*******************************************************************************
  36:Generated_Source\PSoC5/PWM_6.c **** * Function Name: PWM_6_Start
  37:Generated_Source\PSoC5/PWM_6.c **** ********************************************************************************
  38:Generated_Source\PSoC5/PWM_6.c **** *
  39:Generated_Source\PSoC5/PWM_6.c **** * Summary:
  40:Generated_Source\PSoC5/PWM_6.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC5/PWM_6.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC5/PWM_6.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC5/PWM_6.c **** *
  44:Generated_Source\PSoC5/PWM_6.c **** * Parameters:
  45:Generated_Source\PSoC5/PWM_6.c **** *  None
  46:Generated_Source\PSoC5/PWM_6.c **** *
  47:Generated_Source\PSoC5/PWM_6.c **** * Return:
  48:Generated_Source\PSoC5/PWM_6.c **** *  None
  49:Generated_Source\PSoC5/PWM_6.c **** *
  50:Generated_Source\PSoC5/PWM_6.c **** * Global variables:
  51:Generated_Source\PSoC5/PWM_6.c **** *  PWM_6_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC5/PWM_6.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC5/PWM_6.c **** *
  54:Generated_Source\PSoC5/PWM_6.c **** *******************************************************************************/
  55:Generated_Source\PSoC5/PWM_6.c **** void PWM_6_Start(void) 
  56:Generated_Source\PSoC5/PWM_6.c **** {
  33              		.loc 1 56 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC5/PWM_6.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC5/PWM_6.c ****     if(PWM_6_initVar == 0u)
  43              		.loc 1 58 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC5/PWM_6.c ****     {
  60:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_Init();
  48              		.loc 1 60 0
  49 000c FFF7FEFF 		bl	PWM_6_Init
  61:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_initVar = 1u;
  50              		.loc 1 61 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 3


  54              	.L2:
  62:Generated_Source\PSoC5/PWM_6.c ****     }
  63:Generated_Source\PSoC5/PWM_6.c ****     PWM_6_Enable();
  55              		.loc 1 63 0
  56 0016 FFF7FEFF 		bl	PWM_6_Enable
  64:Generated_Source\PSoC5/PWM_6.c **** 
  65:Generated_Source\PSoC5/PWM_6.c **** }
  57              		.loc 1 65 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	PWM_6_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	PWM_6_Start, .-PWM_6_Start
  66              		.section	.text.PWM_6_Init,"ax",%progbits
  67              		.align	2
  68              		.global	PWM_6_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	PWM_6_Init, %function
  72              	PWM_6_Init:
  73              	.LFB1:
  66:Generated_Source\PSoC5/PWM_6.c **** 
  67:Generated_Source\PSoC5/PWM_6.c **** 
  68:Generated_Source\PSoC5/PWM_6.c **** /*******************************************************************************
  69:Generated_Source\PSoC5/PWM_6.c **** * Function Name: PWM_6_Init
  70:Generated_Source\PSoC5/PWM_6.c **** ********************************************************************************
  71:Generated_Source\PSoC5/PWM_6.c **** *
  72:Generated_Source\PSoC5/PWM_6.c **** * Summary:
  73:Generated_Source\PSoC5/PWM_6.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC5/PWM_6.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC5/PWM_6.c **** *  PWM_6_Start().
  76:Generated_Source\PSoC5/PWM_6.c **** *
  77:Generated_Source\PSoC5/PWM_6.c **** * Parameters:
  78:Generated_Source\PSoC5/PWM_6.c **** *  None
  79:Generated_Source\PSoC5/PWM_6.c **** *
  80:Generated_Source\PSoC5/PWM_6.c **** * Return:
  81:Generated_Source\PSoC5/PWM_6.c **** *  None
  82:Generated_Source\PSoC5/PWM_6.c **** *
  83:Generated_Source\PSoC5/PWM_6.c **** *******************************************************************************/
  84:Generated_Source\PSoC5/PWM_6.c **** void PWM_6_Init(void) 
  85:Generated_Source\PSoC5/PWM_6.c **** {
  74              		.loc 1 85 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 8
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 7, -8
  81              		.cfi_offset 14, -4
  82 0002 82B0     		sub	sp, sp, #8
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UsingFixedFunction || PWM_6_UseControl)
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 4


  87:Generated_Source\PSoC5/PWM_6.c ****         uint8 ctrl;
  88:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UsingFixedFunction || PWM_6_UseControl) */
  89:Generated_Source\PSoC5/PWM_6.c **** 
  90:Generated_Source\PSoC5/PWM_6.c ****     #if(!PWM_6_UsingFixedFunction)
  91:Generated_Source\PSoC5/PWM_6.c ****         #if(PWM_6_UseStatus)
  92:Generated_Source\PSoC5/PWM_6.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC5/PWM_6.c ****             uint8 PWM_6_interruptState;
  94:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UseStatus) */
  95:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (!PWM_6_UsingFixedFunction) */
  96:Generated_Source\PSoC5/PWM_6.c **** 
  97:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UsingFixedFunction)
  98:Generated_Source\PSoC5/PWM_6.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_CONTROL |= PWM_6_CFG0_MODE;
 100:Generated_Source\PSoC5/PWM_6.c ****         #if (PWM_6_DeadBand2_4)
 101:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_CONTROL |= PWM_6_CFG0_DB;
 102:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_DeadBand2_4) */
 103:Generated_Source\PSoC5/PWM_6.c **** 
 104:Generated_Source\PSoC5/PWM_6.c ****         ctrl = PWM_6_CONTROL3 & ((uint8 )(~PWM_6_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_CONTROL3 = ctrl | PWM_6_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC5/PWM_6.c **** 
 107:Generated_Source\PSoC5/PWM_6.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_RT1 &= ((uint8)(~PWM_6_RT1_MASK));
 109:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_RT1 |= PWM_6_SYNC;
 110:Generated_Source\PSoC5/PWM_6.c **** 
 111:Generated_Source\PSoC5/PWM_6.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_RT1 &= ((uint8)(~PWM_6_SYNCDSI_MASK));
 113:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_RT1 |= PWM_6_SYNCDSI_EN;
 114:Generated_Source\PSoC5/PWM_6.c **** 
 115:Generated_Source\PSoC5/PWM_6.c ****     #elif (PWM_6_UseControl)
 116:Generated_Source\PSoC5/PWM_6.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC5/PWM_6.c ****         ctrl = PWM_6_CONTROL & ((uint8)(~PWM_6_CTRL_CMPMODE2_MASK)) &
  86              		.loc 1 117 0
  87 0006 1A4B     		ldr	r3, .L6
  88 0008 1B78     		ldrb	r3, [r3]
  89 000a DBB2     		uxtb	r3, r3
  90 000c 23F03F03 		bic	r3, r3, #63
  91 0010 FB71     		strb	r3, [r7, #7]
 118:Generated_Source\PSoC5/PWM_6.c ****                 ((uint8)(~PWM_6_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_CONTROL = ctrl | PWM_6_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0012 174A     		ldr	r2, .L6
  94 0014 FB79     		ldrb	r3, [r7, #7]
  95 0016 43F00A03 		orr	r3, r3, #10
  96 001a DBB2     		uxtb	r3, r3
  97 001c 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC5/PWM_6.c ****                                    PWM_6_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UsingFixedFunction) */
 122:Generated_Source\PSoC5/PWM_6.c **** 
 123:Generated_Source\PSoC5/PWM_6.c ****     #if (!PWM_6_UsingFixedFunction)
 124:Generated_Source\PSoC5/PWM_6.c ****         #if (PWM_6_Resolution == 8)
 125:Generated_Source\PSoC5/PWM_6.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_AUX_CONTROLDP0 |= (PWM_6_AUX_CTRL_FIFO0_CLR);
  98              		.loc 1 126 0
  99 001e 154A     		ldr	r2, .L6+4
 100 0020 144B     		ldr	r3, .L6+4
 101 0022 1B78     		ldrb	r3, [r3]
 102 0024 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 5


 103 0026 43F00103 		orr	r3, r3, #1
 104 002a DBB2     		uxtb	r3, r3
 105 002c 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC5/PWM_6.c ****         #else /* (PWM_6_Resolution == 16)*/
 128:Generated_Source\PSoC5/PWM_6.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_AUX_CONTROLDP0 |= (PWM_6_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_AUX_CONTROLDP1 |= (PWM_6_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_Resolution == 8) */
 132:Generated_Source\PSoC5/PWM_6.c **** 
 133:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_WriteCounter(PWM_6_INIT_PERIOD_VALUE);
 106              		.loc 1 133 0
 107 002e 0120     		movs	r0, #1
 108 0030 FFF7FEFF 		bl	PWM_6_WriteCounter
 134:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (!PWM_6_UsingFixedFunction) */
 135:Generated_Source\PSoC5/PWM_6.c **** 
 136:Generated_Source\PSoC5/PWM_6.c ****     PWM_6_WritePeriod(PWM_6_INIT_PERIOD_VALUE);
 109              		.loc 1 136 0
 110 0034 0120     		movs	r0, #1
 111 0036 FFF7FEFF 		bl	PWM_6_WritePeriod
 137:Generated_Source\PSoC5/PWM_6.c **** 
 138:Generated_Source\PSoC5/PWM_6.c ****         #if (PWM_6_UseOneCompareMode)
 139:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_WriteCompare(PWM_6_INIT_COMPARE_VALUE1);
 112              		.loc 1 139 0
 113 003a 0020     		movs	r0, #0
 114 003c FFF7FEFF 		bl	PWM_6_WriteCompare
 140:Generated_Source\PSoC5/PWM_6.c ****         #else
 141:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_WriteCompare1(PWM_6_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_WriteCompare2(PWM_6_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UseOneCompareMode) */
 144:Generated_Source\PSoC5/PWM_6.c **** 
 145:Generated_Source\PSoC5/PWM_6.c ****         #if (PWM_6_KillModeMinTime)
 146:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_WriteKillTime(PWM_6_MinimumKillTime);
 147:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_KillModeMinTime) */
 148:Generated_Source\PSoC5/PWM_6.c **** 
 149:Generated_Source\PSoC5/PWM_6.c ****         #if (PWM_6_DeadBandUsed)
 150:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_WriteDeadTime(PWM_6_INIT_DEAD_TIME);
 151:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_DeadBandUsed) */
 152:Generated_Source\PSoC5/PWM_6.c **** 
 153:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UseStatus || PWM_6_UsingFixedFunction)
 154:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_SetInterruptMode(PWM_6_INIT_INTERRUPTS_MODE);
 115              		.loc 1 154 0
 116 0040 0020     		movs	r0, #0
 117 0042 FFF7FEFF 		bl	PWM_6_SetInterruptMode
 155:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UseStatus || PWM_6_UsingFixedFunction) */
 156:Generated_Source\PSoC5/PWM_6.c **** 
 157:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UsingFixedFunction)
 158:Generated_Source\PSoC5/PWM_6.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_GLOBAL_ENABLE |= PWM_6_BLOCK_EN_MASK;
 160:Generated_Source\PSoC5/PWM_6.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_CONTROL2 |= PWM_6_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC5/PWM_6.c ****     #else
 163:Generated_Source\PSoC5/PWM_6.c ****         #if(PWM_6_UseStatus)
 164:Generated_Source\PSoC5/PWM_6.c **** 
 165:Generated_Source\PSoC5/PWM_6.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC5/PWM_6.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_interruptState = CyEnterCriticalSection();
 118              		.loc 1 167 0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 6


 119 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 120 004a 0346     		mov	r3, r0
 121 004c BB71     		strb	r3, [r7, #6]
 168:Generated_Source\PSoC5/PWM_6.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_STATUS_AUX_CTRL |= PWM_6_STATUS_ACTL_INT_EN_MASK;
 122              		.loc 1 169 0
 123 004e 094A     		ldr	r2, .L6+4
 124 0050 084B     		ldr	r3, .L6+4
 125 0052 1B78     		ldrb	r3, [r3]
 126 0054 DBB2     		uxtb	r3, r3
 127 0056 43F01003 		orr	r3, r3, #16
 128 005a DBB2     		uxtb	r3, r3
 129 005c 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC5/PWM_6.c **** 
 171:Generated_Source\PSoC5/PWM_6.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC5/PWM_6.c ****             CyExitCriticalSection(PWM_6_interruptState);
 130              		.loc 1 172 0
 131 005e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 132 0060 1846     		mov	r0, r3
 133 0062 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC5/PWM_6.c **** 
 174:Generated_Source\PSoC5/PWM_6.c ****             /* Clear the FIFO to enable the PWM_6_STATUS_FIFOFULL
 175:Generated_Source\PSoC5/PWM_6.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_ClearFIFO();
 134              		.loc 1 176 0
 135 0066 FFF7FEFF 		bl	PWM_6_ClearFIFO
 177:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UseStatus) */
 178:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UsingFixedFunction) */
 179:Generated_Source\PSoC5/PWM_6.c **** }
 136              		.loc 1 179 0
 137 006a 0837     		adds	r7, r7, #8
 138              		.cfi_def_cfa_offset 8
 139 006c BD46     		mov	sp, r7
 140              		.cfi_def_cfa_register 13
 141              		@ sp needed
 142 006e 80BD     		pop	{r7, pc}
 143              	.L7:
 144              		.align	2
 145              	.L6:
 146 0070 75640040 		.word	1073767541
 147 0074 91640040 		.word	1073767569
 148              		.cfi_endproc
 149              	.LFE1:
 150              		.size	PWM_6_Init, .-PWM_6_Init
 151              		.section	.text.PWM_6_Enable,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_6_Enable
 154              		.thumb
 155              		.thumb_func
 156              		.type	PWM_6_Enable, %function
 157              	PWM_6_Enable:
 158              	.LFB2:
 180:Generated_Source\PSoC5/PWM_6.c **** 
 181:Generated_Source\PSoC5/PWM_6.c **** 
 182:Generated_Source\PSoC5/PWM_6.c **** /*******************************************************************************
 183:Generated_Source\PSoC5/PWM_6.c **** * Function Name: PWM_6_Enable
 184:Generated_Source\PSoC5/PWM_6.c **** ********************************************************************************
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 7


 185:Generated_Source\PSoC5/PWM_6.c **** *
 186:Generated_Source\PSoC5/PWM_6.c **** * Summary:
 187:Generated_Source\PSoC5/PWM_6.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC5/PWM_6.c **** *
 189:Generated_Source\PSoC5/PWM_6.c **** * Parameters:
 190:Generated_Source\PSoC5/PWM_6.c **** *  None
 191:Generated_Source\PSoC5/PWM_6.c **** *
 192:Generated_Source\PSoC5/PWM_6.c **** * Return:
 193:Generated_Source\PSoC5/PWM_6.c **** *  None
 194:Generated_Source\PSoC5/PWM_6.c **** *
 195:Generated_Source\PSoC5/PWM_6.c **** * Side Effects:
 196:Generated_Source\PSoC5/PWM_6.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC5/PWM_6.c **** *
 198:Generated_Source\PSoC5/PWM_6.c **** *******************************************************************************/
 199:Generated_Source\PSoC5/PWM_6.c **** void PWM_6_Enable(void) 
 200:Generated_Source\PSoC5/PWM_6.c **** {
 159              		.loc 1 200 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164 0000 80B4     		push	{r7}
 165              		.cfi_def_cfa_offset 4
 166              		.cfi_offset 7, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC5/PWM_6.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UsingFixedFunction)
 203:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_GLOBAL_ENABLE |= PWM_6_BLOCK_EN_MASK;
 204:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_GLOBAL_STBY_ENABLE |= PWM_6_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UsingFixedFunction) */
 206:Generated_Source\PSoC5/PWM_6.c **** 
 207:Generated_Source\PSoC5/PWM_6.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UseControl || PWM_6_UsingFixedFunction)
 209:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_CONTROL |= PWM_6_CTRL_ENABLE;
 169              		.loc 1 209 0
 170 0004 054A     		ldr	r2, .L9
 171 0006 054B     		ldr	r3, .L9
 172 0008 1B78     		ldrb	r3, [r3]
 173 000a DBB2     		uxtb	r3, r3
 174 000c 63F07F03 		orn	r3, r3, #127
 175 0010 DBB2     		uxtb	r3, r3
 176 0012 1370     		strb	r3, [r2]
 210:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UseControl || PWM_6_UsingFixedFunction) */
 211:Generated_Source\PSoC5/PWM_6.c **** }
 177              		.loc 1 211 0
 178 0014 BD46     		mov	sp, r7
 179              		.cfi_def_cfa_register 13
 180              		@ sp needed
 181 0016 5DF8047B 		ldr	r7, [sp], #4
 182              		.cfi_restore 7
 183              		.cfi_def_cfa_offset 0
 184 001a 7047     		bx	lr
 185              	.L10:
 186              		.align	2
 187              	.L9:
 188 001c 75640040 		.word	1073767541
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 8


 189              		.cfi_endproc
 190              	.LFE2:
 191              		.size	PWM_6_Enable, .-PWM_6_Enable
 192              		.section	.text.PWM_6_Stop,"ax",%progbits
 193              		.align	2
 194              		.global	PWM_6_Stop
 195              		.thumb
 196              		.thumb_func
 197              		.type	PWM_6_Stop, %function
 198              	PWM_6_Stop:
 199              	.LFB3:
 212:Generated_Source\PSoC5/PWM_6.c **** 
 213:Generated_Source\PSoC5/PWM_6.c **** 
 214:Generated_Source\PSoC5/PWM_6.c **** /*******************************************************************************
 215:Generated_Source\PSoC5/PWM_6.c **** * Function Name: PWM_6_Stop
 216:Generated_Source\PSoC5/PWM_6.c **** ********************************************************************************
 217:Generated_Source\PSoC5/PWM_6.c **** *
 218:Generated_Source\PSoC5/PWM_6.c **** * Summary:
 219:Generated_Source\PSoC5/PWM_6.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC5/PWM_6.c **** *  interrupts.
 221:Generated_Source\PSoC5/PWM_6.c **** *
 222:Generated_Source\PSoC5/PWM_6.c **** * Parameters:
 223:Generated_Source\PSoC5/PWM_6.c **** *  None
 224:Generated_Source\PSoC5/PWM_6.c **** *
 225:Generated_Source\PSoC5/PWM_6.c **** * Return:
 226:Generated_Source\PSoC5/PWM_6.c **** *  None
 227:Generated_Source\PSoC5/PWM_6.c **** *
 228:Generated_Source\PSoC5/PWM_6.c **** * Side Effects:
 229:Generated_Source\PSoC5/PWM_6.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC5/PWM_6.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC5/PWM_6.c **** *
 232:Generated_Source\PSoC5/PWM_6.c **** *******************************************************************************/
 233:Generated_Source\PSoC5/PWM_6.c **** void PWM_6_Stop(void) 
 234:Generated_Source\PSoC5/PWM_6.c **** {
 200              		.loc 1 234 0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 1, uses_anonymous_args = 0
 204              		@ link register save eliminated.
 205 0000 80B4     		push	{r7}
 206              		.cfi_def_cfa_offset 4
 207              		.cfi_offset 7, -4
 208 0002 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UseControl || PWM_6_UsingFixedFunction)
 236:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_CONTROL &= ((uint8)(~PWM_6_CTRL_ENABLE));
 210              		.loc 1 236 0
 211 0004 054A     		ldr	r2, .L12
 212 0006 054B     		ldr	r3, .L12
 213 0008 1B78     		ldrb	r3, [r3]
 214 000a DBB2     		uxtb	r3, r3
 215 000c 03F07F03 		and	r3, r3, #127
 216 0010 DBB2     		uxtb	r3, r3
 217 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UseControl || PWM_6_UsingFixedFunction) */
 238:Generated_Source\PSoC5/PWM_6.c **** 
 239:Generated_Source\PSoC5/PWM_6.c ****     /* Globally disable the Fixed Function Block chosen */
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 9


 240:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UsingFixedFunction)
 241:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_GLOBAL_ENABLE &= ((uint8)(~PWM_6_BLOCK_EN_MASK));
 242:Generated_Source\PSoC5/PWM_6.c ****         PWM_6_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_6_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UsingFixedFunction) */
 244:Generated_Source\PSoC5/PWM_6.c **** }
 218              		.loc 1 244 0
 219 0014 BD46     		mov	sp, r7
 220              		.cfi_def_cfa_register 13
 221              		@ sp needed
 222 0016 5DF8047B 		ldr	r7, [sp], #4
 223              		.cfi_restore 7
 224              		.cfi_def_cfa_offset 0
 225 001a 7047     		bx	lr
 226              	.L13:
 227              		.align	2
 228              	.L12:
 229 001c 75640040 		.word	1073767541
 230              		.cfi_endproc
 231              	.LFE3:
 232              		.size	PWM_6_Stop, .-PWM_6_Stop
 233              		.section	.text.PWM_6_WriteCounter,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_6_WriteCounter
 236              		.thumb
 237              		.thumb_func
 238              		.type	PWM_6_WriteCounter, %function
 239              	PWM_6_WriteCounter:
 240              	.LFB4:
 245:Generated_Source\PSoC5/PWM_6.c **** 
 246:Generated_Source\PSoC5/PWM_6.c **** #if (PWM_6_UseOneCompareMode)
 247:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_CompareMode1SW)
 248:Generated_Source\PSoC5/PWM_6.c **** 
 249:Generated_Source\PSoC5/PWM_6.c **** 
 250:Generated_Source\PSoC5/PWM_6.c ****         /*******************************************************************************
 251:Generated_Source\PSoC5/PWM_6.c ****         * Function Name: PWM_6_SetCompareMode
 252:Generated_Source\PSoC5/PWM_6.c ****         ********************************************************************************
 253:Generated_Source\PSoC5/PWM_6.c ****         *
 254:Generated_Source\PSoC5/PWM_6.c ****         * Summary:
 255:Generated_Source\PSoC5/PWM_6.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC5/PWM_6.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC5/PWM_6.c ****         *
 258:Generated_Source\PSoC5/PWM_6.c ****         * Parameters:
 259:Generated_Source\PSoC5/PWM_6.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC5/PWM_6.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC5/PWM_6.c ****         *
 262:Generated_Source\PSoC5/PWM_6.c ****         * Return:
 263:Generated_Source\PSoC5/PWM_6.c ****         *  None
 264:Generated_Source\PSoC5/PWM_6.c ****         *
 265:Generated_Source\PSoC5/PWM_6.c ****         *******************************************************************************/
 266:Generated_Source\PSoC5/PWM_6.c ****         void PWM_6_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC5/PWM_6.c ****         {
 268:Generated_Source\PSoC5/PWM_6.c ****             #if(PWM_6_UsingFixedFunction)
 269:Generated_Source\PSoC5/PWM_6.c **** 
 270:Generated_Source\PSoC5/PWM_6.c ****                 #if(0 != PWM_6_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC5/PWM_6.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_6_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC5/PWM_6.c ****                 #else
 273:Generated_Source\PSoC5/PWM_6.c ****                     uint8 comparemodemasked = comparemode;
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 10


 274:Generated_Source\PSoC5/PWM_6.c ****                 #endif /* (0 != PWM_6_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC5/PWM_6.c **** 
 276:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_CONTROL3 &= ((uint8)(~PWM_6_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC5/PWM_6.c **** 
 279:Generated_Source\PSoC5/PWM_6.c ****             #elif (PWM_6_UseControl)
 280:Generated_Source\PSoC5/PWM_6.c **** 
 281:Generated_Source\PSoC5/PWM_6.c ****                 #if(0 != PWM_6_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC5/PWM_6.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_6_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC5/PWM_6.c ****                                                 PWM_6_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC5/PWM_6.c ****                 #else
 285:Generated_Source\PSoC5/PWM_6.c ****                     uint8 comparemode1masked = comparemode & PWM_6_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC5/PWM_6.c ****                 #endif /* (0 != PWM_6_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC5/PWM_6.c **** 
 288:Generated_Source\PSoC5/PWM_6.c ****                 #if(0 != PWM_6_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC5/PWM_6.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_6_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC5/PWM_6.c ****                                                PWM_6_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC5/PWM_6.c ****                 #else
 292:Generated_Source\PSoC5/PWM_6.c ****                     uint8 comparemode2masked = comparemode & PWM_6_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC5/PWM_6.c ****                 #endif /* (0 != PWM_6_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC5/PWM_6.c **** 
 295:Generated_Source\PSoC5/PWM_6.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_CONTROL &= ((uint8)(~(PWM_6_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC5/PWM_6.c ****                                             PWM_6_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC5/PWM_6.c **** 
 300:Generated_Source\PSoC5/PWM_6.c ****             #else
 301:Generated_Source\PSoC5/PWM_6.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC5/PWM_6.c ****             #endif /* (PWM_6_UsingFixedFunction) */
 303:Generated_Source\PSoC5/PWM_6.c ****         }
 304:Generated_Source\PSoC5/PWM_6.c ****     #endif /* PWM_6_CompareMode1SW */
 305:Generated_Source\PSoC5/PWM_6.c **** 
 306:Generated_Source\PSoC5/PWM_6.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC5/PWM_6.c **** 
 308:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_CompareMode1SW)
 309:Generated_Source\PSoC5/PWM_6.c **** 
 310:Generated_Source\PSoC5/PWM_6.c **** 
 311:Generated_Source\PSoC5/PWM_6.c ****         /*******************************************************************************
 312:Generated_Source\PSoC5/PWM_6.c ****         * Function Name: PWM_6_SetCompareMode1
 313:Generated_Source\PSoC5/PWM_6.c ****         ********************************************************************************
 314:Generated_Source\PSoC5/PWM_6.c ****         *
 315:Generated_Source\PSoC5/PWM_6.c ****         * Summary:
 316:Generated_Source\PSoC5/PWM_6.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC5/PWM_6.c ****         *
 318:Generated_Source\PSoC5/PWM_6.c ****         * Parameters:
 319:Generated_Source\PSoC5/PWM_6.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC5/PWM_6.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC5/PWM_6.c ****         *
 322:Generated_Source\PSoC5/PWM_6.c ****         * Return:
 323:Generated_Source\PSoC5/PWM_6.c ****         *  None
 324:Generated_Source\PSoC5/PWM_6.c ****         *
 325:Generated_Source\PSoC5/PWM_6.c ****         *******************************************************************************/
 326:Generated_Source\PSoC5/PWM_6.c ****         void PWM_6_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC5/PWM_6.c ****         {
 328:Generated_Source\PSoC5/PWM_6.c ****             #if(0 != PWM_6_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC5/PWM_6.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_6_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC5/PWM_6.c ****                                            PWM_6_CTRL_CMPMODE1_MASK;
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 11


 331:Generated_Source\PSoC5/PWM_6.c ****             #else
 332:Generated_Source\PSoC5/PWM_6.c ****                 uint8 comparemodemasked = comparemode & PWM_6_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC5/PWM_6.c ****             #endif /* (0 != PWM_6_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC5/PWM_6.c **** 
 335:Generated_Source\PSoC5/PWM_6.c ****             #if (PWM_6_UseControl)
 336:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_CONTROL &= ((uint8)(~PWM_6_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC5/PWM_6.c ****             #endif /* (PWM_6_UseControl) */
 339:Generated_Source\PSoC5/PWM_6.c ****         }
 340:Generated_Source\PSoC5/PWM_6.c ****     #endif /* PWM_6_CompareMode1SW */
 341:Generated_Source\PSoC5/PWM_6.c **** 
 342:Generated_Source\PSoC5/PWM_6.c **** #if (PWM_6_CompareMode2SW)
 343:Generated_Source\PSoC5/PWM_6.c **** 
 344:Generated_Source\PSoC5/PWM_6.c **** 
 345:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 346:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_SetCompareMode2
 347:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 348:Generated_Source\PSoC5/PWM_6.c ****     *
 349:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 350:Generated_Source\PSoC5/PWM_6.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC5/PWM_6.c ****     *
 352:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 353:Generated_Source\PSoC5/PWM_6.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC5/PWM_6.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC5/PWM_6.c ****     *
 356:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 357:Generated_Source\PSoC5/PWM_6.c ****     *  None
 358:Generated_Source\PSoC5/PWM_6.c ****     *
 359:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 360:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC5/PWM_6.c ****     {
 362:Generated_Source\PSoC5/PWM_6.c **** 
 363:Generated_Source\PSoC5/PWM_6.c ****         #if(0 != PWM_6_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC5/PWM_6.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_6_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC5/PWM_6.c ****                                                  PWM_6_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC5/PWM_6.c ****         #else
 367:Generated_Source\PSoC5/PWM_6.c ****             uint8 comparemodemasked = comparemode & PWM_6_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (0 != PWM_6_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC5/PWM_6.c **** 
 370:Generated_Source\PSoC5/PWM_6.c ****         #if (PWM_6_UseControl)
 371:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_CONTROL &= ((uint8)(~PWM_6_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UseControl) */
 374:Generated_Source\PSoC5/PWM_6.c ****     }
 375:Generated_Source\PSoC5/PWM_6.c ****     #endif /*PWM_6_CompareMode2SW */
 376:Generated_Source\PSoC5/PWM_6.c **** 
 377:Generated_Source\PSoC5/PWM_6.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC5/PWM_6.c **** 
 379:Generated_Source\PSoC5/PWM_6.c **** 
 380:Generated_Source\PSoC5/PWM_6.c **** #if (!PWM_6_UsingFixedFunction)
 381:Generated_Source\PSoC5/PWM_6.c **** 
 382:Generated_Source\PSoC5/PWM_6.c **** 
 383:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 384:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_WriteCounter
 385:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 386:Generated_Source\PSoC5/PWM_6.c ****     *
 387:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 12


 388:Generated_Source\PSoC5/PWM_6.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC5/PWM_6.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC5/PWM_6.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC5/PWM_6.c ****     *  PWM implementation.
 392:Generated_Source\PSoC5/PWM_6.c ****     *
 393:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 394:Generated_Source\PSoC5/PWM_6.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC5/PWM_6.c ****     *
 396:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 397:Generated_Source\PSoC5/PWM_6.c ****     *  None
 398:Generated_Source\PSoC5/PWM_6.c ****     *
 399:Generated_Source\PSoC5/PWM_6.c ****     * Side Effects:
 400:Generated_Source\PSoC5/PWM_6.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC5/PWM_6.c ****     *
 402:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 403:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC5/PWM_6.c ****                                        
 405:Generated_Source\PSoC5/PWM_6.c ****     {
 241              		.loc 1 405 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 8
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245              		@ link register save eliminated.
 246 0000 80B4     		push	{r7}
 247              		.cfi_def_cfa_offset 4
 248              		.cfi_offset 7, -4
 249 0002 83B0     		sub	sp, sp, #12
 250              		.cfi_def_cfa_offset 16
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 253 0006 0346     		mov	r3, r0
 254 0008 FB71     		strb	r3, [r7, #7]
 406:Generated_Source\PSoC5/PWM_6.c ****         CY_SET_REG8(PWM_6_COUNTER_LSB_PTR, counter);
 255              		.loc 1 406 0
 256 000a 044A     		ldr	r2, .L15
 257 000c FB79     		ldrb	r3, [r7, #7]
 258 000e 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/PWM_6.c ****     }
 259              		.loc 1 407 0
 260 0010 0C37     		adds	r7, r7, #12
 261              		.cfi_def_cfa_offset 4
 262 0012 BD46     		mov	sp, r7
 263              		.cfi_def_cfa_register 13
 264              		@ sp needed
 265 0014 5DF8047B 		ldr	r7, [sp], #4
 266              		.cfi_restore 7
 267              		.cfi_def_cfa_offset 0
 268 0018 7047     		bx	lr
 269              	.L16:
 270 001a 00BF     		.align	2
 271              	.L15:
 272 001c 01640040 		.word	1073767425
 273              		.cfi_endproc
 274              	.LFE4:
 275              		.size	PWM_6_WriteCounter, .-PWM_6_WriteCounter
 276              		.section	.text.PWM_6_ReadCounter,"ax",%progbits
 277              		.align	2
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 13


 278              		.global	PWM_6_ReadCounter
 279              		.thumb
 280              		.thumb_func
 281              		.type	PWM_6_ReadCounter, %function
 282              	PWM_6_ReadCounter:
 283              	.LFB5:
 408:Generated_Source\PSoC5/PWM_6.c **** 
 409:Generated_Source\PSoC5/PWM_6.c **** 
 410:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 411:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadCounter
 412:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 413:Generated_Source\PSoC5/PWM_6.c ****     *
 414:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 415:Generated_Source\PSoC5/PWM_6.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC5/PWM_6.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC5/PWM_6.c ****     *
 418:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 419:Generated_Source\PSoC5/PWM_6.c ****     *  None
 420:Generated_Source\PSoC5/PWM_6.c ****     *
 421:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 422:Generated_Source\PSoC5/PWM_6.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC5/PWM_6.c ****     *
 424:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 425:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadCounter(void) 
 426:Generated_Source\PSoC5/PWM_6.c ****     {
 284              		.loc 1 426 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 1, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289 0000 80B4     		push	{r7}
 290              		.cfi_def_cfa_offset 4
 291              		.cfi_offset 7, -4
 292 0002 00AF     		add	r7, sp, #0
 293              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC5/PWM_6.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC5/PWM_6.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC5/PWM_6.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC5/PWM_6.c ****           (void)CY_GET_REG8(PWM_6_COUNTERCAP_LSB_PTR_8BIT);
 294              		.loc 1 430 0
 295 0004 044B     		ldr	r3, .L19
 296 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC5/PWM_6.c **** 
 432:Generated_Source\PSoC5/PWM_6.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC5/PWM_6.c ****         return (CY_GET_REG8(PWM_6_CAPTURE_LSB_PTR));
 297              		.loc 1 433 0
 298 0008 044B     		ldr	r3, .L19+4
 299 000a 1B78     		ldrb	r3, [r3]
 300 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC5/PWM_6.c ****     }
 301              		.loc 1 434 0
 302 000e 1846     		mov	r0, r3
 303 0010 BD46     		mov	sp, r7
 304              		.cfi_def_cfa_register 13
 305              		@ sp needed
 306 0012 5DF8047B 		ldr	r7, [sp], #4
 307              		.cfi_restore 7
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 14


 308              		.cfi_def_cfa_offset 0
 309 0016 7047     		bx	lr
 310              	.L20:
 311              		.align	2
 312              	.L19:
 313 0018 11640040 		.word	1073767441
 314 001c 51640040 		.word	1073767505
 315              		.cfi_endproc
 316              	.LFE5:
 317              		.size	PWM_6_ReadCounter, .-PWM_6_ReadCounter
 318              		.section	.text.PWM_6_ClearFIFO,"ax",%progbits
 319              		.align	2
 320              		.global	PWM_6_ClearFIFO
 321              		.thumb
 322              		.thumb_func
 323              		.type	PWM_6_ClearFIFO, %function
 324              	PWM_6_ClearFIFO:
 325              	.LFB6:
 435:Generated_Source\PSoC5/PWM_6.c **** 
 436:Generated_Source\PSoC5/PWM_6.c ****     #if (PWM_6_UseStatus)
 437:Generated_Source\PSoC5/PWM_6.c **** 
 438:Generated_Source\PSoC5/PWM_6.c **** 
 439:Generated_Source\PSoC5/PWM_6.c ****         /*******************************************************************************
 440:Generated_Source\PSoC5/PWM_6.c ****         * Function Name: PWM_6_ClearFIFO
 441:Generated_Source\PSoC5/PWM_6.c ****         ********************************************************************************
 442:Generated_Source\PSoC5/PWM_6.c ****         *
 443:Generated_Source\PSoC5/PWM_6.c ****         * Summary:
 444:Generated_Source\PSoC5/PWM_6.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC5/PWM_6.c ****         *
 446:Generated_Source\PSoC5/PWM_6.c ****         * Parameters:
 447:Generated_Source\PSoC5/PWM_6.c ****         *  None
 448:Generated_Source\PSoC5/PWM_6.c ****         *
 449:Generated_Source\PSoC5/PWM_6.c ****         * Return:
 450:Generated_Source\PSoC5/PWM_6.c ****         *  None
 451:Generated_Source\PSoC5/PWM_6.c ****         *
 452:Generated_Source\PSoC5/PWM_6.c ****         *******************************************************************************/
 453:Generated_Source\PSoC5/PWM_6.c ****         void PWM_6_ClearFIFO(void) 
 454:Generated_Source\PSoC5/PWM_6.c ****         {
 326              		.loc 1 454 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 1, uses_anonymous_args = 0
 330 0000 80B5     		push	{r7, lr}
 331              		.cfi_def_cfa_offset 8
 332              		.cfi_offset 7, -8
 333              		.cfi_offset 14, -4
 334 0002 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC5/PWM_6.c ****             while(0u != (PWM_6_ReadStatusRegister() & PWM_6_STATUS_FIFONEMPTY))
 336              		.loc 1 455 0
 337 0004 01E0     		b	.L22
 338              	.L23:
 456:Generated_Source\PSoC5/PWM_6.c ****             {
 457:Generated_Source\PSoC5/PWM_6.c ****                 (void)PWM_6_ReadCapture();
 339              		.loc 1 457 0
 340 0006 FFF7FEFF 		bl	PWM_6_ReadCapture
 341              	.L22:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 15


 455:Generated_Source\PSoC5/PWM_6.c ****             while(0u != (PWM_6_ReadStatusRegister() & PWM_6_STATUS_FIFONEMPTY))
 342              		.loc 1 455 0
 343 000a FFF7FEFF 		bl	PWM_6_ReadStatusRegister
 344 000e 0346     		mov	r3, r0
 345 0010 03F01003 		and	r3, r3, #16
 346 0014 002B     		cmp	r3, #0
 347 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC5/PWM_6.c ****             }
 459:Generated_Source\PSoC5/PWM_6.c ****         }
 348              		.loc 1 459 0
 349 0018 80BD     		pop	{r7, pc}
 350              		.cfi_endproc
 351              	.LFE6:
 352              		.size	PWM_6_ClearFIFO, .-PWM_6_ClearFIFO
 353 001a 00BF     		.section	.text.PWM_6_WritePeriod,"ax",%progbits
 354              		.align	2
 355              		.global	PWM_6_WritePeriod
 356              		.thumb
 357              		.thumb_func
 358              		.type	PWM_6_WritePeriod, %function
 359              	PWM_6_WritePeriod:
 360              	.LFB7:
 460:Generated_Source\PSoC5/PWM_6.c **** 
 461:Generated_Source\PSoC5/PWM_6.c ****     #endif /* PWM_6_UseStatus */
 462:Generated_Source\PSoC5/PWM_6.c **** 
 463:Generated_Source\PSoC5/PWM_6.c **** #endif /* !PWM_6_UsingFixedFunction */
 464:Generated_Source\PSoC5/PWM_6.c **** 
 465:Generated_Source\PSoC5/PWM_6.c **** 
 466:Generated_Source\PSoC5/PWM_6.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/PWM_6.c **** * Function Name: PWM_6_WritePeriod
 468:Generated_Source\PSoC5/PWM_6.c **** ********************************************************************************
 469:Generated_Source\PSoC5/PWM_6.c **** *
 470:Generated_Source\PSoC5/PWM_6.c **** * Summary:
 471:Generated_Source\PSoC5/PWM_6.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC5/PWM_6.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC5/PWM_6.c **** *
 474:Generated_Source\PSoC5/PWM_6.c **** * Parameters:
 475:Generated_Source\PSoC5/PWM_6.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC5/PWM_6.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC5/PWM_6.c **** *
 478:Generated_Source\PSoC5/PWM_6.c **** * Return:
 479:Generated_Source\PSoC5/PWM_6.c **** *  None
 480:Generated_Source\PSoC5/PWM_6.c **** *
 481:Generated_Source\PSoC5/PWM_6.c **** *******************************************************************************/
 482:Generated_Source\PSoC5/PWM_6.c **** void PWM_6_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC5/PWM_6.c **** {
 361              		.loc 1 483 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 8
 364              		@ frame_needed = 1, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 366 0000 80B4     		push	{r7}
 367              		.cfi_def_cfa_offset 4
 368              		.cfi_offset 7, -4
 369 0002 83B0     		sub	sp, sp, #12
 370              		.cfi_def_cfa_offset 16
 371 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 16


 372              		.cfi_def_cfa_register 7
 373 0006 0346     		mov	r3, r0
 374 0008 FB71     		strb	r3, [r7, #7]
 484:Generated_Source\PSoC5/PWM_6.c ****     #if(PWM_6_UsingFixedFunction)
 485:Generated_Source\PSoC5/PWM_6.c ****         CY_SET_REG16(PWM_6_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC5/PWM_6.c ****     #else
 487:Generated_Source\PSoC5/PWM_6.c ****         CY_SET_REG8(PWM_6_PERIOD_LSB_PTR, period);
 375              		.loc 1 487 0
 376 000a 044A     		ldr	r2, .L25
 377 000c FB79     		ldrb	r3, [r7, #7]
 378 000e 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UsingFixedFunction) */
 489:Generated_Source\PSoC5/PWM_6.c **** }
 379              		.loc 1 489 0
 380 0010 0C37     		adds	r7, r7, #12
 381              		.cfi_def_cfa_offset 4
 382 0012 BD46     		mov	sp, r7
 383              		.cfi_def_cfa_register 13
 384              		@ sp needed
 385 0014 5DF8047B 		ldr	r7, [sp], #4
 386              		.cfi_restore 7
 387              		.cfi_def_cfa_offset 0
 388 0018 7047     		bx	lr
 389              	.L26:
 390 001a 00BF     		.align	2
 391              	.L25:
 392 001c 41640040 		.word	1073767489
 393              		.cfi_endproc
 394              	.LFE7:
 395              		.size	PWM_6_WritePeriod, .-PWM_6_WritePeriod
 396              		.section	.text.PWM_6_WriteCompare,"ax",%progbits
 397              		.align	2
 398              		.global	PWM_6_WriteCompare
 399              		.thumb
 400              		.thumb_func
 401              		.type	PWM_6_WriteCompare, %function
 402              	PWM_6_WriteCompare:
 403              	.LFB8:
 490:Generated_Source\PSoC5/PWM_6.c **** 
 491:Generated_Source\PSoC5/PWM_6.c **** #if (PWM_6_UseOneCompareMode)
 492:Generated_Source\PSoC5/PWM_6.c **** 
 493:Generated_Source\PSoC5/PWM_6.c **** 
 494:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 495:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_WriteCompare
 496:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 497:Generated_Source\PSoC5/PWM_6.c ****     *
 498:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 499:Generated_Source\PSoC5/PWM_6.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC5/PWM_6.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC5/PWM_6.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC5/PWM_6.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC5/PWM_6.c ****     *  Dither Mode.
 504:Generated_Source\PSoC5/PWM_6.c ****     *
 505:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 506:Generated_Source\PSoC5/PWM_6.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC5/PWM_6.c ****     *
 508:Generated_Source\PSoC5/PWM_6.c ****     * Return:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 17


 509:Generated_Source\PSoC5/PWM_6.c ****     *  None
 510:Generated_Source\PSoC5/PWM_6.c ****     *
 511:Generated_Source\PSoC5/PWM_6.c ****     * Side Effects:
 512:Generated_Source\PSoC5/PWM_6.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC5/PWM_6.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC5/PWM_6.c ****     *
 515:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 516:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC5/PWM_6.c ****                                        
 518:Generated_Source\PSoC5/PWM_6.c ****     {
 404              		.loc 1 518 0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 8
 407              		@ frame_needed = 1, uses_anonymous_args = 0
 408              		@ link register save eliminated.
 409 0000 80B4     		push	{r7}
 410              		.cfi_def_cfa_offset 4
 411              		.cfi_offset 7, -4
 412 0002 83B0     		sub	sp, sp, #12
 413              		.cfi_def_cfa_offset 16
 414 0004 00AF     		add	r7, sp, #0
 415              		.cfi_def_cfa_register 7
 416 0006 0346     		mov	r3, r0
 417 0008 FB71     		strb	r3, [r7, #7]
 519:Generated_Source\PSoC5/PWM_6.c ****         #if(PWM_6_UsingFixedFunction)
 520:Generated_Source\PSoC5/PWM_6.c ****             CY_SET_REG16(PWM_6_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC5/PWM_6.c ****         #else
 522:Generated_Source\PSoC5/PWM_6.c ****             CY_SET_REG8(PWM_6_COMPARE1_LSB_PTR, compare);
 418              		.loc 1 522 0
 419 000a 044A     		ldr	r2, .L28
 420 000c FB79     		ldrb	r3, [r7, #7]
 421 000e 1370     		strb	r3, [r2]
 523:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UsingFixedFunction) */
 524:Generated_Source\PSoC5/PWM_6.c **** 
 525:Generated_Source\PSoC5/PWM_6.c ****         #if (PWM_6_PWMMode == PWM_6__B_PWM__DITHER)
 526:Generated_Source\PSoC5/PWM_6.c ****             #if(PWM_6_UsingFixedFunction)
 527:Generated_Source\PSoC5/PWM_6.c ****                 CY_SET_REG16(PWM_6_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC5/PWM_6.c ****             #else
 529:Generated_Source\PSoC5/PWM_6.c ****                 CY_SET_REG8(PWM_6_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC5/PWM_6.c ****             #endif /* (PWM_6_UsingFixedFunction) */
 531:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_PWMMode == PWM_6__B_PWM__DITHER) */
 532:Generated_Source\PSoC5/PWM_6.c ****     }
 422              		.loc 1 532 0
 423 0010 0C37     		adds	r7, r7, #12
 424              		.cfi_def_cfa_offset 4
 425 0012 BD46     		mov	sp, r7
 426              		.cfi_def_cfa_register 13
 427              		@ sp needed
 428 0014 5DF8047B 		ldr	r7, [sp], #4
 429              		.cfi_restore 7
 430              		.cfi_def_cfa_offset 0
 431 0018 7047     		bx	lr
 432              	.L29:
 433 001a 00BF     		.align	2
 434              	.L28:
 435 001c 21640040 		.word	1073767457
 436              		.cfi_endproc
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 18


 437              	.LFE8:
 438              		.size	PWM_6_WriteCompare, .-PWM_6_WriteCompare
 439              		.section	.text.PWM_6_SetInterruptMode,"ax",%progbits
 440              		.align	2
 441              		.global	PWM_6_SetInterruptMode
 442              		.thumb
 443              		.thumb_func
 444              		.type	PWM_6_SetInterruptMode, %function
 445              	PWM_6_SetInterruptMode:
 446              	.LFB9:
 533:Generated_Source\PSoC5/PWM_6.c **** 
 534:Generated_Source\PSoC5/PWM_6.c **** 
 535:Generated_Source\PSoC5/PWM_6.c **** #else
 536:Generated_Source\PSoC5/PWM_6.c **** 
 537:Generated_Source\PSoC5/PWM_6.c **** 
 538:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 539:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_WriteCompare1
 540:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 541:Generated_Source\PSoC5/PWM_6.c ****     *
 542:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 543:Generated_Source\PSoC5/PWM_6.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC5/PWM_6.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC5/PWM_6.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC5/PWM_6.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC5/PWM_6.c ****     *
 548:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 549:Generated_Source\PSoC5/PWM_6.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC5/PWM_6.c ****     *
 551:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 552:Generated_Source\PSoC5/PWM_6.c ****     *  None
 553:Generated_Source\PSoC5/PWM_6.c ****     *
 554:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 555:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC5/PWM_6.c ****                                         
 557:Generated_Source\PSoC5/PWM_6.c ****     {
 558:Generated_Source\PSoC5/PWM_6.c ****         #if(PWM_6_UsingFixedFunction)
 559:Generated_Source\PSoC5/PWM_6.c ****             CY_SET_REG16(PWM_6_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC5/PWM_6.c ****         #else
 561:Generated_Source\PSoC5/PWM_6.c ****             CY_SET_REG8(PWM_6_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UsingFixedFunction) */
 563:Generated_Source\PSoC5/PWM_6.c ****     }
 564:Generated_Source\PSoC5/PWM_6.c **** 
 565:Generated_Source\PSoC5/PWM_6.c **** 
 566:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 567:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_WriteCompare2
 568:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 569:Generated_Source\PSoC5/PWM_6.c ****     *
 570:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 571:Generated_Source\PSoC5/PWM_6.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC5/PWM_6.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC5/PWM_6.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC5/PWM_6.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC5/PWM_6.c ****     *  mode.
 576:Generated_Source\PSoC5/PWM_6.c ****     *
 577:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 578:Generated_Source\PSoC5/PWM_6.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC5/PWM_6.c ****     *
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 19


 580:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 581:Generated_Source\PSoC5/PWM_6.c ****     *  None
 582:Generated_Source\PSoC5/PWM_6.c ****     *
 583:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 584:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC5/PWM_6.c ****                                         
 586:Generated_Source\PSoC5/PWM_6.c ****     {
 587:Generated_Source\PSoC5/PWM_6.c ****         #if(PWM_6_UsingFixedFunction)
 588:Generated_Source\PSoC5/PWM_6.c ****             CY_SET_REG16(PWM_6_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC5/PWM_6.c ****         #else
 590:Generated_Source\PSoC5/PWM_6.c ****             CY_SET_REG8(PWM_6_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UsingFixedFunction) */
 592:Generated_Source\PSoC5/PWM_6.c ****     }
 593:Generated_Source\PSoC5/PWM_6.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC5/PWM_6.c **** 
 595:Generated_Source\PSoC5/PWM_6.c **** #if (PWM_6_DeadBandUsed)
 596:Generated_Source\PSoC5/PWM_6.c **** 
 597:Generated_Source\PSoC5/PWM_6.c **** 
 598:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 599:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_WriteDeadTime
 600:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 601:Generated_Source\PSoC5/PWM_6.c ****     *
 602:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 603:Generated_Source\PSoC5/PWM_6.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC5/PWM_6.c ****     *
 605:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 606:Generated_Source\PSoC5/PWM_6.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC5/PWM_6.c ****     *
 608:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 609:Generated_Source\PSoC5/PWM_6.c ****     *  None
 610:Generated_Source\PSoC5/PWM_6.c ****     *
 611:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 612:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC5/PWM_6.c ****     {
 614:Generated_Source\PSoC5/PWM_6.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC5/PWM_6.c ****         #if(!PWM_6_DeadBand2_4)
 616:Generated_Source\PSoC5/PWM_6.c ****             CY_SET_REG8(PWM_6_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC5/PWM_6.c ****         #else
 618:Generated_Source\PSoC5/PWM_6.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC5/PWM_6.c ****             /* Clear existing data */
 620:Generated_Source\PSoC5/PWM_6.c ****             PWM_6_DEADBAND_COUNT &= ((uint8)(~PWM_6_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC5/PWM_6.c **** 
 622:Generated_Source\PSoC5/PWM_6.c ****             /* Set new dead time */
 623:Generated_Source\PSoC5/PWM_6.c ****             #if(PWM_6_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_6_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC5/PWM_6.c ****                                                     PWM_6_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC5/PWM_6.c ****             #else
 627:Generated_Source\PSoC5/PWM_6.c ****                 PWM_6_DEADBAND_COUNT |= deadtime & PWM_6_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC5/PWM_6.c ****             #endif /* (PWM_6_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC5/PWM_6.c **** 
 630:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (!PWM_6_DeadBand2_4) */
 631:Generated_Source\PSoC5/PWM_6.c ****     }
 632:Generated_Source\PSoC5/PWM_6.c **** 
 633:Generated_Source\PSoC5/PWM_6.c **** 
 634:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 635:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadDeadTime
 636:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 20


 637:Generated_Source\PSoC5/PWM_6.c ****     *
 638:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 639:Generated_Source\PSoC5/PWM_6.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC5/PWM_6.c ****     *
 641:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 642:Generated_Source\PSoC5/PWM_6.c ****     *  None
 643:Generated_Source\PSoC5/PWM_6.c ****     *
 644:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 645:Generated_Source\PSoC5/PWM_6.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC5/PWM_6.c ****     *
 647:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 648:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadDeadTime(void) 
 649:Generated_Source\PSoC5/PWM_6.c ****     {
 650:Generated_Source\PSoC5/PWM_6.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC5/PWM_6.c ****         #if(!PWM_6_DeadBand2_4)
 652:Generated_Source\PSoC5/PWM_6.c ****             return (CY_GET_REG8(PWM_6_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC5/PWM_6.c ****         #else
 654:Generated_Source\PSoC5/PWM_6.c **** 
 655:Generated_Source\PSoC5/PWM_6.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC5/PWM_6.c ****             #if(PWM_6_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC5/PWM_6.c ****                 return ((uint8)(((uint8)(PWM_6_DEADBAND_COUNT & PWM_6_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC5/PWM_6.c ****                                                                            PWM_6_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC5/PWM_6.c ****             #else
 660:Generated_Source\PSoC5/PWM_6.c ****                 return (PWM_6_DEADBAND_COUNT & PWM_6_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC5/PWM_6.c ****             #endif /* (PWM_6_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (!PWM_6_DeadBand2_4) */
 663:Generated_Source\PSoC5/PWM_6.c ****     }
 664:Generated_Source\PSoC5/PWM_6.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC5/PWM_6.c **** 
 666:Generated_Source\PSoC5/PWM_6.c **** #if (PWM_6_UseStatus || PWM_6_UsingFixedFunction)
 667:Generated_Source\PSoC5/PWM_6.c **** 
 668:Generated_Source\PSoC5/PWM_6.c **** 
 669:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 670:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_SetInterruptMode
 671:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 672:Generated_Source\PSoC5/PWM_6.c ****     *
 673:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 674:Generated_Source\PSoC5/PWM_6.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC5/PWM_6.c ****     *  source status register.
 676:Generated_Source\PSoC5/PWM_6.c ****     *
 677:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 678:Generated_Source\PSoC5/PWM_6.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC5/PWM_6.c ****     *
 680:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 681:Generated_Source\PSoC5/PWM_6.c ****     *  None
 682:Generated_Source\PSoC5/PWM_6.c ****     *
 683:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 684:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC5/PWM_6.c ****     {
 447              		.loc 1 685 0
 448              		.cfi_startproc
 449              		@ args = 0, pretend = 0, frame = 8
 450              		@ frame_needed = 1, uses_anonymous_args = 0
 451              		@ link register save eliminated.
 452 0000 80B4     		push	{r7}
 453              		.cfi_def_cfa_offset 4
 454              		.cfi_offset 7, -4
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 21


 455 0002 83B0     		sub	sp, sp, #12
 456              		.cfi_def_cfa_offset 16
 457 0004 00AF     		add	r7, sp, #0
 458              		.cfi_def_cfa_register 7
 459 0006 0346     		mov	r3, r0
 460 0008 FB71     		strb	r3, [r7, #7]
 686:Generated_Source\PSoC5/PWM_6.c ****         CY_SET_REG8(PWM_6_STATUS_MASK_PTR, interruptMode);
 461              		.loc 1 686 0
 462 000a 044A     		ldr	r2, .L31
 463 000c FB79     		ldrb	r3, [r7, #7]
 464 000e 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC5/PWM_6.c ****     }
 465              		.loc 1 687 0
 466 0010 0C37     		adds	r7, r7, #12
 467              		.cfi_def_cfa_offset 4
 468 0012 BD46     		mov	sp, r7
 469              		.cfi_def_cfa_register 13
 470              		@ sp needed
 471 0014 5DF8047B 		ldr	r7, [sp], #4
 472              		.cfi_restore 7
 473              		.cfi_def_cfa_offset 0
 474 0018 7047     		bx	lr
 475              	.L32:
 476 001a 00BF     		.align	2
 477              	.L31:
 478 001c 81640040 		.word	1073767553
 479              		.cfi_endproc
 480              	.LFE9:
 481              		.size	PWM_6_SetInterruptMode, .-PWM_6_SetInterruptMode
 482              		.section	.text.PWM_6_ReadStatusRegister,"ax",%progbits
 483              		.align	2
 484              		.global	PWM_6_ReadStatusRegister
 485              		.thumb
 486              		.thumb_func
 487              		.type	PWM_6_ReadStatusRegister, %function
 488              	PWM_6_ReadStatusRegister:
 489              	.LFB10:
 688:Generated_Source\PSoC5/PWM_6.c **** 
 689:Generated_Source\PSoC5/PWM_6.c **** 
 690:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 691:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadStatusRegister
 692:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 693:Generated_Source\PSoC5/PWM_6.c ****     *
 694:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 695:Generated_Source\PSoC5/PWM_6.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC5/PWM_6.c ****     *
 697:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 698:Generated_Source\PSoC5/PWM_6.c ****     *  None
 699:Generated_Source\PSoC5/PWM_6.c ****     *
 700:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 701:Generated_Source\PSoC5/PWM_6.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC5/PWM_6.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC5/PWM_6.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC5/PWM_6.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC5/PWM_6.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC5/PWM_6.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC5/PWM_6.c ****     *  [1]   : Compare output 2
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 22


 708:Generated_Source\PSoC5/PWM_6.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC5/PWM_6.c ****     *
 710:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 711:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadStatusRegister(void) 
 712:Generated_Source\PSoC5/PWM_6.c ****     {
 490              		.loc 1 712 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 495 0000 80B4     		push	{r7}
 496              		.cfi_def_cfa_offset 4
 497              		.cfi_offset 7, -4
 498 0002 00AF     		add	r7, sp, #0
 499              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC5/PWM_6.c ****         return (CY_GET_REG8(PWM_6_STATUS_PTR));
 500              		.loc 1 713 0
 501 0004 034B     		ldr	r3, .L35
 502 0006 1B78     		ldrb	r3, [r3]
 503 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC5/PWM_6.c ****     }
 504              		.loc 1 714 0
 505 000a 1846     		mov	r0, r3
 506 000c BD46     		mov	sp, r7
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 000e 5DF8047B 		ldr	r7, [sp], #4
 510              		.cfi_restore 7
 511              		.cfi_def_cfa_offset 0
 512 0012 7047     		bx	lr
 513              	.L36:
 514              		.align	2
 515              	.L35:
 516 0014 61640040 		.word	1073767521
 517              		.cfi_endproc
 518              	.LFE10:
 519              		.size	PWM_6_ReadStatusRegister, .-PWM_6_ReadStatusRegister
 520              		.section	.text.PWM_6_ReadControlRegister,"ax",%progbits
 521              		.align	2
 522              		.global	PWM_6_ReadControlRegister
 523              		.thumb
 524              		.thumb_func
 525              		.type	PWM_6_ReadControlRegister, %function
 526              	PWM_6_ReadControlRegister:
 527              	.LFB11:
 715:Generated_Source\PSoC5/PWM_6.c **** 
 716:Generated_Source\PSoC5/PWM_6.c **** #endif /* (PWM_6_UseStatus || PWM_6_UsingFixedFunction) */
 717:Generated_Source\PSoC5/PWM_6.c **** 
 718:Generated_Source\PSoC5/PWM_6.c **** 
 719:Generated_Source\PSoC5/PWM_6.c **** #if (PWM_6_UseControl)
 720:Generated_Source\PSoC5/PWM_6.c **** 
 721:Generated_Source\PSoC5/PWM_6.c **** 
 722:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 723:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadControlRegister
 724:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 725:Generated_Source\PSoC5/PWM_6.c ****     *
 726:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 23


 727:Generated_Source\PSoC5/PWM_6.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC5/PWM_6.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC5/PWM_6.c ****     *
 730:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 731:Generated_Source\PSoC5/PWM_6.c ****     *  None
 732:Generated_Source\PSoC5/PWM_6.c ****     *
 733:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 734:Generated_Source\PSoC5/PWM_6.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC5/PWM_6.c ****     *
 736:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 737:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadControlRegister(void) 
 738:Generated_Source\PSoC5/PWM_6.c ****     {
 528              		.loc 1 738 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 8
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532              		@ link register save eliminated.
 533 0000 80B4     		push	{r7}
 534              		.cfi_def_cfa_offset 4
 535              		.cfi_offset 7, -4
 536 0002 83B0     		sub	sp, sp, #12
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC5/PWM_6.c ****         uint8 result;
 740:Generated_Source\PSoC5/PWM_6.c **** 
 741:Generated_Source\PSoC5/PWM_6.c ****         result = CY_GET_REG8(PWM_6_CONTROL_PTR);
 540              		.loc 1 741 0
 541 0006 054B     		ldr	r3, .L39
 542 0008 1B78     		ldrb	r3, [r3]
 543 000a FB71     		strb	r3, [r7, #7]
 742:Generated_Source\PSoC5/PWM_6.c ****         return (result);
 544              		.loc 1 742 0
 545 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 743:Generated_Source\PSoC5/PWM_6.c ****     }
 546              		.loc 1 743 0
 547 000e 1846     		mov	r0, r3
 548 0010 0C37     		adds	r7, r7, #12
 549              		.cfi_def_cfa_offset 4
 550 0012 BD46     		mov	sp, r7
 551              		.cfi_def_cfa_register 13
 552              		@ sp needed
 553 0014 5DF8047B 		ldr	r7, [sp], #4
 554              		.cfi_restore 7
 555              		.cfi_def_cfa_offset 0
 556 0018 7047     		bx	lr
 557              	.L40:
 558 001a 00BF     		.align	2
 559              	.L39:
 560 001c 75640040 		.word	1073767541
 561              		.cfi_endproc
 562              	.LFE11:
 563              		.size	PWM_6_ReadControlRegister, .-PWM_6_ReadControlRegister
 564              		.section	.text.PWM_6_WriteControlRegister,"ax",%progbits
 565              		.align	2
 566              		.global	PWM_6_WriteControlRegister
 567              		.thumb
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 24


 568              		.thumb_func
 569              		.type	PWM_6_WriteControlRegister, %function
 570              	PWM_6_WriteControlRegister:
 571              	.LFB12:
 744:Generated_Source\PSoC5/PWM_6.c **** 
 745:Generated_Source\PSoC5/PWM_6.c **** 
 746:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 747:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_WriteControlRegister
 748:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 749:Generated_Source\PSoC5/PWM_6.c ****     *
 750:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 751:Generated_Source\PSoC5/PWM_6.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC5/PWM_6.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC5/PWM_6.c ****     *
 754:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 755:Generated_Source\PSoC5/PWM_6.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC5/PWM_6.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC5/PWM_6.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC5/PWM_6.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC5/PWM_6.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC5/PWM_6.c ****     *
 761:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 762:Generated_Source\PSoC5/PWM_6.c ****     *  None
 763:Generated_Source\PSoC5/PWM_6.c ****     *
 764:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 765:Generated_Source\PSoC5/PWM_6.c ****     void PWM_6_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC5/PWM_6.c ****     {
 572              		.loc 1 766 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 8
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              		.cfi_def_cfa_offset 4
 579              		.cfi_offset 7, -4
 580 0002 83B0     		sub	sp, sp, #12
 581              		.cfi_def_cfa_offset 16
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 584 0006 0346     		mov	r3, r0
 585 0008 FB71     		strb	r3, [r7, #7]
 767:Generated_Source\PSoC5/PWM_6.c ****         CY_SET_REG8(PWM_6_CONTROL_PTR, control);
 586              		.loc 1 767 0
 587 000a 044A     		ldr	r2, .L42
 588 000c FB79     		ldrb	r3, [r7, #7]
 589 000e 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC5/PWM_6.c ****     }
 590              		.loc 1 768 0
 591 0010 0C37     		adds	r7, r7, #12
 592              		.cfi_def_cfa_offset 4
 593 0012 BD46     		mov	sp, r7
 594              		.cfi_def_cfa_register 13
 595              		@ sp needed
 596 0014 5DF8047B 		ldr	r7, [sp], #4
 597              		.cfi_restore 7
 598              		.cfi_def_cfa_offset 0
 599 0018 7047     		bx	lr
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 25


 600              	.L43:
 601 001a 00BF     		.align	2
 602              	.L42:
 603 001c 75640040 		.word	1073767541
 604              		.cfi_endproc
 605              	.LFE12:
 606              		.size	PWM_6_WriteControlRegister, .-PWM_6_WriteControlRegister
 607              		.section	.text.PWM_6_ReadCapture,"ax",%progbits
 608              		.align	2
 609              		.global	PWM_6_ReadCapture
 610              		.thumb
 611              		.thumb_func
 612              		.type	PWM_6_ReadCapture, %function
 613              	PWM_6_ReadCapture:
 614              	.LFB13:
 769:Generated_Source\PSoC5/PWM_6.c **** 
 770:Generated_Source\PSoC5/PWM_6.c **** #endif /* (PWM_6_UseControl) */
 771:Generated_Source\PSoC5/PWM_6.c **** 
 772:Generated_Source\PSoC5/PWM_6.c **** 
 773:Generated_Source\PSoC5/PWM_6.c **** #if (!PWM_6_UsingFixedFunction)
 774:Generated_Source\PSoC5/PWM_6.c **** 
 775:Generated_Source\PSoC5/PWM_6.c **** 
 776:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 777:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadCapture
 778:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 779:Generated_Source\PSoC5/PWM_6.c ****     *
 780:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 781:Generated_Source\PSoC5/PWM_6.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC5/PWM_6.c ****     *
 783:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 784:Generated_Source\PSoC5/PWM_6.c ****     *  None
 785:Generated_Source\PSoC5/PWM_6.c ****     *
 786:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 787:Generated_Source\PSoC5/PWM_6.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC5/PWM_6.c ****     *
 789:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 790:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadCapture(void) 
 791:Generated_Source\PSoC5/PWM_6.c ****     {
 615              		.loc 1 791 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620 0000 80B4     		push	{r7}
 621              		.cfi_def_cfa_offset 4
 622              		.cfi_offset 7, -4
 623 0002 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC5/PWM_6.c ****         return (CY_GET_REG8(PWM_6_CAPTURE_LSB_PTR));
 625              		.loc 1 792 0
 626 0004 034B     		ldr	r3, .L46
 627 0006 1B78     		ldrb	r3, [r3]
 628 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC5/PWM_6.c ****     }
 629              		.loc 1 793 0
 630 000a 1846     		mov	r0, r3
 631 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 26


 632              		.cfi_def_cfa_register 13
 633              		@ sp needed
 634 000e 5DF8047B 		ldr	r7, [sp], #4
 635              		.cfi_restore 7
 636              		.cfi_def_cfa_offset 0
 637 0012 7047     		bx	lr
 638              	.L47:
 639              		.align	2
 640              	.L46:
 641 0014 51640040 		.word	1073767505
 642              		.cfi_endproc
 643              	.LFE13:
 644              		.size	PWM_6_ReadCapture, .-PWM_6_ReadCapture
 645              		.section	.text.PWM_6_ReadCompare,"ax",%progbits
 646              		.align	2
 647              		.global	PWM_6_ReadCompare
 648              		.thumb
 649              		.thumb_func
 650              		.type	PWM_6_ReadCompare, %function
 651              	PWM_6_ReadCompare:
 652              	.LFB14:
 794:Generated_Source\PSoC5/PWM_6.c **** 
 795:Generated_Source\PSoC5/PWM_6.c **** #endif /* (!PWM_6_UsingFixedFunction) */
 796:Generated_Source\PSoC5/PWM_6.c **** 
 797:Generated_Source\PSoC5/PWM_6.c **** 
 798:Generated_Source\PSoC5/PWM_6.c **** #if (PWM_6_UseOneCompareMode)
 799:Generated_Source\PSoC5/PWM_6.c **** 
 800:Generated_Source\PSoC5/PWM_6.c **** 
 801:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 802:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadCompare
 803:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 804:Generated_Source\PSoC5/PWM_6.c ****     *
 805:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 806:Generated_Source\PSoC5/PWM_6.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC5/PWM_6.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC5/PWM_6.c ****     *
 809:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 810:Generated_Source\PSoC5/PWM_6.c ****     *  None
 811:Generated_Source\PSoC5/PWM_6.c ****     *
 812:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 813:Generated_Source\PSoC5/PWM_6.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC5/PWM_6.c ****     *
 815:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 816:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadCompare(void) 
 817:Generated_Source\PSoC5/PWM_6.c ****     {
 653              		.loc 1 817 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658 0000 80B4     		push	{r7}
 659              		.cfi_def_cfa_offset 4
 660              		.cfi_offset 7, -4
 661 0002 00AF     		add	r7, sp, #0
 662              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC5/PWM_6.c ****         #if(PWM_6_UsingFixedFunction)
 819:Generated_Source\PSoC5/PWM_6.c ****             return ((uint8)CY_GET_REG16(PWM_6_COMPARE1_LSB_PTR));
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 27


 820:Generated_Source\PSoC5/PWM_6.c ****         #else
 821:Generated_Source\PSoC5/PWM_6.c ****             return (CY_GET_REG8(PWM_6_COMPARE1_LSB_PTR));
 663              		.loc 1 821 0
 664 0004 034B     		ldr	r3, .L50
 665 0006 1B78     		ldrb	r3, [r3]
 666 0008 DBB2     		uxtb	r3, r3
 822:Generated_Source\PSoC5/PWM_6.c ****         #endif /* (PWM_6_UsingFixedFunction) */
 823:Generated_Source\PSoC5/PWM_6.c ****     }
 667              		.loc 1 823 0
 668 000a 1846     		mov	r0, r3
 669 000c BD46     		mov	sp, r7
 670              		.cfi_def_cfa_register 13
 671              		@ sp needed
 672 000e 5DF8047B 		ldr	r7, [sp], #4
 673              		.cfi_restore 7
 674              		.cfi_def_cfa_offset 0
 675 0012 7047     		bx	lr
 676              	.L51:
 677              		.align	2
 678              	.L50:
 679 0014 21640040 		.word	1073767457
 680              		.cfi_endproc
 681              	.LFE14:
 682              		.size	PWM_6_ReadCompare, .-PWM_6_ReadCompare
 683              		.section	.text.PWM_6_ReadPeriod,"ax",%progbits
 684              		.align	2
 685              		.global	PWM_6_ReadPeriod
 686              		.thumb
 687              		.thumb_func
 688              		.type	PWM_6_ReadPeriod, %function
 689              	PWM_6_ReadPeriod:
 690              	.LFB15:
 824:Generated_Source\PSoC5/PWM_6.c **** 
 825:Generated_Source\PSoC5/PWM_6.c **** #else
 826:Generated_Source\PSoC5/PWM_6.c **** 
 827:Generated_Source\PSoC5/PWM_6.c **** 
 828:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
 829:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadCompare1
 830:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 831:Generated_Source\PSoC5/PWM_6.c ****     *
 832:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 833:Generated_Source\PSoC5/PWM_6.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC5/PWM_6.c ****     *
 835:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 836:Generated_Source\PSoC5/PWM_6.c ****     *  None
 837:Generated_Source\PSoC5/PWM_6.c ****     *
 838:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 839:Generated_Source\PSoC5/PWM_6.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC5/PWM_6.c ****     *
 841:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 842:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadCompare1(void) 
 843:Generated_Source\PSoC5/PWM_6.c ****     {
 844:Generated_Source\PSoC5/PWM_6.c ****         return (CY_GET_REG8(PWM_6_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC5/PWM_6.c ****     }
 846:Generated_Source\PSoC5/PWM_6.c **** 
 847:Generated_Source\PSoC5/PWM_6.c **** 
 848:Generated_Source\PSoC5/PWM_6.c ****     /*******************************************************************************
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 28


 849:Generated_Source\PSoC5/PWM_6.c ****     * Function Name: PWM_6_ReadCompare2
 850:Generated_Source\PSoC5/PWM_6.c ****     ********************************************************************************
 851:Generated_Source\PSoC5/PWM_6.c ****     *
 852:Generated_Source\PSoC5/PWM_6.c ****     * Summary:
 853:Generated_Source\PSoC5/PWM_6.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC5/PWM_6.c ****     *
 855:Generated_Source\PSoC5/PWM_6.c ****     * Parameters:
 856:Generated_Source\PSoC5/PWM_6.c ****     *  None
 857:Generated_Source\PSoC5/PWM_6.c ****     *
 858:Generated_Source\PSoC5/PWM_6.c ****     * Return:
 859:Generated_Source\PSoC5/PWM_6.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC5/PWM_6.c ****     *
 861:Generated_Source\PSoC5/PWM_6.c ****     *******************************************************************************/
 862:Generated_Source\PSoC5/PWM_6.c ****     uint8 PWM_6_ReadCompare2(void) 
 863:Generated_Source\PSoC5/PWM_6.c ****     {
 864:Generated_Source\PSoC5/PWM_6.c ****         return (CY_GET_REG8(PWM_6_COMPARE2_LSB_PTR));
 865:Generated_Source\PSoC5/PWM_6.c ****     }
 866:Generated_Source\PSoC5/PWM_6.c **** 
 867:Generated_Source\PSoC5/PWM_6.c **** #endif /* (PWM_6_UseOneCompareMode) */
 868:Generated_Source\PSoC5/PWM_6.c **** 
 869:Generated_Source\PSoC5/PWM_6.c **** 
 870:Generated_Source\PSoC5/PWM_6.c **** /*******************************************************************************
 871:Generated_Source\PSoC5/PWM_6.c **** * Function Name: PWM_6_ReadPeriod
 872:Generated_Source\PSoC5/PWM_6.c **** ********************************************************************************
 873:Generated_Source\PSoC5/PWM_6.c **** *
 874:Generated_Source\PSoC5/PWM_6.c **** * Summary:
 875:Generated_Source\PSoC5/PWM_6.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC5/PWM_6.c **** *
 877:Generated_Source\PSoC5/PWM_6.c **** * Parameters:
 878:Generated_Source\PSoC5/PWM_6.c **** *  None
 879:Generated_Source\PSoC5/PWM_6.c **** *
 880:Generated_Source\PSoC5/PWM_6.c **** * Return:
 881:Generated_Source\PSoC5/PWM_6.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC5/PWM_6.c **** *
 883:Generated_Source\PSoC5/PWM_6.c **** *******************************************************************************/
 884:Generated_Source\PSoC5/PWM_6.c **** uint8 PWM_6_ReadPeriod(void) 
 885:Generated_Source\PSoC5/PWM_6.c **** {
 691              		.loc 1 885 0
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 0
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695              		@ link register save eliminated.
 696 0000 80B4     		push	{r7}
 697              		.cfi_def_cfa_offset 4
 698              		.cfi_offset 7, -4
 699 0002 00AF     		add	r7, sp, #0
 700              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC5/PWM_6.c ****     #if(PWM_6_UsingFixedFunction)
 887:Generated_Source\PSoC5/PWM_6.c ****         return ((uint8)CY_GET_REG16(PWM_6_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC5/PWM_6.c ****     #else
 889:Generated_Source\PSoC5/PWM_6.c ****         return (CY_GET_REG8(PWM_6_PERIOD_LSB_PTR));
 701              		.loc 1 889 0
 702 0004 034B     		ldr	r3, .L54
 703 0006 1B78     		ldrb	r3, [r3]
 704 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC5/PWM_6.c ****     #endif /* (PWM_6_UsingFixedFunction) */
 891:Generated_Source\PSoC5/PWM_6.c **** }
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 29


 705              		.loc 1 891 0
 706 000a 1846     		mov	r0, r3
 707 000c BD46     		mov	sp, r7
 708              		.cfi_def_cfa_register 13
 709              		@ sp needed
 710 000e 5DF8047B 		ldr	r7, [sp], #4
 711              		.cfi_restore 7
 712              		.cfi_def_cfa_offset 0
 713 0012 7047     		bx	lr
 714              	.L55:
 715              		.align	2
 716              	.L54:
 717 0014 41640040 		.word	1073767489
 718              		.cfi_endproc
 719              	.LFE15:
 720              		.size	PWM_6_ReadPeriod, .-PWM_6_ReadPeriod
 721              		.text
 722              	.Letext0:
 723              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 724              		.section	.debug_info,"",%progbits
 725              	.Ldebug_info0:
 726 0000 7F020000 		.4byte	0x27f
 727 0004 0400     		.2byte	0x4
 728 0006 00000000 		.4byte	.Ldebug_abbrev0
 729 000a 04       		.byte	0x4
 730 000b 01       		.uleb128 0x1
 731 000c 22010000 		.4byte	.LASF38
 732 0010 01       		.byte	0x1
 733 0011 BE000000 		.4byte	.LASF39
 734 0015 91020000 		.4byte	.LASF40
 735 0019 00000000 		.4byte	.Ldebug_ranges0+0
 736 001d 00000000 		.4byte	0
 737 0021 00000000 		.4byte	.Ldebug_line0
 738 0025 02       		.uleb128 0x2
 739 0026 01       		.byte	0x1
 740 0027 06       		.byte	0x6
 741 0028 04030000 		.4byte	.LASF0
 742 002c 02       		.uleb128 0x2
 743 002d 01       		.byte	0x1
 744 002e 08       		.byte	0x8
 745 002f B0000000 		.4byte	.LASF1
 746 0033 02       		.uleb128 0x2
 747 0034 02       		.byte	0x2
 748 0035 05       		.byte	0x5
 749 0036 87020000 		.4byte	.LASF2
 750 003a 02       		.uleb128 0x2
 751 003b 02       		.byte	0x2
 752 003c 07       		.byte	0x7
 753 003d 41000000 		.4byte	.LASF3
 754 0041 02       		.uleb128 0x2
 755 0042 04       		.byte	0x4
 756 0043 05       		.byte	0x5
 757 0044 F6020000 		.4byte	.LASF4
 758 0048 02       		.uleb128 0x2
 759 0049 04       		.byte	0x4
 760 004a 07       		.byte	0x7
 761 004b DD000000 		.4byte	.LASF5
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 30


 762 004f 02       		.uleb128 0x2
 763 0050 08       		.byte	0x8
 764 0051 05       		.byte	0x5
 765 0052 58020000 		.4byte	.LASF6
 766 0056 02       		.uleb128 0x2
 767 0057 08       		.byte	0x8
 768 0058 07       		.byte	0x7
 769 0059 17020000 		.4byte	.LASF7
 770 005d 03       		.uleb128 0x3
 771 005e 04       		.byte	0x4
 772 005f 05       		.byte	0x5
 773 0060 696E7400 		.ascii	"int\000"
 774 0064 02       		.uleb128 0x2
 775 0065 04       		.byte	0x4
 776 0066 07       		.byte	0x7
 777 0067 0A020000 		.4byte	.LASF8
 778 006b 04       		.uleb128 0x4
 779 006c 01010000 		.4byte	.LASF12
 780 0070 02       		.byte	0x2
 781 0071 9201     		.2byte	0x192
 782 0073 2C000000 		.4byte	0x2c
 783 0077 02       		.uleb128 0x2
 784 0078 04       		.byte	0x4
 785 0079 04       		.byte	0x4
 786 007a A2000000 		.4byte	.LASF9
 787 007e 02       		.uleb128 0x2
 788 007f 08       		.byte	0x8
 789 0080 04       		.byte	0x4
 790 0081 B0010000 		.4byte	.LASF10
 791 0085 02       		.uleb128 0x2
 792 0086 01       		.byte	0x1
 793 0087 08       		.byte	0x8
 794 0088 FF020000 		.4byte	.LASF11
 795 008c 04       		.uleb128 0x4
 796 008d 4A020000 		.4byte	.LASF13
 797 0091 02       		.byte	0x2
 798 0092 3C02     		.2byte	0x23c
 799 0094 98000000 		.4byte	0x98
 800 0098 05       		.uleb128 0x5
 801 0099 6B000000 		.4byte	0x6b
 802 009d 02       		.uleb128 0x2
 803 009e 04       		.byte	0x4
 804 009f 07       		.byte	0x7
 805 00a0 4F020000 		.4byte	.LASF14
 806 00a4 06       		.uleb128 0x6
 807 00a5 EA020000 		.4byte	.LASF17
 808 00a9 01       		.byte	0x1
 809 00aa 37       		.byte	0x37
 810 00ab 00000000 		.4byte	.LFB0
 811 00af 20000000 		.4byte	.LFE0-.LFB0
 812 00b3 01       		.uleb128 0x1
 813 00b4 9C       		.byte	0x9c
 814 00b5 07       		.uleb128 0x7
 815 00b6 97000000 		.4byte	.LASF20
 816 00ba 01       		.byte	0x1
 817 00bb 54       		.byte	0x54
 818 00bc 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 31


 819 00c0 78000000 		.4byte	.LFE1-.LFB1
 820 00c4 01       		.uleb128 0x1
 821 00c5 9C       		.byte	0x9c
 822 00c6 E7000000 		.4byte	0xe7
 823 00ca 08       		.uleb128 0x8
 824 00cb E5020000 		.4byte	.LASF15
 825 00cf 01       		.byte	0x1
 826 00d0 57       		.byte	0x57
 827 00d1 6B000000 		.4byte	0x6b
 828 00d5 02       		.uleb128 0x2
 829 00d6 91       		.byte	0x91
 830 00d7 77       		.sleb128 -9
 831 00d8 08       		.uleb128 0x8
 832 00d9 35020000 		.4byte	.LASF16
 833 00dd 01       		.byte	0x1
 834 00de 5D       		.byte	0x5d
 835 00df 6B000000 		.4byte	0x6b
 836 00e3 02       		.uleb128 0x2
 837 00e4 91       		.byte	0x91
 838 00e5 76       		.sleb128 -10
 839 00e6 00       		.byte	0
 840 00e7 09       		.uleb128 0x9
 841 00e8 34000000 		.4byte	.LASF18
 842 00ec 01       		.byte	0x1
 843 00ed C7       		.byte	0xc7
 844 00ee 00000000 		.4byte	.LFB2
 845 00f2 20000000 		.4byte	.LFE2-.LFB2
 846 00f6 01       		.uleb128 0x1
 847 00f7 9C       		.byte	0x9c
 848 00f8 09       		.uleb128 0x9
 849 00f9 D0010000 		.4byte	.LASF19
 850 00fd 01       		.byte	0x1
 851 00fe E9       		.byte	0xe9
 852 00ff 00000000 		.4byte	.LFB3
 853 0103 20000000 		.4byte	.LFE3-.LFB3
 854 0107 01       		.uleb128 0x1
 855 0108 9C       		.byte	0x9c
 856 0109 0A       		.uleb128 0xa
 857 010a 74020000 		.4byte	.LASF21
 858 010e 01       		.byte	0x1
 859 010f 9301     		.2byte	0x193
 860 0111 00000000 		.4byte	.LFB4
 861 0115 20000000 		.4byte	.LFE4-.LFB4
 862 0119 01       		.uleb128 0x1
 863 011a 9C       		.byte	0x9c
 864 011b 2F010000 		.4byte	0x12f
 865 011f 0B       		.uleb128 0xb
 866 0120 A8000000 		.4byte	.LASF24
 867 0124 01       		.byte	0x1
 868 0125 9301     		.2byte	0x193
 869 0127 6B000000 		.4byte	0x6b
 870 012b 02       		.uleb128 0x2
 871 012c 91       		.byte	0x91
 872 012d 77       		.sleb128 -9
 873 012e 00       		.byte	0
 874 012f 0C       		.uleb128 0xc
 875 0130 54000000 		.4byte	.LASF30
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 32


 876 0134 01       		.byte	0x1
 877 0135 A901     		.2byte	0x1a9
 878 0137 6B000000 		.4byte	0x6b
 879 013b 00000000 		.4byte	.LFB5
 880 013f 20000000 		.4byte	.LFE5-.LFB5
 881 0143 01       		.uleb128 0x1
 882 0144 9C       		.byte	0x9c
 883 0145 0D       		.uleb128 0xd
 884 0146 E9010000 		.4byte	.LASF22
 885 014a 01       		.byte	0x1
 886 014b C501     		.2byte	0x1c5
 887 014d 00000000 		.4byte	.LFB6
 888 0151 1A000000 		.4byte	.LFE6-.LFB6
 889 0155 01       		.uleb128 0x1
 890 0156 9C       		.byte	0x9c
 891 0157 0A       		.uleb128 0xa
 892 0158 EF000000 		.4byte	.LASF23
 893 015c 01       		.byte	0x1
 894 015d E201     		.2byte	0x1e2
 895 015f 00000000 		.4byte	.LFB7
 896 0163 20000000 		.4byte	.LFE7-.LFB7
 897 0167 01       		.uleb128 0x1
 898 0168 9C       		.byte	0x9c
 899 0169 7D010000 		.4byte	0x17d
 900 016d 0B       		.uleb128 0xb
 901 016e 12000000 		.4byte	.LASF25
 902 0172 01       		.byte	0x1
 903 0173 E201     		.2byte	0x1e2
 904 0175 6B000000 		.4byte	0x6b
 905 0179 02       		.uleb128 0x2
 906 017a 91       		.byte	0x91
 907 017b 77       		.sleb128 -9
 908 017c 00       		.byte	0
 909 017d 0A       		.uleb128 0xa
 910 017e 0F010000 		.4byte	.LASF26
 911 0182 01       		.byte	0x1
 912 0183 0402     		.2byte	0x204
 913 0185 00000000 		.4byte	.LFB8
 914 0189 20000000 		.4byte	.LFE8-.LFB8
 915 018d 01       		.uleb128 0x1
 916 018e 9C       		.byte	0x9c
 917 018f A3010000 		.4byte	0x1a3
 918 0193 0B       		.uleb128 0xb
 919 0194 10030000 		.4byte	.LASF27
 920 0198 01       		.byte	0x1
 921 0199 0402     		.2byte	0x204
 922 019b 6B000000 		.4byte	0x6b
 923 019f 02       		.uleb128 0x2
 924 01a0 91       		.byte	0x91
 925 01a1 77       		.sleb128 -9
 926 01a2 00       		.byte	0
 927 01a3 0A       		.uleb128 0xa
 928 01a4 80000000 		.4byte	.LASF28
 929 01a8 01       		.byte	0x1
 930 01a9 AC02     		.2byte	0x2ac
 931 01ab 00000000 		.4byte	.LFB9
 932 01af 20000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 33


 933 01b3 01       		.uleb128 0x1
 934 01b4 9C       		.byte	0x9c
 935 01b5 C9010000 		.4byte	0x1c9
 936 01b9 0B       		.uleb128 0xb
 937 01ba 66020000 		.4byte	.LASF29
 938 01be 01       		.byte	0x1
 939 01bf AC02     		.2byte	0x2ac
 940 01c1 6B000000 		.4byte	0x6b
 941 01c5 02       		.uleb128 0x2
 942 01c6 91       		.byte	0x91
 943 01c7 77       		.sleb128 -9
 944 01c8 00       		.byte	0
 945 01c9 0C       		.uleb128 0xc
 946 01ca B7010000 		.4byte	.LASF31
 947 01ce 01       		.byte	0x1
 948 01cf C702     		.2byte	0x2c7
 949 01d1 6B000000 		.4byte	0x6b
 950 01d5 00000000 		.4byte	.LFB10
 951 01d9 18000000 		.4byte	.LFE10-.LFB10
 952 01dd 01       		.uleb128 0x1
 953 01de 9C       		.byte	0x9c
 954 01df 0E       		.uleb128 0xe
 955 01e0 66000000 		.4byte	.LASF41
 956 01e4 01       		.byte	0x1
 957 01e5 E102     		.2byte	0x2e1
 958 01e7 6B000000 		.4byte	0x6b
 959 01eb 00000000 		.4byte	.LFB11
 960 01ef 20000000 		.4byte	.LFE11-.LFB11
 961 01f3 01       		.uleb128 0x1
 962 01f4 9C       		.byte	0x9c
 963 01f5 09020000 		.4byte	0x209
 964 01f9 0F       		.uleb128 0xf
 965 01fa 2E020000 		.4byte	.LASF32
 966 01fe 01       		.byte	0x1
 967 01ff E302     		.2byte	0x2e3
 968 0201 6B000000 		.4byte	0x6b
 969 0205 02       		.uleb128 0x2
 970 0206 91       		.byte	0x91
 971 0207 77       		.sleb128 -9
 972 0208 00       		.byte	0
 973 0209 0A       		.uleb128 0xa
 974 020a 19000000 		.4byte	.LASF33
 975 020e 01       		.byte	0x1
 976 020f FD02     		.2byte	0x2fd
 977 0211 00000000 		.4byte	.LFB12
 978 0215 20000000 		.4byte	.LFE12-.LFB12
 979 0219 01       		.uleb128 0x1
 980 021a 9C       		.byte	0x9c
 981 021b 2F020000 		.4byte	0x22f
 982 021f 0B       		.uleb128 0xb
 983 0220 07010000 		.4byte	.LASF34
 984 0224 01       		.byte	0x1
 985 0225 FD02     		.2byte	0x2fd
 986 0227 6B000000 		.4byte	0x6b
 987 022b 02       		.uleb128 0x2
 988 022c 91       		.byte	0x91
 989 022d 77       		.sleb128 -9
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 34


 990 022e 00       		.byte	0
 991 022f 0C       		.uleb128 0xc
 992 0230 00000000 		.4byte	.LASF35
 993 0234 01       		.byte	0x1
 994 0235 1603     		.2byte	0x316
 995 0237 6B000000 		.4byte	0x6b
 996 023b 00000000 		.4byte	.LFB13
 997 023f 18000000 		.4byte	.LFE13-.LFB13
 998 0243 01       		.uleb128 0x1
 999 0244 9C       		.byte	0x9c
 1000 0245 0C       		.uleb128 0xc
 1001 0246 18030000 		.4byte	.LASF36
 1002 024a 01       		.byte	0x1
 1003 024b 3003     		.2byte	0x330
 1004 024d 6B000000 		.4byte	0x6b
 1005 0251 00000000 		.4byte	.LFB14
 1006 0255 18000000 		.4byte	.LFE14-.LFB14
 1007 0259 01       		.uleb128 0x1
 1008 025a 9C       		.byte	0x9c
 1009 025b 0C       		.uleb128 0xc
 1010 025c F9010000 		.4byte	.LASF37
 1011 0260 01       		.byte	0x1
 1012 0261 7403     		.2byte	0x374
 1013 0263 6B000000 		.4byte	0x6b
 1014 0267 00000000 		.4byte	.LFB15
 1015 026b 18000000 		.4byte	.LFE15-.LFB15
 1016 026f 01       		.uleb128 0x1
 1017 0270 9C       		.byte	0x9c
 1018 0271 10       		.uleb128 0x10
 1019 0272 DB010000 		.4byte	.LASF42
 1020 0276 01       		.byte	0x1
 1021 0277 20       		.byte	0x20
 1022 0278 6B000000 		.4byte	0x6b
 1023 027c 05       		.uleb128 0x5
 1024 027d 03       		.byte	0x3
 1025 027e 00000000 		.4byte	PWM_6_initVar
 1026 0282 00       		.byte	0
 1027              		.section	.debug_abbrev,"",%progbits
 1028              	.Ldebug_abbrev0:
 1029 0000 01       		.uleb128 0x1
 1030 0001 11       		.uleb128 0x11
 1031 0002 01       		.byte	0x1
 1032 0003 25       		.uleb128 0x25
 1033 0004 0E       		.uleb128 0xe
 1034 0005 13       		.uleb128 0x13
 1035 0006 0B       		.uleb128 0xb
 1036 0007 03       		.uleb128 0x3
 1037 0008 0E       		.uleb128 0xe
 1038 0009 1B       		.uleb128 0x1b
 1039 000a 0E       		.uleb128 0xe
 1040 000b 55       		.uleb128 0x55
 1041 000c 17       		.uleb128 0x17
 1042 000d 11       		.uleb128 0x11
 1043 000e 01       		.uleb128 0x1
 1044 000f 10       		.uleb128 0x10
 1045 0010 17       		.uleb128 0x17
 1046 0011 00       		.byte	0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 35


 1047 0012 00       		.byte	0
 1048 0013 02       		.uleb128 0x2
 1049 0014 24       		.uleb128 0x24
 1050 0015 00       		.byte	0
 1051 0016 0B       		.uleb128 0xb
 1052 0017 0B       		.uleb128 0xb
 1053 0018 3E       		.uleb128 0x3e
 1054 0019 0B       		.uleb128 0xb
 1055 001a 03       		.uleb128 0x3
 1056 001b 0E       		.uleb128 0xe
 1057 001c 00       		.byte	0
 1058 001d 00       		.byte	0
 1059 001e 03       		.uleb128 0x3
 1060 001f 24       		.uleb128 0x24
 1061 0020 00       		.byte	0
 1062 0021 0B       		.uleb128 0xb
 1063 0022 0B       		.uleb128 0xb
 1064 0023 3E       		.uleb128 0x3e
 1065 0024 0B       		.uleb128 0xb
 1066 0025 03       		.uleb128 0x3
 1067 0026 08       		.uleb128 0x8
 1068 0027 00       		.byte	0
 1069 0028 00       		.byte	0
 1070 0029 04       		.uleb128 0x4
 1071 002a 16       		.uleb128 0x16
 1072 002b 00       		.byte	0
 1073 002c 03       		.uleb128 0x3
 1074 002d 0E       		.uleb128 0xe
 1075 002e 3A       		.uleb128 0x3a
 1076 002f 0B       		.uleb128 0xb
 1077 0030 3B       		.uleb128 0x3b
 1078 0031 05       		.uleb128 0x5
 1079 0032 49       		.uleb128 0x49
 1080 0033 13       		.uleb128 0x13
 1081 0034 00       		.byte	0
 1082 0035 00       		.byte	0
 1083 0036 05       		.uleb128 0x5
 1084 0037 35       		.uleb128 0x35
 1085 0038 00       		.byte	0
 1086 0039 49       		.uleb128 0x49
 1087 003a 13       		.uleb128 0x13
 1088 003b 00       		.byte	0
 1089 003c 00       		.byte	0
 1090 003d 06       		.uleb128 0x6
 1091 003e 2E       		.uleb128 0x2e
 1092 003f 00       		.byte	0
 1093 0040 3F       		.uleb128 0x3f
 1094 0041 19       		.uleb128 0x19
 1095 0042 03       		.uleb128 0x3
 1096 0043 0E       		.uleb128 0xe
 1097 0044 3A       		.uleb128 0x3a
 1098 0045 0B       		.uleb128 0xb
 1099 0046 3B       		.uleb128 0x3b
 1100 0047 0B       		.uleb128 0xb
 1101 0048 27       		.uleb128 0x27
 1102 0049 19       		.uleb128 0x19
 1103 004a 11       		.uleb128 0x11
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 36


 1104 004b 01       		.uleb128 0x1
 1105 004c 12       		.uleb128 0x12
 1106 004d 06       		.uleb128 0x6
 1107 004e 40       		.uleb128 0x40
 1108 004f 18       		.uleb128 0x18
 1109 0050 9642     		.uleb128 0x2116
 1110 0052 19       		.uleb128 0x19
 1111 0053 00       		.byte	0
 1112 0054 00       		.byte	0
 1113 0055 07       		.uleb128 0x7
 1114 0056 2E       		.uleb128 0x2e
 1115 0057 01       		.byte	0x1
 1116 0058 3F       		.uleb128 0x3f
 1117 0059 19       		.uleb128 0x19
 1118 005a 03       		.uleb128 0x3
 1119 005b 0E       		.uleb128 0xe
 1120 005c 3A       		.uleb128 0x3a
 1121 005d 0B       		.uleb128 0xb
 1122 005e 3B       		.uleb128 0x3b
 1123 005f 0B       		.uleb128 0xb
 1124 0060 27       		.uleb128 0x27
 1125 0061 19       		.uleb128 0x19
 1126 0062 11       		.uleb128 0x11
 1127 0063 01       		.uleb128 0x1
 1128 0064 12       		.uleb128 0x12
 1129 0065 06       		.uleb128 0x6
 1130 0066 40       		.uleb128 0x40
 1131 0067 18       		.uleb128 0x18
 1132 0068 9642     		.uleb128 0x2116
 1133 006a 19       		.uleb128 0x19
 1134 006b 01       		.uleb128 0x1
 1135 006c 13       		.uleb128 0x13
 1136 006d 00       		.byte	0
 1137 006e 00       		.byte	0
 1138 006f 08       		.uleb128 0x8
 1139 0070 34       		.uleb128 0x34
 1140 0071 00       		.byte	0
 1141 0072 03       		.uleb128 0x3
 1142 0073 0E       		.uleb128 0xe
 1143 0074 3A       		.uleb128 0x3a
 1144 0075 0B       		.uleb128 0xb
 1145 0076 3B       		.uleb128 0x3b
 1146 0077 0B       		.uleb128 0xb
 1147 0078 49       		.uleb128 0x49
 1148 0079 13       		.uleb128 0x13
 1149 007a 02       		.uleb128 0x2
 1150 007b 18       		.uleb128 0x18
 1151 007c 00       		.byte	0
 1152 007d 00       		.byte	0
 1153 007e 09       		.uleb128 0x9
 1154 007f 2E       		.uleb128 0x2e
 1155 0080 00       		.byte	0
 1156 0081 3F       		.uleb128 0x3f
 1157 0082 19       		.uleb128 0x19
 1158 0083 03       		.uleb128 0x3
 1159 0084 0E       		.uleb128 0xe
 1160 0085 3A       		.uleb128 0x3a
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 37


 1161 0086 0B       		.uleb128 0xb
 1162 0087 3B       		.uleb128 0x3b
 1163 0088 0B       		.uleb128 0xb
 1164 0089 27       		.uleb128 0x27
 1165 008a 19       		.uleb128 0x19
 1166 008b 11       		.uleb128 0x11
 1167 008c 01       		.uleb128 0x1
 1168 008d 12       		.uleb128 0x12
 1169 008e 06       		.uleb128 0x6
 1170 008f 40       		.uleb128 0x40
 1171 0090 18       		.uleb128 0x18
 1172 0091 9742     		.uleb128 0x2117
 1173 0093 19       		.uleb128 0x19
 1174 0094 00       		.byte	0
 1175 0095 00       		.byte	0
 1176 0096 0A       		.uleb128 0xa
 1177 0097 2E       		.uleb128 0x2e
 1178 0098 01       		.byte	0x1
 1179 0099 3F       		.uleb128 0x3f
 1180 009a 19       		.uleb128 0x19
 1181 009b 03       		.uleb128 0x3
 1182 009c 0E       		.uleb128 0xe
 1183 009d 3A       		.uleb128 0x3a
 1184 009e 0B       		.uleb128 0xb
 1185 009f 3B       		.uleb128 0x3b
 1186 00a0 05       		.uleb128 0x5
 1187 00a1 27       		.uleb128 0x27
 1188 00a2 19       		.uleb128 0x19
 1189 00a3 11       		.uleb128 0x11
 1190 00a4 01       		.uleb128 0x1
 1191 00a5 12       		.uleb128 0x12
 1192 00a6 06       		.uleb128 0x6
 1193 00a7 40       		.uleb128 0x40
 1194 00a8 18       		.uleb128 0x18
 1195 00a9 9742     		.uleb128 0x2117
 1196 00ab 19       		.uleb128 0x19
 1197 00ac 01       		.uleb128 0x1
 1198 00ad 13       		.uleb128 0x13
 1199 00ae 00       		.byte	0
 1200 00af 00       		.byte	0
 1201 00b0 0B       		.uleb128 0xb
 1202 00b1 05       		.uleb128 0x5
 1203 00b2 00       		.byte	0
 1204 00b3 03       		.uleb128 0x3
 1205 00b4 0E       		.uleb128 0xe
 1206 00b5 3A       		.uleb128 0x3a
 1207 00b6 0B       		.uleb128 0xb
 1208 00b7 3B       		.uleb128 0x3b
 1209 00b8 05       		.uleb128 0x5
 1210 00b9 49       		.uleb128 0x49
 1211 00ba 13       		.uleb128 0x13
 1212 00bb 02       		.uleb128 0x2
 1213 00bc 18       		.uleb128 0x18
 1214 00bd 00       		.byte	0
 1215 00be 00       		.byte	0
 1216 00bf 0C       		.uleb128 0xc
 1217 00c0 2E       		.uleb128 0x2e
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 38


 1218 00c1 00       		.byte	0
 1219 00c2 3F       		.uleb128 0x3f
 1220 00c3 19       		.uleb128 0x19
 1221 00c4 03       		.uleb128 0x3
 1222 00c5 0E       		.uleb128 0xe
 1223 00c6 3A       		.uleb128 0x3a
 1224 00c7 0B       		.uleb128 0xb
 1225 00c8 3B       		.uleb128 0x3b
 1226 00c9 05       		.uleb128 0x5
 1227 00ca 27       		.uleb128 0x27
 1228 00cb 19       		.uleb128 0x19
 1229 00cc 49       		.uleb128 0x49
 1230 00cd 13       		.uleb128 0x13
 1231 00ce 11       		.uleb128 0x11
 1232 00cf 01       		.uleb128 0x1
 1233 00d0 12       		.uleb128 0x12
 1234 00d1 06       		.uleb128 0x6
 1235 00d2 40       		.uleb128 0x40
 1236 00d3 18       		.uleb128 0x18
 1237 00d4 9742     		.uleb128 0x2117
 1238 00d6 19       		.uleb128 0x19
 1239 00d7 00       		.byte	0
 1240 00d8 00       		.byte	0
 1241 00d9 0D       		.uleb128 0xd
 1242 00da 2E       		.uleb128 0x2e
 1243 00db 00       		.byte	0
 1244 00dc 3F       		.uleb128 0x3f
 1245 00dd 19       		.uleb128 0x19
 1246 00de 03       		.uleb128 0x3
 1247 00df 0E       		.uleb128 0xe
 1248 00e0 3A       		.uleb128 0x3a
 1249 00e1 0B       		.uleb128 0xb
 1250 00e2 3B       		.uleb128 0x3b
 1251 00e3 05       		.uleb128 0x5
 1252 00e4 27       		.uleb128 0x27
 1253 00e5 19       		.uleb128 0x19
 1254 00e6 11       		.uleb128 0x11
 1255 00e7 01       		.uleb128 0x1
 1256 00e8 12       		.uleb128 0x12
 1257 00e9 06       		.uleb128 0x6
 1258 00ea 40       		.uleb128 0x40
 1259 00eb 18       		.uleb128 0x18
 1260 00ec 9642     		.uleb128 0x2116
 1261 00ee 19       		.uleb128 0x19
 1262 00ef 00       		.byte	0
 1263 00f0 00       		.byte	0
 1264 00f1 0E       		.uleb128 0xe
 1265 00f2 2E       		.uleb128 0x2e
 1266 00f3 01       		.byte	0x1
 1267 00f4 3F       		.uleb128 0x3f
 1268 00f5 19       		.uleb128 0x19
 1269 00f6 03       		.uleb128 0x3
 1270 00f7 0E       		.uleb128 0xe
 1271 00f8 3A       		.uleb128 0x3a
 1272 00f9 0B       		.uleb128 0xb
 1273 00fa 3B       		.uleb128 0x3b
 1274 00fb 05       		.uleb128 0x5
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 39


 1275 00fc 27       		.uleb128 0x27
 1276 00fd 19       		.uleb128 0x19
 1277 00fe 49       		.uleb128 0x49
 1278 00ff 13       		.uleb128 0x13
 1279 0100 11       		.uleb128 0x11
 1280 0101 01       		.uleb128 0x1
 1281 0102 12       		.uleb128 0x12
 1282 0103 06       		.uleb128 0x6
 1283 0104 40       		.uleb128 0x40
 1284 0105 18       		.uleb128 0x18
 1285 0106 9742     		.uleb128 0x2117
 1286 0108 19       		.uleb128 0x19
 1287 0109 01       		.uleb128 0x1
 1288 010a 13       		.uleb128 0x13
 1289 010b 00       		.byte	0
 1290 010c 00       		.byte	0
 1291 010d 0F       		.uleb128 0xf
 1292 010e 34       		.uleb128 0x34
 1293 010f 00       		.byte	0
 1294 0110 03       		.uleb128 0x3
 1295 0111 0E       		.uleb128 0xe
 1296 0112 3A       		.uleb128 0x3a
 1297 0113 0B       		.uleb128 0xb
 1298 0114 3B       		.uleb128 0x3b
 1299 0115 05       		.uleb128 0x5
 1300 0116 49       		.uleb128 0x49
 1301 0117 13       		.uleb128 0x13
 1302 0118 02       		.uleb128 0x2
 1303 0119 18       		.uleb128 0x18
 1304 011a 00       		.byte	0
 1305 011b 00       		.byte	0
 1306 011c 10       		.uleb128 0x10
 1307 011d 34       		.uleb128 0x34
 1308 011e 00       		.byte	0
 1309 011f 03       		.uleb128 0x3
 1310 0120 0E       		.uleb128 0xe
 1311 0121 3A       		.uleb128 0x3a
 1312 0122 0B       		.uleb128 0xb
 1313 0123 3B       		.uleb128 0x3b
 1314 0124 0B       		.uleb128 0xb
 1315 0125 49       		.uleb128 0x49
 1316 0126 13       		.uleb128 0x13
 1317 0127 3F       		.uleb128 0x3f
 1318 0128 19       		.uleb128 0x19
 1319 0129 02       		.uleb128 0x2
 1320 012a 18       		.uleb128 0x18
 1321 012b 00       		.byte	0
 1322 012c 00       		.byte	0
 1323 012d 00       		.byte	0
 1324              		.section	.debug_aranges,"",%progbits
 1325 0000 94000000 		.4byte	0x94
 1326 0004 0200     		.2byte	0x2
 1327 0006 00000000 		.4byte	.Ldebug_info0
 1328 000a 04       		.byte	0x4
 1329 000b 00       		.byte	0
 1330 000c 0000     		.2byte	0
 1331 000e 0000     		.2byte	0
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 40


 1332 0010 00000000 		.4byte	.LFB0
 1333 0014 20000000 		.4byte	.LFE0-.LFB0
 1334 0018 00000000 		.4byte	.LFB1
 1335 001c 78000000 		.4byte	.LFE1-.LFB1
 1336 0020 00000000 		.4byte	.LFB2
 1337 0024 20000000 		.4byte	.LFE2-.LFB2
 1338 0028 00000000 		.4byte	.LFB3
 1339 002c 20000000 		.4byte	.LFE3-.LFB3
 1340 0030 00000000 		.4byte	.LFB4
 1341 0034 20000000 		.4byte	.LFE4-.LFB4
 1342 0038 00000000 		.4byte	.LFB5
 1343 003c 20000000 		.4byte	.LFE5-.LFB5
 1344 0040 00000000 		.4byte	.LFB6
 1345 0044 1A000000 		.4byte	.LFE6-.LFB6
 1346 0048 00000000 		.4byte	.LFB7
 1347 004c 20000000 		.4byte	.LFE7-.LFB7
 1348 0050 00000000 		.4byte	.LFB8
 1349 0054 20000000 		.4byte	.LFE8-.LFB8
 1350 0058 00000000 		.4byte	.LFB9
 1351 005c 20000000 		.4byte	.LFE9-.LFB9
 1352 0060 00000000 		.4byte	.LFB10
 1353 0064 18000000 		.4byte	.LFE10-.LFB10
 1354 0068 00000000 		.4byte	.LFB11
 1355 006c 20000000 		.4byte	.LFE11-.LFB11
 1356 0070 00000000 		.4byte	.LFB12
 1357 0074 20000000 		.4byte	.LFE12-.LFB12
 1358 0078 00000000 		.4byte	.LFB13
 1359 007c 18000000 		.4byte	.LFE13-.LFB13
 1360 0080 00000000 		.4byte	.LFB14
 1361 0084 18000000 		.4byte	.LFE14-.LFB14
 1362 0088 00000000 		.4byte	.LFB15
 1363 008c 18000000 		.4byte	.LFE15-.LFB15
 1364 0090 00000000 		.4byte	0
 1365 0094 00000000 		.4byte	0
 1366              		.section	.debug_ranges,"",%progbits
 1367              	.Ldebug_ranges0:
 1368 0000 00000000 		.4byte	.LFB0
 1369 0004 20000000 		.4byte	.LFE0
 1370 0008 00000000 		.4byte	.LFB1
 1371 000c 78000000 		.4byte	.LFE1
 1372 0010 00000000 		.4byte	.LFB2
 1373 0014 20000000 		.4byte	.LFE2
 1374 0018 00000000 		.4byte	.LFB3
 1375 001c 20000000 		.4byte	.LFE3
 1376 0020 00000000 		.4byte	.LFB4
 1377 0024 20000000 		.4byte	.LFE4
 1378 0028 00000000 		.4byte	.LFB5
 1379 002c 20000000 		.4byte	.LFE5
 1380 0030 00000000 		.4byte	.LFB6
 1381 0034 1A000000 		.4byte	.LFE6
 1382 0038 00000000 		.4byte	.LFB7
 1383 003c 20000000 		.4byte	.LFE7
 1384 0040 00000000 		.4byte	.LFB8
 1385 0044 20000000 		.4byte	.LFE8
 1386 0048 00000000 		.4byte	.LFB9
 1387 004c 20000000 		.4byte	.LFE9
 1388 0050 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 41


 1389 0054 18000000 		.4byte	.LFE10
 1390 0058 00000000 		.4byte	.LFB11
 1391 005c 20000000 		.4byte	.LFE11
 1392 0060 00000000 		.4byte	.LFB12
 1393 0064 20000000 		.4byte	.LFE12
 1394 0068 00000000 		.4byte	.LFB13
 1395 006c 18000000 		.4byte	.LFE13
 1396 0070 00000000 		.4byte	.LFB14
 1397 0074 18000000 		.4byte	.LFE14
 1398 0078 00000000 		.4byte	.LFB15
 1399 007c 18000000 		.4byte	.LFE15
 1400 0080 00000000 		.4byte	0
 1401 0084 00000000 		.4byte	0
 1402              		.section	.debug_line,"",%progbits
 1403              	.Ldebug_line0:
 1404 0000 82010000 		.section	.debug_str,"MS",%progbits,1
 1404      02004200 
 1404      00000201 
 1404      FB0E0D00 
 1404      01010101 
 1405              	.LASF35:
 1406 0000 50574D5F 		.ascii	"PWM_6_ReadCapture\000"
 1406      365F5265 
 1406      61644361 
 1406      70747572 
 1406      6500
 1407              	.LASF25:
 1408 0012 70657269 		.ascii	"period\000"
 1408      6F6400
 1409              	.LASF33:
 1410 0019 50574D5F 		.ascii	"PWM_6_WriteControlRegister\000"
 1410      365F5772 
 1410      69746543 
 1410      6F6E7472 
 1410      6F6C5265 
 1411              	.LASF18:
 1412 0034 50574D5F 		.ascii	"PWM_6_Enable\000"
 1412      365F456E 
 1412      61626C65 
 1412      00
 1413              	.LASF3:
 1414 0041 73686F72 		.ascii	"short unsigned int\000"
 1414      7420756E 
 1414      7369676E 
 1414      65642069 
 1414      6E7400
 1415              	.LASF30:
 1416 0054 50574D5F 		.ascii	"PWM_6_ReadCounter\000"
 1416      365F5265 
 1416      6164436F 
 1416      756E7465 
 1416      7200
 1417              	.LASF41:
 1418 0066 50574D5F 		.ascii	"PWM_6_ReadControlRegister\000"
 1418      365F5265 
 1418      6164436F 
 1418      6E74726F 
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 42


 1418      6C526567 
 1419              	.LASF28:
 1420 0080 50574D5F 		.ascii	"PWM_6_SetInterruptMode\000"
 1420      365F5365 
 1420      74496E74 
 1420      65727275 
 1420      70744D6F 
 1421              	.LASF20:
 1422 0097 50574D5F 		.ascii	"PWM_6_Init\000"
 1422      365F496E 
 1422      697400
 1423              	.LASF9:
 1424 00a2 666C6F61 		.ascii	"float\000"
 1424      7400
 1425              	.LASF24:
 1426 00a8 636F756E 		.ascii	"counter\000"
 1426      74657200 
 1427              	.LASF1:
 1428 00b0 756E7369 		.ascii	"unsigned char\000"
 1428      676E6564 
 1428      20636861 
 1428      7200
 1429              	.LASF39:
 1430 00be 47656E65 		.ascii	"Generated_Source\\PSoC5\\PWM_6.c\000"
 1430      72617465 
 1430      645F536F 
 1430      75726365 
 1430      5C50536F 
 1431              	.LASF5:
 1432 00dd 6C6F6E67 		.ascii	"long unsigned int\000"
 1432      20756E73 
 1432      69676E65 
 1432      6420696E 
 1432      7400
 1433              	.LASF23:
 1434 00ef 50574D5F 		.ascii	"PWM_6_WritePeriod\000"
 1434      365F5772 
 1434      69746550 
 1434      6572696F 
 1434      6400
 1435              	.LASF12:
 1436 0101 75696E74 		.ascii	"uint8\000"
 1436      3800
 1437              	.LASF34:
 1438 0107 636F6E74 		.ascii	"control\000"
 1438      726F6C00 
 1439              	.LASF26:
 1440 010f 50574D5F 		.ascii	"PWM_6_WriteCompare\000"
 1440      365F5772 
 1440      69746543 
 1440      6F6D7061 
 1440      726500
 1441              	.LASF38:
 1442 0122 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1442      4320342E 
 1442      392E3320 
 1442      32303135 
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 43


 1442      30333033 
 1443 0155 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1443      20726576 
 1443      6973696F 
 1443      6E203232 
 1443      31323230 
 1444 0188 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1444      66756E63 
 1444      74696F6E 
 1444      2D736563 
 1444      74696F6E 
 1445              	.LASF10:
 1446 01b0 646F7562 		.ascii	"double\000"
 1446      6C6500
 1447              	.LASF31:
 1448 01b7 50574D5F 		.ascii	"PWM_6_ReadStatusRegister\000"
 1448      365F5265 
 1448      61645374 
 1448      61747573 
 1448      52656769 
 1449              	.LASF19:
 1450 01d0 50574D5F 		.ascii	"PWM_6_Stop\000"
 1450      365F5374 
 1450      6F7000
 1451              	.LASF42:
 1452 01db 50574D5F 		.ascii	"PWM_6_initVar\000"
 1452      365F696E 
 1452      69745661 
 1452      7200
 1453              	.LASF22:
 1454 01e9 50574D5F 		.ascii	"PWM_6_ClearFIFO\000"
 1454      365F436C 
 1454      65617246 
 1454      49464F00 
 1455              	.LASF37:
 1456 01f9 50574D5F 		.ascii	"PWM_6_ReadPeriod\000"
 1456      365F5265 
 1456      61645065 
 1456      72696F64 
 1456      00
 1457              	.LASF8:
 1458 020a 756E7369 		.ascii	"unsigned int\000"
 1458      676E6564 
 1458      20696E74 
 1458      00
 1459              	.LASF7:
 1460 0217 6C6F6E67 		.ascii	"long long unsigned int\000"
 1460      206C6F6E 
 1460      6720756E 
 1460      7369676E 
 1460      65642069 
 1461              	.LASF32:
 1462 022e 72657375 		.ascii	"result\000"
 1462      6C7400
 1463              	.LASF16:
 1464 0235 50574D5F 		.ascii	"PWM_6_interruptState\000"
 1464      365F696E 
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 44


 1464      74657272 
 1464      75707453 
 1464      74617465 
 1465              	.LASF13:
 1466 024a 72656738 		.ascii	"reg8\000"
 1466      00
 1467              	.LASF14:
 1468 024f 73697A65 		.ascii	"sizetype\000"
 1468      74797065 
 1468      00
 1469              	.LASF6:
 1470 0258 6C6F6E67 		.ascii	"long long int\000"
 1470      206C6F6E 
 1470      6720696E 
 1470      7400
 1471              	.LASF29:
 1472 0266 696E7465 		.ascii	"interruptMode\000"
 1472      72727570 
 1472      744D6F64 
 1472      6500
 1473              	.LASF21:
 1474 0274 50574D5F 		.ascii	"PWM_6_WriteCounter\000"
 1474      365F5772 
 1474      69746543 
 1474      6F756E74 
 1474      657200
 1475              	.LASF2:
 1476 0287 73686F72 		.ascii	"short int\000"
 1476      7420696E 
 1476      7400
 1477              	.LASF40:
 1478 0291 433A5C55 		.ascii	"C:\\Users\\ben\\Documents\\PSoC Creator\\New Pedal "
 1478      73657273 
 1478      5C62656E 
 1478      5C446F63 
 1478      756D656E 
 1479 02bf 5468696E 		.ascii	"Thingz\\PSOC_BIT_MANGLER\\ADC_DAC.cydsn\000"
 1479      677A5C50 
 1479      534F435F 
 1479      4249545F 
 1479      4D414E47 
 1480              	.LASF15:
 1481 02e5 6374726C 		.ascii	"ctrl\000"
 1481      00
 1482              	.LASF17:
 1483 02ea 50574D5F 		.ascii	"PWM_6_Start\000"
 1483      365F5374 
 1483      61727400 
 1484              	.LASF4:
 1485 02f6 6C6F6E67 		.ascii	"long int\000"
 1485      20696E74 
 1485      00
 1486              	.LASF11:
 1487 02ff 63686172 		.ascii	"char\000"
 1487      00
 1488              	.LASF0:
 1489 0304 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\ben\AppData\Local\Temp\ccrbsUxb.s 			page 45


 1489      65642063 
 1489      68617200 
 1490              	.LASF27:
 1491 0310 636F6D70 		.ascii	"compare\000"
 1491      61726500 
 1492              	.LASF36:
 1493 0318 50574D5F 		.ascii	"PWM_6_ReadCompare\000"
 1493      365F5265 
 1493      6164436F 
 1493      6D706172 
 1493      6500
 1494              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
